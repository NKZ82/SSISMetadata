<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/7/2016 11:23:17 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SDVCDPSBI02"
  DTS:CreatorName="CORP\adm1ned"
  DTS:DTSID="{5ABF5BBB-E544-4F51-A42D-F6E3FEE5F5E2}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3008.28"
  DTS:LocaleID="1033"
  DTS:ObjectName="PART_RENT_ROLL"
  DTS:PackageType="5"
  DTS:VersionBuild="761"
  DTS:VersionGUID="{A86DC9D6-9BD4-4469-9AAC-C2AF48F8A83D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[EXCEL.PART_RENT_ROLL]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{A846DACC-18EC-4907-A59C-186CD9FCA3A3}"
      DTS:ObjectName="EXCEL.PART_RENT_ROLL">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::var_InputFileFullPath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=\\corp\appsbur\IC_DM\dev\input\PART\RENT_ROLL\working\2017-04-01 Rent Roll_NOT_TEST.xls;Extended Properties=&quot;EXCEL 12.0 XML;HDR=NO&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8D4F16AC-58EB-407A-AC74-B7D58F8822F6}"
      DTS:ObjectName="BusinessProcessInstanceID"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">TEST2</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{1BDA4078-252C-4305-8ED9-62093AA05D14}"
      DTS:ObjectName="BusinessProcessInstanceIteration"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C1491AF7-DA21-43B7-B882-DD3BD4D87CA0}"
      DTS:ObjectName="DataCode">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">RENT_ROLL</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B2B4E411-FC52-4CF3-888D-7488AC396557}"
      DTS:ObjectName="FileToLoad"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">2017-04-01 Rent Roll_NOT_TEST.xls</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{30098994-96AB-422B-8600-30777BC8194C}"
      DTS:ObjectName="ProviderCode"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">ROH</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B5CA4431-B960-42A4-A948-4E9AF5068550}"
      DTS:ObjectName="SourceCode">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">PART</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CE956D38-0AEC-4ECF-8FE5-6389C31D311A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot; DELETE d FROM staging.PART_CAPEX_BUDGET_Header d JOIN staging.DataLoading dl &#x9;on d.DataLoadingID = dl.DataLoadingID WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = '&quot;+ @[$Package::BusinessProcessInstanceID] +&quot;';  DELETE d FROM staging.PART_CAPEX_BUDGET_Detail d JOIN staging.DataLoading dl &#x9;on d.DataLoadingID = dl.DataLoadingID WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = '&quot;+ @[$Package::BusinessProcessInstanceID] +&quot;'; &quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_DeletePreviousData_CAPEXBUDGET">
      <DTS:VariableValue
        DTS:DataType="8"> DELETE d FROM staging.PART_CAPEX_BUDGET_Header d JOIN staging.DataLoading dl 	on d.DataLoadingID = dl.DataLoadingID WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = 'TEST2';  DELETE d FROM staging.PART_CAPEX_BUDGET_Detail d JOIN staging.DataLoading dl 	on d.DataLoadingID = dl.DataLoadingID WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = 'TEST2'; </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{262FBBEB-1C55-4BF5-9BB8-1CCEB4DD2CF4}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;DELETE d&#xA;FROM staging.PART_INCOME_STMT_Header d&#xA;JOIN staging.DataLoading dl&#xA;&#x9;on d.DataLoadingID = dl.DataLoadingID&#xA;WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = '&quot;+ @[$Package::BusinessProcessInstanceID] +&quot;';&#xA;DELETE d&#xA;FROM staging.PART_INCOME_STMT_Detail d&#xA;JOIN staging.DataLoading dl&#xA;&#x9;on d.DataLoadingID = dl.DataLoadingID&#xA;WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = '&quot;+ @[$Package::BusinessProcessInstanceID] +&quot;';&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_DeletePreviousData_IncomeStatement">
      <DTS:VariableValue
        DTS:DataType="8">DELETE d
FROM staging.PART_INCOME_STMT_Header d
JOIN staging.DataLoading dl
	on d.DataLoadingID = dl.DataLoadingID
WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = 'TEST2';
DELETE d
FROM staging.PART_INCOME_STMT_Detail d
JOIN staging.DataLoading dl
	on d.DataLoadingID = dl.DataLoadingID
WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = 'TEST2';</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{58591538-BB7C-487E-B757-862B410AE485}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&#xA;DELETE d&#xA;FROM staging.PART_RENT_ROLL_Header d&#xA;JOIN staging.DataLoading dl&#xA;&#x9;on d.DataLoadingID = dl.DataLoadingID&#xA;WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = '&quot;+ @[$Package::BusinessProcessInstanceID] +&quot;';&#xA;&#xA;DELETE d&#xA;FROM staging.PART_RENT_ROLL_Detail d&#xA;JOIN staging.DataLoading dl&#xA;&#x9;on d.DataLoadingID = dl.DataLoadingID&#xA;WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = '&quot;+ @[$Package::BusinessProcessInstanceID] +&quot;';&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_DeletePreviousData_RENTROLL">
      <DTS:VariableValue
        DTS:DataType="8">
DELETE d
FROM staging.PART_RENT_ROLL_Header d
JOIN staging.DataLoading dl
	on d.DataLoadingID = dl.DataLoadingID
WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = 'TEST2';

DELETE d
FROM staging.PART_RENT_ROLL_Detail d
JOIN staging.DataLoading dl
	on d.DataLoadingID = dl.DataLoadingID
WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = 'TEST2';
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1A8F8C57-D282-4DFF-A05A-E66A42C9CC4A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;DELETE d&#xA;FROM staging.PART_TRIAL_BALANCE_Header d&#xA;JOIN staging.DataLoading dl&#xA;&#x9;on d.DataLoadingID = dl.DataLoadingID&#xA;WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = '&quot;+ @[$Package::BusinessProcessInstanceID] +&quot;';&#xA;DELETE d&#xA;FROM staging.PART_TRIAL_BALANCE_Detail d&#xA;JOIN staging.DataLoading dl&#xA;&#x9;on d.DataLoadingID = dl.DataLoadingID&#xA;WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = '&quot;+ @[$Package::BusinessProcessInstanceID] +&quot;';&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_DeletePreviousData_TrialBalance">
      <DTS:VariableValue
        DTS:DataType="8">DELETE d
FROM staging.PART_TRIAL_BALANCE_Header d
JOIN staging.DataLoading dl
	on d.DataLoadingID = dl.DataLoadingID
WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = 'TEST2';
DELETE d
FROM staging.PART_TRIAL_BALANCE_Detail d
JOIN staging.DataLoading dl
	on d.DataLoadingID = dl.DataLoadingID
WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = 'TEST2';</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3B64D849-4FD4-4F68-88E5-DD136ECF60D0}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT [ID]&#xA;      ,[TableName]&#xA;      ,[ColumnCount]&#xA;      ,[RowNumber]&#xA;      ,[F1]&#xA;      ,[F2]&#xA;      ,[F3]&#xA;      ,[F4]&#xA;      ,[F5]&#xA;      ,[F6]&#xA;      ,[F7]&#xA;      ,[F8]&#xA;      ,[F9]&#xA;      ,[F10]&#xA;      ,[F11]&#xA;      ,[F12]&#xA;      ,[F13]&#xA;      ,[F14]&#xA;      ,[F15]&#xA;      ,[F16]&#xA;      ,[F17]&#xA;      ,[F18]&#xA;      ,[F19]&#xA;      ,[F20]&#xA;      ,[F21]&#xA;      ,[F22]&#xA;      ,[F23]&#xA;      ,[F24]&#xA;      ,[F25]&#xA;      ,[F26]&#xA;      ,[F27]&#xA;      ,[F28]&#xA;      ,[F29]&#xA;      ,[F30]&#xA;      ,[F31]&#xA;      ,[F32]&#xA;      ,[F33]&#xA;      ,[F34]&#xA;      ,[F35]&#xA;      ,[F36]&#xA;      ,[F37]&#xA;      ,[F38]&#xA;      ,[F39]&#xA;      ,[F40]&#xA;      ,[F41]&#xA;      ,[F42]&#xA;      ,[F43]&#xA;      ,[F44]&#xA;      ,[F45]&#xA;      ,[F46]&#xA;      ,[F47]&#xA;      ,[F48]&#xA;      ,[F49]&#xA;      ,[F50]&#xA;      ,[DataLoadingID]&#xA;FROM [staging].[FileData] WHERE DataLoadingID = &quot;+ (DT_WSTR, 50)@[User::var_DataLoadingID] +&quot; ORDER BY ID&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_GetFileData">
      <DTS:VariableValue
        DTS:DataType="8">SELECT [ID]
      ,[TableName]
      ,[ColumnCount]
      ,[RowNumber]
      ,[F1]
      ,[F2]
      ,[F3]
      ,[F4]
      ,[F5]
      ,[F6]
      ,[F7]
      ,[F8]
      ,[F9]
      ,[F10]
      ,[F11]
      ,[F12]
      ,[F13]
      ,[F14]
      ,[F15]
      ,[F16]
      ,[F17]
      ,[F18]
      ,[F19]
      ,[F20]
      ,[F21]
      ,[F22]
      ,[F23]
      ,[F24]
      ,[F25]
      ,[F26]
      ,[F27]
      ,[F28]
      ,[F29]
      ,[F30]
      ,[F31]
      ,[F32]
      ,[F33]
      ,[F34]
      ,[F35]
      ,[F36]
      ,[F37]
      ,[F38]
      ,[F39]
      ,[F40]
      ,[F41]
      ,[F42]
      ,[F43]
      ,[F44]
      ,[F45]
      ,[F46]
      ,[F47]
      ,[F48]
      ,[F49]
      ,[F50]
      ,[DataLoadingID]
FROM [staging].[FileData] WHERE DataLoadingID = 5 ORDER BY ID</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{296450AE-6776-4462-A963-D726F91D07E8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&#xA;&#xA;exec [staging].[sp_Get_FileData_by_Format] &quot; +  (DT_WSTR, 50)@[User::var_DataLoadingID] + &quot;, '&quot; +   @[User::var_InputFileDataFormat] + &quot;'&#xA;WITH RESULT SETS&#xA;(&#xA;&#x9;(&#xA;&#x9;&#x9;[ID] [int] NOT NULL,[TableName] [nvarchar](255) NOT NULL,[ColumnCount] [int] NOT NULL,[RowNumber] [int] NOT NULL,[F1] [nvarchar](255) NULL,[F2] [nvarchar](255) NULL,[F3] [nvarchar](255) NULL,[F4] [nvarchar](255) NULL,[F5] [nvarchar](255) NULL,[F6] [nvarchar](255) NULL,[F7] [nvarchar](255) NULL,[F8] [nvarchar](255) NULL,[F9] [nvarchar](255) NULL,[F10] [nvarchar](255) NULL,[F11] [nvarchar](255) NULL,[F12] [nvarchar](255) NULL,[F13] [nvarchar](255) NULL,[F14] [nvarchar](255) NULL,[F15] [nvarchar](255) NULL,[F16] [nvarchar](255) NULL,[F17] [nvarchar](255) NULL,[F18] [nvarchar](255) NULL,[F19] [nvarchar](255) NULL,[F20] [nvarchar](255) NULL,[F21] [nvarchar](255) NULL,[F22] [nvarchar](255) NULL,[F23] [nvarchar](255) NULL,[F24] [nvarchar](255) NULL,[F25] [nvarchar](255) NULL,[F26] [nvarchar](255) NULL,[F27] [nvarchar](255) NULL,[F28] [nvarchar](255) NULL,[F29] [nvarchar](255) NULL,[F30] [nvarchar](255) NULL,[F31] [nvarchar](255) NULL,[F32] [nvarchar](255) NULL,[F33] [nvarchar](255) NULL,[F34] [nvarchar](255) NULL,[F35] [nvarchar](255) NULL,[F36] [nvarchar](255) NULL,[F37] [nvarchar](255) NULL,[F38] [nvarchar](255) NULL,[F39] [nvarchar](255) NULL,[F40] [nvarchar](255) NULL,[F41] [nvarchar](255) NULL,[F42] [nvarchar](255) NULL,[F43] [nvarchar](255) NULL,[F44] [nvarchar](255) NULL,[F45] [nvarchar](255) NULL,[F46] [nvarchar](255) NULL,[F47] [nvarchar](255) NULL,[F48] [nvarchar](255) NULL,[F49] [nvarchar](255) NULL,[F50] [nvarchar](255) NULL,[DataLoadingID] [int] NOT NULL&#xA;&#x9;&#x9;-- Custom columns &#xA;&#x9;&#x9;,Header_ColName [nvarchar](20)&#xA;&#x9;&#x9;,Account_ColName [nvarchar](20)&#xA;&#x9;&#x9;,AccountDesc_ColName [nvarchar](20)&#xA;&#x9;&#x9;,SoldeDebut_ColName [nvarchar](20)&#xA;&#x9;&#x9;,Debit_ColName [nvarchar](20)&#xA;&#x9;&#x9;,Credit_ColName [nvarchar](20)&#xA;&#x9;&#x9;,SoldeFin_ColName [nvarchar](20)&#xA;&#x9;&#x9;,IsHeaderRow bit&#xA;&#x9;&#x9;,IsDetailRow bit&#xA;, AlternateRowNumber INT)&#xA;)&#xA;;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_GetFileData_by_Format">
      <DTS:VariableValue
        DTS:DataType="8">

exec [staging].[sp_Get_FileData_by_Format] 5, 'Rockhill'
WITH RESULT SETS
(
	(
		[ID] [int] NOT NULL,[TableName] [nvarchar](255) NOT NULL,[ColumnCount] [int] NOT NULL,[RowNumber] [int] NOT NULL,[F1] [nvarchar](255) NULL,[F2] [nvarchar](255) NULL,[F3] [nvarchar](255) NULL,[F4] [nvarchar](255) NULL,[F5] [nvarchar](255) NULL,[F6] [nvarchar](255) NULL,[F7] [nvarchar](255) NULL,[F8] [nvarchar](255) NULL,[F9] [nvarchar](255) NULL,[F10] [nvarchar](255) NULL,[F11] [nvarchar](255) NULL,[F12] [nvarchar](255) NULL,[F13] [nvarchar](255) NULL,[F14] [nvarchar](255) NULL,[F15] [nvarchar](255) NULL,[F16] [nvarchar](255) NULL,[F17] [nvarchar](255) NULL,[F18] [nvarchar](255) NULL,[F19] [nvarchar](255) NULL,[F20] [nvarchar](255) NULL,[F21] [nvarchar](255) NULL,[F22] [nvarchar](255) NULL,[F23] [nvarchar](255) NULL,[F24] [nvarchar](255) NULL,[F25] [nvarchar](255) NULL,[F26] [nvarchar](255) NULL,[F27] [nvarchar](255) NULL,[F28] [nvarchar](255) NULL,[F29] [nvarchar](255) NULL,[F30] [nvarchar](255) NULL,[F31] [nvarchar](255) NULL,[F32] [nvarchar](255) NULL,[F33] [nvarchar](255) NULL,[F34] [nvarchar](255) NULL,[F35] [nvarchar](255) NULL,[F36] [nvarchar](255) NULL,[F37] [nvarchar](255) NULL,[F38] [nvarchar](255) NULL,[F39] [nvarchar](255) NULL,[F40] [nvarchar](255) NULL,[F41] [nvarchar](255) NULL,[F42] [nvarchar](255) NULL,[F43] [nvarchar](255) NULL,[F44] [nvarchar](255) NULL,[F45] [nvarchar](255) NULL,[F46] [nvarchar](255) NULL,[F47] [nvarchar](255) NULL,[F48] [nvarchar](255) NULL,[F49] [nvarchar](255) NULL,[F50] [nvarchar](255) NULL,[DataLoadingID] [int] NOT NULL
		-- Custom columns 
		,Header_ColName [nvarchar](20)
		,Account_ColName [nvarchar](20)
		,AccountDesc_ColName [nvarchar](20)
		,SoldeDebut_ColName [nvarchar](20)
		,Debit_ColName [nvarchar](20)
		,Credit_ColName [nvarchar](20)
		,SoldeFin_ColName [nvarchar](20)
		,IsHeaderRow bit
		,IsDetailRow bit
, AlternateRowNumber INT)
)
;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A3158891-8889-46FF-AB77-A9610937B667}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;&#x9;d.Format&#xA;FROM config.Data d&#xA;JOIN staging.DataLoading dl&#xA;&#x9;ON d.DataID = dl.DataID&#xA;WHERE dl.DataLoadingID = &quot;+ (DT_WSTR, 255)@[User::var_DataLoadingID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_GetFileParameters">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
	d.Format
FROM config.Data d
JOIN staging.DataLoading dl
	ON d.DataID = dl.DataID
WHERE dl.DataLoadingID = 5</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8676C455-2384-4F6E-A8AE-278EC2177454}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;INSERT INTO staging.DataLoading&#xA;           (DataID&#xA;           ,LoadingDate&#xA;           ,IC_DM_LINEAGE_INFO&#xA;           ,IC_DM_BUSINESS_PROCESS_INSTANCE_ID&#xA;           ,IC_DM_BUSINESS_PROCESS_INSTANCE_ITERATION&#xA;           )&#xA;SELECT&#xA;&#x9;COALESCE(d.DataID, -1),&#xA;&#x9;p.LoadingDate,&#xA;&#x9;p.FileToLoad,&#xA;&#x9;p.IC_DM_BUSINESS_PROCESS_INSTANCE_ID,&#xA;&#x9;p.IC_DM_BUSINESS_PROCESS_INSTANCE_ITERATION&#xA;FROM (&#xA;&#x9;SELECT&#xA;&#x9;&#x9;'&quot; + @[$Package::SourceCode] + &quot;' AS SourceCode,&#xA;&#x9;&#x9;'&quot; + @[$Package::DataCode] + &quot;' AS DataCode,&#xA;&#x9;&#x9;'&quot; + @[$Package::ProviderCode] + &quot;' AS ProviderCode,&#xA;&#x9;&#x9;'&quot; + @[$Package::FileToLoad] + &quot;' AS FileToLoad,&#xA;&#x9;&#x9;'&quot; + @[User::var_LoadingDate_str] + &quot;' AS LoadingDate,&#xA;&#x9;&#x9;'&quot; + @[$Package::BusinessProcessInstanceID] + &quot;' AS IC_DM_BUSINESS_PROCESS_INSTANCE_ID,&#xA;&#x9;&#x9;&quot; + (DT_WSTR, 32) @[$Package::BusinessProcessInstanceIteration] + &quot; AS IC_DM_BUSINESS_PROCESS_INSTANCE_ITERATION&#xA;) p&#xA;LEFT JOIN config.vw_ProviderSourceDataInfo d&#xA;&#x9;ON p.SourceCode = d.SourceCode&#xA;&#x9;&#x9;AND p.DataCode = d.DataCode&#xA;&#x9;&#x9;AND p.ProviderCode = d.ProviderCode;&#xA;SELECT SCOPE_IDENTITY() AS DataLoadingID;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_InsertDataLoading">
      <DTS:VariableValue
        DTS:DataType="8">INSERT INTO staging.DataLoading
           (DataID
           ,LoadingDate
           ,IC_DM_LINEAGE_INFO
           ,IC_DM_BUSINESS_PROCESS_INSTANCE_ID
           ,IC_DM_BUSINESS_PROCESS_INSTANCE_ITERATION
           )
SELECT
	COALESCE(d.DataID, -1),
	p.LoadingDate,
	p.FileToLoad,
	p.IC_DM_BUSINESS_PROCESS_INSTANCE_ID,
	p.IC_DM_BUSINESS_PROCESS_INSTANCE_ITERATION
FROM (
	SELECT
		'PART' AS SourceCode,
		'RENT_ROLL' AS DataCode,
		'ROH' AS ProviderCode,
		'2017-04-01 Rent Roll_NOT_TEST.xls' AS FileToLoad,
		'2018-05-25 11:20:41' AS LoadingDate,
		'TEST2' AS IC_DM_BUSINESS_PROCESS_INSTANCE_ID,
		1 AS IC_DM_BUSINESS_PROCESS_INSTANCE_ITERATION
) p
LEFT JOIN config.vw_ProviderSourceDataInfo d
	ON p.SourceCode = d.SourceCode
		AND p.DataCode = d.DataCode
		AND p.ProviderCode = d.ProviderCode;
SELECT SCOPE_IDENTITY() AS DataLoadingID;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B126044B-791A-496B-BC4F-07AC120BA628}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;delete staging.PART_RENT_ROLL_Detail from staging.PART_RENT_ROLL_Detail inner join staging.dataLoading on staging.dataLoading.DataLoadingID = staging.PART_RENT_ROLL_Detail.DataLoadingID &#xA;where staging.dataLoading.IC_DM_BUSINESS_PROCESS_INSTANCE_ID &lt;&gt;  '&quot; + @[$Package::BusinessProcessInstanceID]   + &quot;'&quot;&#xA;+&quot;;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_TruncateStaging">
      <DTS:VariableValue
        DTS:DataType="8">delete staging.PART_RENT_ROLL_Detail from staging.PART_RENT_ROLL_Detail inner join staging.dataLoading on staging.dataLoading.DataLoadingID = staging.PART_RENT_ROLL_Detail.DataLoadingID 
where staging.dataLoading.IC_DM_BUSINESS_PROCESS_INSTANCE_ID &lt;&gt;  'TEST2';</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0F4E62E4-2138-4E10-9683-1C924835F95E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;UPDATE d&#xA;SET ValidationSucceeded = (&#xA;&#x9;&#x9;SELECT CASE WHEN COUNT(*) = 0 THEN 1 ELSE 0 END&#xA;&#x9;&#x9;FROM staging.ValidationResult &#xA;&#x9;&#x9;WHERE DataLoadingID = d.DataLoadingID&#xA;&#x9;&#x9;&#x9;AND ValidationSeverity = 'FATAL'&#xA;&#x9;),&#xA;&#x9;ValidationDate = SYSDATETIME()&#xA;FROM staging.DataLoading d&#xA;WHERE d.DataLoadingID = &quot;+(DT_WSTR, 50)@[User::var_DataLoadingID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_UpdateDataLoadingValidationFlag">
      <DTS:VariableValue
        DTS:DataType="8">UPDATE d
SET ValidationSucceeded = (
		SELECT CASE WHEN COUNT(*) = 0 THEN 1 ELSE 0 END
		FROM staging.ValidationResult 
		WHERE DataLoadingID = d.DataLoadingID
			AND ValidationSeverity = 'FATAL'
	),
	ValidationDate = SYSDATETIME()
FROM staging.DataLoading d
WHERE d.DataLoadingID = 5</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{50C0F162-B453-4438-BE63-51D8A930A40A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&#xA;WITH duplicateItem AS (&#xA;&#x9;SELECT *&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT [WorksheetName]&#xA;&#x9;&#x9;&#x9;  ,[RowNumber]&#xA;&#x9;&#x9;&#x9;  ,[AccountName]&#xA;&#x9;&#x9;&#x9;  ,d.[DataLoadingID]&#xA;&#x9;&#x9;&#x9;  ,ROW_NUMBER() OVER(PARTITION BY [WorksheetName],[AccountName],d.[DataLoadingID] ORDER BY [RowNumber]) AS InstanceNum&#xA;&#x9;&#x9;FROM [staging].[PART_INCOME_STMT_Detail] d&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;JOIN staging.DataLoading dl&#xA;&#x9;&#x9;&#x9;&#x9;on d.DataLoadingID = dl.DataLoadingID&#xA;&#x9;&#x9;&#x9;WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = '&quot; + @[$Package::BusinessProcessInstanceID] + &quot;' &#xA;&#x9;)a&#xA;&#x9;WHERE InstanceNum = 2&#xA;)&#xA;UPDATE d&#xA;SET AccountName = IIF(duplicateItem.RowNumber = d.[RowNumber],'EXPENSES - ' + d.[AccountName], 'REVENUE - ' + d.[AccountName])&#xA;FROM [staging].[PART_INCOME_STMT_Detail] d&#xA;&#x9;JOIN duplicateItem&#xA;&#x9;&#x9;ON&#x9;duplicateItem.DataLoadingID = d.DataLoadingID&#xA;&#x9;&#x9;AND duplicateItem.WorksheetName = d.WorksheetName&#xA;&#x9;&#x9;AND&#x9;duplicateItem.AccountName = d.AccountName&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_UpdateIncomeStatementDuplicateItems">
      <DTS:VariableValue
        DTS:DataType="8">
WITH duplicateItem AS (
	SELECT *
	FROM (
		SELECT [WorksheetName]
			  ,[RowNumber]
			  ,[AccountName]
			  ,d.[DataLoadingID]
			  ,ROW_NUMBER() OVER(PARTITION BY [WorksheetName],[AccountName],d.[DataLoadingID] ORDER BY [RowNumber]) AS InstanceNum
		FROM [staging].[PART_INCOME_STMT_Detail] d		
			JOIN staging.DataLoading dl
				on d.DataLoadingID = dl.DataLoadingID
			WHERE dl.IC_DM_BUSINESS_PROCESS_INSTANCE_ID = 'TEST2' 
	)a
	WHERE InstanceNum = 2
)
UPDATE d
SET AccountName = IIF(duplicateItem.RowNumber = d.[RowNumber],'EXPENSES - ' + d.[AccountName], 'REVENUE - ' + d.[AccountName])
FROM [staging].[PART_INCOME_STMT_Detail] d
	JOIN duplicateItem
		ON	duplicateItem.DataLoadingID = d.DataLoadingID
		AND duplicateItem.WorksheetName = d.WorksheetName
		AND	duplicateItem.AccountName = d.AccountName
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E0E6CB77-B4CC-47D8-92BA-826915941465}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;EXEC staging.sp_Validate_Data @DataLoadingID=&quot;+ (DT_WSTR, 50)@[User::var_DataLoadingID] + &quot;, @ValidationCodeParam='PARM-01'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_ValidateDataLoading">
      <DTS:VariableValue
        DTS:DataType="8">EXEC staging.sp_Validate_Data @DataLoadingID=5, @ValidationCodeParam='PARM-01'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{61825BEC-3970-4E05-A6E6-CA58D56930EC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::sql_ValidateSP]+&quot;, @ValidationScopeParam='DETAIL'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_ValidateDetail">
      <DTS:VariableValue
        DTS:DataType="8">EXEC staging.sp_Validate_Data @SourceCodeParam='PART', @DataCodeParam='RENT_ROLL', @ProviderCodeParam='ROH', @DataLoadingID=5, @ValidationScopeParam='DETAIL'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E2028193-3E89-424B-A61F-140C43F84B39}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::sql_ValidateSP]+&quot;, @ValidationScopeParam='FILE'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_ValidateFile">
      <DTS:VariableValue
        DTS:DataType="8">EXEC staging.sp_Validate_Data @SourceCodeParam='PART', @DataCodeParam='RENT_ROLL', @ProviderCodeParam='ROH', @DataLoadingID=5, @ValidationScopeParam='FILE'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FF76CD1B-3A03-4E44-90D5-4A675BB5D2F6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::sql_ValidateSP]+&quot;, @ValidationScopeParam='HEADER'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_ValidateHeader">
      <DTS:VariableValue
        DTS:DataType="8">EXEC staging.sp_Validate_Data @SourceCodeParam='PART', @DataCodeParam='RENT_ROLL', @ProviderCodeParam='ROH', @DataLoadingID=5, @ValidationScopeParam='HEADER'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B98D4BAD-9092-45DF-8440-8AD9ED19BC25}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;EXEC staging.sp_Validate_Data @SourceCodeParam='&quot;+ @[$Package::SourceCode]  +&quot;', @DataCodeParam='&quot;+ @[$Package::DataCode]  +&quot;', @ProviderCodeParam='&quot;+ @[$Package::ProviderCode]  +&quot;', @DataLoadingID=&quot;+ (DT_WSTR, 50)@[User::var_DataLoadingID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_ValidateSP">
      <DTS:VariableValue
        DTS:DataType="8">EXEC staging.sp_Validate_Data @SourceCodeParam='PART', @DataCodeParam='RENT_ROLL', @ProviderCodeParam='ROH', @DataLoadingID=5</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E0FF87AC-45D6-4F14-8B6D-F01A248653DB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT COUNT(*) AS FailedValidationCount FROM staging.ValidationResult WHERE DataLoadingID = &quot;+ (DT_WSTR, 50)@[User::var_DataLoadingID] +&quot; AND ValidationSeverity = 'FATAL'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_VerifyValidationResult">
      <DTS:VariableValue
        DTS:DataType="8">SELECT COUNT(*) AS FailedValidationCount FROM staging.ValidationResult WHERE DataLoadingID = 5 AND ValidationSeverity = 'FATAL'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{21D14020-06B9-4566-9D34-DE7E0AEF2B87}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="var_DataLoadingID">
      <DTS:VariableValue
        DTS:DataType="3">5</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{38CFED6F-2B14-4D7E-9031-486EED95AA2C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="var_FailedDataLoadingValidationCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F03312E8-E194-4926-BA89-38E682E138AA}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="var_FailedFileValidationCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{678691AB-3E0C-45B4-951B-D20FE850AB78}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_InputFileDataFormat">
      <DTS:VariableValue
        DTS:DataType="8">Rockhill</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE1DCA20-1E7B-4833-A93D-8C6E7D55085D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::IC_DM_Files_Folder] + &quot;\\input\\&quot; + @[$Package::SourceCode]   + &quot;\\&quot; +  @[$Package::DataCode]  + &quot;\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_InputFileDirectory">
      <DTS:VariableValue
        DTS:DataType="8">\\corp\appsbur\IC_DM\dev\input\PART\RENT_ROLL\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A293F94A-FCE1-47C0-9044-68CF2393B203}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::var_InputFileDirectory] + &quot;working\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_InputFileDirectoryWorking">
      <DTS:VariableValue
        DTS:DataType="8">\\corp\appsbur\IC_DM\dev\input\PART\RENT_ROLL\working\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{92BCEE12-50C6-410F-B8C3-1B565F693611}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::var_InputFileDirectoryWorking] +  @[User::var_InputFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_InputFileFullPath">
      <DTS:VariableValue
        DTS:DataType="8">\\corp\appsbur\IC_DM\dev\input\PART\RENT_ROLL\working\2017-04-01 Rent Roll_NOT_TEST.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F537B9DE-EF5C-4378-8101-BBC341FCE2F7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::FileToLoad]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_InputFileName">
      <DTS:VariableValue
        DTS:DataType="8">2017-04-01 Rent Roll_NOT_TEST.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{11BAA9F8-7006-453E-8FA2-6C5C3BF43430}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_STR, 4, 1252) DATEPART(&quot;yy&quot; , @[System::StartTime]) + &quot;-&quot; + RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mm&quot; , @[System::StartTime]), 2) + &quot;-&quot; + RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;dd&quot; , @[System::StartTime]), 2) + &quot; &quot; + RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;hh&quot; , @[System::StartTime]), 2) + &quot;:&quot; + RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mi&quot; , @[System::StartTime]), 2) + &quot;:&quot; + RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;ss&quot; , @[System::StartTime]), 2)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_LoadingDate_str">
      <DTS:VariableValue
        DTS:DataType="8">2018-05-25 11:20:41</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{68C45B5D-5408-4853-A028-0415C9CC194C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="var_RowCount">
      <DTS:VariableValue
        DTS:DataType="3">2000</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SEQC - Create and Validate DataLoading record"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{1B663A45-A3FD-474A-8201-F7D7FC509D27}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SEQC - Create and Validate DataLoading record">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SEQC - Create and Validate DataLoading record\SQL - DM_Staging - Load DataLoading"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{81043734-42E1-496F-A42B-84C7AA952769}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - DM_Staging - Load DataLoading"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sql_InsertDataLoading"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="DataLoadingID"
                SQLTask:DtsVariableName="User::var_DataLoadingID" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Create and Validate DataLoading record\SQL - DM_Staging - Validate rule PARM-01 (DataID &lt;&gt; -1)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{20776799-BC90-4DF4-BF51-564CC6E86747}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - DM_Staging - Validate rule PARM-01 (DataID &lt;&gt; -1)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sql_ValidateDataLoading" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Create and Validate DataLoading record\SQL - DM_Staging - Verify DataLoading validation result"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{303ECE4E-9E13-4644-984B-887299B86DCD}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - DM_Staging - Verify DataLoading validation result"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sql_VerifyValidationResult"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="FailedValidationCount"
                SQLTask:DtsVariableName="User::var_FailedDataLoadingValidationCount" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Create and Validate DataLoading record\SQL - truncate Staging"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{657204fc-ec8a-4f40-b984-fc6c08489d6b}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - truncate Staging"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sql_TruncateStaging" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Create and Validate DataLoading record.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{87FE3597-B063-4831-A0F7-BE3FB4DFDFB0}"
          DTS:From="Package\SEQC - Create and Validate DataLoading record\SQL - DM_Staging - Load DataLoading"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SEQC - Create and Validate DataLoading record\SQL - truncate Staging" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Create and Validate DataLoading record.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{4C72B154-18F0-4B5A-9288-D5EEEBF5B11C}"
          DTS:From="Package\SEQC - Create and Validate DataLoading record\SQL - DM_Staging - Validate rule PARM-01 (DataID &lt;&gt; -1)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\SEQC - Create and Validate DataLoading record\SQL - DM_Staging - Verify DataLoading validation result" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Create and Validate DataLoading record.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{9F1E4B27-EF32-4955-A1BA-6E6967E6CA24}"
          DTS:From="Package\SEQC - Create and Validate DataLoading record\SQL - truncate Staging"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\SEQC - Create and Validate DataLoading record\SQL - DM_Staging - Validate rule PARM-01 (DataID &lt;&gt; -1)" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SEQC - Load and Validate data"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{171DF9AA-CECC-41BE-8ACC-6CD5508A00B0}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SEQC - Load and Validate data">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{C358DCD1-A1A3-437F-9B8B-0A592A0A3BE6}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="DER - Add columns required by Detail"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[DataLoadingID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[DataLoadingID]"
                          name="DataLoadingID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::var_DataLoadingID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::var_DataLoadingID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="DER - Add columns required by Header"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header.Outputs[Derived Column Output].Columns[DataLoadingID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header.Outputs[Derived Column Output].Columns[DataLoadingID]"
                          name="DataLoadingID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::var_DataLoadingID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::var_DataLoadingID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="DER - Rename TableName column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Inputs[Derived Column Input].Columns[TableName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="TableName"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[TableName]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Outputs[Derived Column Output].Columns[WorksheetName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Outputs[Derived Column Output].Columns[WorksheetName]"
                          name="WorksheetName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[TableName]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TableName</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE_DST - DM_Staging - PART_RENT_ROLL_Detail"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[staging].[PART_RENT_ROLL_Detail]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Connections[OleDbConnection]"
                      connectionManagerID="{E24982FB-22F7-4235-9AE4-99A820D08725}:external"
                      connectionManagerRefId="Project.ConnectionManagers[oledb IC_DM_Staging]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].Columns[WorksheetName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="WorksheetName"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[WorksheetName]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[WorksheetName]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].Columns[RowNumber]"
                          cachedDataType="i4"
                          cachedName="RowNumber"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[RowNumber]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[RowNumber]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].Columns[DataLoadingID]"
                          cachedDataType="i4"
                          cachedName="DataLoadingID"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[DataLoadingID]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[DataLoadingID]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].Columns[UnitNumber]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="UnitNumber"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[UnitNumber]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[UnitNumber]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].Columns[TenantName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="TenantName"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[TenantName]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[TenantName]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].Columns[EffectiveEndDate]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="EffectiveEndDate"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[EffectiveEndDate]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[EffectiveEndDate]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].Columns[RentAmount]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="RentAmount"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[RentAmount]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[RentAmount]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].Columns[ExternalUnitType]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ExternalUnitType"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[ExternalUnitType]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[ExternalUnitType]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].Columns[MoveInDate]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="MoveInDate"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[MoveInDate]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[MoveInDate]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].Columns[MoveOutDate]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="MoveOutDate"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[MoveOutDate]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[MoveOutDate]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[WorksheetName]"
                          dataType="wstr"
                          length="255"
                          name="WorksheetName" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[RowNumber]"
                          dataType="i4"
                          name="RowNumber" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[DataLoadingID]"
                          dataType="i4"
                          name="DataLoadingID" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i4"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[UnitNumber]"
                          dataType="wstr"
                          length="255"
                          name="UnitNumber" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[TenantName]"
                          dataType="wstr"
                          length="255"
                          name="TenantName" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[EffectiveBeginningDate]"
                          dataType="wstr"
                          length="255"
                          name="EffectiveBeginningDate" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[EffectiveEndDate]"
                          dataType="wstr"
                          length="255"
                          name="EffectiveEndDate" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[RentAmount]"
                          dataType="wstr"
                          length="255"
                          name="RentAmount" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[ExternalUnitType]"
                          dataType="wstr"
                          length="255"
                          name="ExternalUnitType" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[MoveInDate]"
                          dataType="wstr"
                          length="255"
                          name="MoveInDate" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[MoveOutDate]"
                          dataType="wstr"
                          length="255"
                          name="MoveOutDate" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[UnitArea]"
                          dataType="i4"
                          name="UnitArea" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Floorplan]"
                          dataType="wstr"
                          length="255"
                          name="Floorplan" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[ExternalLeaseType]"
                          dataType="wstr"
                          length="255"
                          name="ExternalLeaseType" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[LastRenovationYear]"
                          dataType="wstr"
                          length="255"
                          name="LastRenovationYear" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                          dataType="wstr"
                          length="255"
                          name="Status" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input].ExternalColumns[ExternalRenovationType]"
                          dataType="wstr"
                          length="255"
                          name="ExternalRenovationType" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE_DST - DM_Staging - PART_RENT_ROLL_Header"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[staging].[PART_RENT_ROLL_Header]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Connections[OleDbConnection]"
                      connectionManagerID="{E24982FB-22F7-4235-9AE4-99A820D08725}:external"
                      connectionManagerRefId="Project.ConnectionManagers[oledb IC_DM_Staging]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].Columns[WorksheetName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="WorksheetName"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].ExternalColumns[WorksheetName]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[HeaderDataOutput].Columns[WorksheetName]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].Columns[RowNumber]"
                          cachedDataType="i4"
                          cachedName="RowNumber"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].ExternalColumns[RowNumber]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[HeaderDataOutput].Columns[RowNumber]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].Columns[DataLoadingID]"
                          cachedDataType="i4"
                          cachedName="DataLoadingID"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].ExternalColumns[DataLoadingID]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header.Outputs[Derived Column Output].Columns[DataLoadingID]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].Columns[ExternalAssetName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ExternalAssetName"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].ExternalColumns[ExternalAssetName]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[HeaderDataOutput].Columns[ExternalAssetName]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].Columns[ReportingMonthYear]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ReportingMonthYear"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].ExternalColumns[ReportingMonthYear]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[HeaderDataOutput].Columns[ReportingMonthYear]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].ExternalColumns[WorksheetName]"
                          dataType="wstr"
                          length="255"
                          name="WorksheetName" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].ExternalColumns[RowNumber]"
                          dataType="i4"
                          name="RowNumber" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].ExternalColumns[DataLoadingID]"
                          dataType="i4"
                          name="DataLoadingID" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i4"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].ExternalColumns[ReportingMonthYear]"
                          dataType="wstr"
                          length="255"
                          name="ReportingMonthYear" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input].ExternalColumns[ExternalAssetName]"
                          dataType="wstr"
                          length="255"
                          name="ExternalAssetName" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE_SRC - DM_Staging - FileData"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::sql_GetFileData</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Connections[OleDbConnection]"
                      connectionManagerID="{E24982FB-22F7-4235-9AE4-99A820D08725}:external"
                      connectionManagerRefId="Project.ConnectionManagers[oledb IC_DM_Staging]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[TableName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[TableName]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[TableName]"
                          name="TableName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[ColumnCount]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[ColumnCount]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[ColumnCount]"
                          name="ColumnCount"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[RowNumber]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[RowNumber]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[RowNumber]"
                          name="RowNumber"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F1]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F1]"
                          name="F1"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F2]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F2]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F2]"
                          name="F2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F3]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F3]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F3]"
                          name="F3"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F4]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F4]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F4]"
                          name="F4"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F5]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F5]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F5]"
                          name="F5"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F6]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F6]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F6]"
                          name="F6"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F7]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F7]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F7]"
                          name="F7"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F8]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F8]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F8]"
                          name="F8"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F9]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F9]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F9]"
                          name="F9"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F10]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F10]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F10]"
                          name="F10"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F11]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F11]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F11]"
                          name="F11"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F12]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F12]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F12]"
                          name="F12"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F13]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F13]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F13]"
                          name="F13"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F14]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F14]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F14]"
                          name="F14"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F15]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F15]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F15]"
                          name="F15"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F16]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F16]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F16]"
                          name="F16"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F17]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F17]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F17]"
                          name="F17"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F18]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F18]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F18]"
                          name="F18"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F19]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F19]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F19]"
                          name="F19"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F20]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F20]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F20]"
                          name="F20"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F21]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F21]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F21]"
                          name="F21"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F22]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F22]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F22]"
                          name="F22"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F23]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F23]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F23]"
                          name="F23"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F24]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F24]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F24]"
                          name="F24"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F25]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F25]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F25]"
                          name="F25"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F26]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F26]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F26]"
                          name="F26"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F27]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F27]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F27]"
                          name="F27"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F28]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F28]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F28]"
                          name="F28"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F29]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F29]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F29]"
                          name="F29"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F30]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F30]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F30]"
                          name="F30"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F31]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F31]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F31]"
                          name="F31"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F32]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F32]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F32]"
                          name="F32"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F33]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F33]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F33]"
                          name="F33"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F34]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F34]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F34]"
                          name="F34"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F35]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F35]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F35]"
                          name="F35"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F36]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F36]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F36]"
                          name="F36"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F37]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F37]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F37]"
                          name="F37"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F38]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F38]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F38]"
                          name="F38"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F39]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F39]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F39]"
                          name="F39"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F40]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F40]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F40]"
                          name="F40"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F41]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F41]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F41]"
                          name="F41"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F42]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F42]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F42]"
                          name="F42"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F43]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F43]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F43]"
                          name="F43"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F44]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F44]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F44]"
                          name="F44"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F45]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F45]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F45]"
                          name="F45"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F46]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F46]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F46]"
                          name="F46"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F47]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F47]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F47]"
                          name="F47"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F48]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F48]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F48]"
                          name="F48"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F49]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F49]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F49]"
                          name="F49"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F50]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F50]"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F50]"
                          name="F50"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[ID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[ID]"
                          name="ID"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[TableName]"
                          dataType="wstr"
                          length="255"
                          name="TableName" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[ColumnCount]"
                          dataType="i4"
                          name="ColumnCount" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[RowNumber]"
                          dataType="i4"
                          name="RowNumber" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F1]"
                          dataType="wstr"
                          length="255"
                          name="F1" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F2]"
                          dataType="wstr"
                          length="255"
                          name="F2" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F3]"
                          dataType="wstr"
                          length="255"
                          name="F3" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F4]"
                          dataType="wstr"
                          length="255"
                          name="F4" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F5]"
                          dataType="wstr"
                          length="255"
                          name="F5" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F6]"
                          dataType="wstr"
                          length="255"
                          name="F6" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F7]"
                          dataType="wstr"
                          length="255"
                          name="F7" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F8]"
                          dataType="wstr"
                          length="255"
                          name="F8" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F9]"
                          dataType="wstr"
                          length="255"
                          name="F9" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F10]"
                          dataType="wstr"
                          length="255"
                          name="F10" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F11]"
                          dataType="wstr"
                          length="255"
                          name="F11" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F12]"
                          dataType="wstr"
                          length="255"
                          name="F12" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F13]"
                          dataType="wstr"
                          length="255"
                          name="F13" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F14]"
                          dataType="wstr"
                          length="255"
                          name="F14" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F15]"
                          dataType="wstr"
                          length="255"
                          name="F15" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[DataLoadingID]"
                          dataType="i4"
                          name="DataLoadingID" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F16]"
                          dataType="wstr"
                          length="255"
                          name="F16" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F17]"
                          dataType="wstr"
                          length="255"
                          name="F17" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F18]"
                          dataType="wstr"
                          length="255"
                          name="F18" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F19]"
                          dataType="wstr"
                          length="255"
                          name="F19" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F20]"
                          dataType="wstr"
                          length="255"
                          name="F20" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F21]"
                          dataType="wstr"
                          length="255"
                          name="F21" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F22]"
                          dataType="wstr"
                          length="255"
                          name="F22" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F23]"
                          dataType="wstr"
                          length="255"
                          name="F23" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F24]"
                          dataType="wstr"
                          length="255"
                          name="F24" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F25]"
                          dataType="wstr"
                          length="255"
                          name="F25" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F26]"
                          dataType="wstr"
                          length="255"
                          name="F26" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F27]"
                          dataType="wstr"
                          length="255"
                          name="F27" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F28]"
                          dataType="wstr"
                          length="255"
                          name="F28" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F29]"
                          dataType="wstr"
                          length="255"
                          name="F29" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F30]"
                          dataType="wstr"
                          length="255"
                          name="F30" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F31]"
                          dataType="wstr"
                          length="255"
                          name="F31" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F32]"
                          dataType="wstr"
                          length="255"
                          name="F32" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F33]"
                          dataType="wstr"
                          length="255"
                          name="F33" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F34]"
                          dataType="wstr"
                          length="255"
                          name="F34" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F35]"
                          dataType="wstr"
                          length="255"
                          name="F35" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F36]"
                          dataType="wstr"
                          length="255"
                          name="F36" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F37]"
                          dataType="wstr"
                          length="255"
                          name="F37" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F38]"
                          dataType="wstr"
                          length="255"
                          name="F38" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F39]"
                          dataType="wstr"
                          length="255"
                          name="F39" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F40]"
                          dataType="wstr"
                          length="255"
                          name="F40" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F41]"
                          dataType="wstr"
                          length="255"
                          name="F41" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F42]"
                          dataType="wstr"
                          length="255"
                          name="F42" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F43]"
                          dataType="wstr"
                          length="255"
                          name="F43" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F44]"
                          dataType="wstr"
                          length="255"
                          name="F44" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F45]"
                          dataType="wstr"
                          length="255"
                          name="F45" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F46]"
                          dataType="wstr"
                          length="255"
                          name="F46" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F47]"
                          dataType="wstr"
                          length="255"
                          name="F47" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F48]"
                          dataType="wstr"
                          length="255"
                          name="F48" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F49]"
                          dataType="wstr"
                          length="255"
                          name="F49" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[F50]"
                          dataType="wstr"
                          length="255"
                          name="F50" />
                        <externalMetadataColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                          dataType="i4"
                          name="ID" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[ID]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[TableName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[TableName]"
                          name="TableName" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[ColumnCount]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[ColumnCount]"
                          name="ColumnCount" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[RowNumber]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[RowNumber]"
                          name="RowNumber" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F1]"
                          name="F1" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F2]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F2]"
                          name="F2" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F3]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F3]"
                          name="F3" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F4]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F4]"
                          name="F4" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F5]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F5]"
                          name="F5" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F6]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F6]"
                          name="F6" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F7]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F7]"
                          name="F7" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F8]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F8]"
                          name="F8" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F9]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F9]"
                          name="F9" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F10]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F10]"
                          name="F10" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F11]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F11]"
                          name="F11" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F12]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F12]"
                          name="F12" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F13]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F13]"
                          name="F13" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F14]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F14]"
                          name="F14" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F15]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F15]"
                          name="F15" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F16]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F16]"
                          name="F16" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F17]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F17]"
                          name="F17" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F18]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F18]"
                          name="F18" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F19]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F19]"
                          name="F19" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F20]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F20]"
                          name="F20" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F21]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F21]"
                          name="F21" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F22]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F22]"
                          name="F22" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F23]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F23]"
                          name="F23" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F24]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F24]"
                          name="F24" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F25]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F25]"
                          name="F25" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F26]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F26]"
                          name="F26" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F27]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F27]"
                          name="F27" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F28]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F28]"
                          name="F28" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F29]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F29]"
                          name="F29" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F30]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F30]"
                          name="F30" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F31]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F31]"
                          name="F31" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F32]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F32]"
                          name="F32" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F33]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F33]"
                          name="F33" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F34]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F34]"
                          name="F34" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F35]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F35]"
                          name="F35" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F36]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F36]"
                          name="F36" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F37]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F37]"
                          name="F37" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F38]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F38]"
                          name="F38" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F39]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F39]"
                          name="F39" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F40]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F40]"
                          name="F40" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F41]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F41]"
                          name="F41" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F42]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F42]"
                          name="F42" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F43]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F43]"
                          name="F43" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F44]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F44]"
                          name="F44" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F45]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F45]"
                          name="F45" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F46]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F46]"
                          name="F46" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F47]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F47]"
                          name="F47" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F48]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F48]"
                          name="F48" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F49]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F49]"
                          name="F49" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F50]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[F50]"
                          name="F50" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="SCR - Parse Excel file"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="78">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public DetailDataOutputBuffer DetailDataOutputBuffer;

    public HeaderDataOutputBuffer HeaderDataOutputBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"ExcelDataInput", StringComparison.Ordinal))
        {
            ExcelDataInput_ProcessInput(new ExcelDataInputBuffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != DetailDataOutputBuffer)
        {
            DetailDataOutputBuffer.SetEndOfRowset();
            DetailDataOutputBuffer = null;
        }

        if (null != HeaderDataOutputBuffer)
        {
            HeaderDataOutputBuffer.SetEndOfRowset();
            HeaderDataOutputBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DetailDataOutput"))
            {
                DetailDataOutputBuffer = new DetailDataOutputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"HeaderDataOutput"))
            {
                HeaderDataOutputBuffer = new HeaderDataOutputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void ExcelDataInput_ProcessInput(ExcelDataInputBuffer Buffer)
    {
        while (Buffer.NextRow())
        {
            ExcelDataInput_ProcessInputRow(Buffer);
        }
    }

    public virtual void ExcelDataInput_ProcessInputRow(ExcelDataInputBuffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String varInputFileDataFormat
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["var_InputFileDataFormat"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String varInputFileName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["var_InputFileName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 varRowCount
    {
        get
        {
            return (Int32)(ParentComponent.ReadWriteVariables["var_RowCount"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["var_RowCount"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Namespaces
using System;
using System.Data;
using System.Linq;
using System.Text.RegularExpressions;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private int totalRowCount;
    private string worksheetName;
    private bool skipCurrentWorksheet;
    private ExcelParser parser;

    public override void PreExecute()
    {
        base.PreExecute();
        totalRowCount = 0;

        // These variables cannot be initialized at the top of ExcelDataInput_ProcessInput because
        // the method is reexecuted once a buffer is finished and fresh one arrives
        worksheetName = null;
        skipCurrentWorksheet = false;
        
        // Initialize the parser to be used
        switch (Variables.varInputFileDataFormat.ToUpper())
        {
            case "ROCKHILL":
                parser = new RockhillExcelParser();
                break;

            
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();
        Variables.varRowCount = totalRowCount;
    }

    public override void ExcelDataInput_ProcessInput(ExcelDataInputBuffer Buffer)
    {
      
        parser.SetHeaderOutputBuffer(HeaderDataOutputBuffer);
        parser.SetDetailOutputBuffer(DetailDataOutputBuffer);

        while (Buffer.NextRow())
        {
            totalRowCount++;

            // Detect change of worksheet
            if (worksheetName != Buffer.WorksheetName)
            {
                // Tell the parser we are moving to another worksheet
                if (worksheetName != null)
                    parser.FinishParsingWorksheet(worksheetName);

                // Reinitialize variables
                worksheetName = Buffer.WorksheetName;

                // Tell the parser that a new worksheet is starting, if the method returns false,
                // it means that the worksheet should be skipped
                skipCurrentWorksheet = !parser.StartParsingWorksheet(worksheetName, Buffer);
            }

            if (skipCurrentWorksheet)
                continue;

            // Process each line
            parser.ProcessInputRow(Buffer, worksheetName);
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class ExcelDataInputBuffer: ScriptBuffer

{
    public ExcelDataInputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String F1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool F1_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String F2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool F2_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String F3
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool F3_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String F4
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool F4_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String F5
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool F5_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String F6
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool F6_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String F7
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool F7_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String F8
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool F8_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String F9
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool F9_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String F10
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool F10_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String F11
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool F11_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String F12
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool F12_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String F13
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool F13_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String F14
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool F14_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String F15
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool F15_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public String F16
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
    }
    public bool F16_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public String F17
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[16]);
        }
    }
    public bool F17_IsNull
    {
        get
        {
            return IsNull(16);
        }
    }

    public String F18
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[17]);
        }
    }
    public bool F18_IsNull
    {
        get
        {
            return IsNull(17);
        }
    }

    public String F19
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[18]);
        }
    }
    public bool F19_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    public String F20
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[19]);
        }
    }
    public bool F20_IsNull
    {
        get
        {
            return IsNull(19);
        }
    }

    public String F21
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[20]);
        }
    }
    public bool F21_IsNull
    {
        get
        {
            return IsNull(20);
        }
    }

    public String F23
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[21]);
        }
    }
    public bool F23_IsNull
    {
        get
        {
            return IsNull(21);
        }
    }

    public String F22
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[22]);
        }
    }
    public bool F22_IsNull
    {
        get
        {
            return IsNull(22);
        }
    }

    public String F24
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[23]);
        }
    }
    public bool F24_IsNull
    {
        get
        {
            return IsNull(23);
        }
    }

    public String F25
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[24]);
        }
    }
    public bool F25_IsNull
    {
        get
        {
            return IsNull(24);
        }
    }

    public String F26
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[25]);
        }
    }
    public bool F26_IsNull
    {
        get
        {
            return IsNull(25);
        }
    }

    public String F27
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[26]);
        }
    }
    public bool F27_IsNull
    {
        get
        {
            return IsNull(26);
        }
    }

    public String F28
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[27]);
        }
    }
    public bool F28_IsNull
    {
        get
        {
            return IsNull(27);
        }
    }

    public String F29
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[28]);
        }
    }
    public bool F29_IsNull
    {
        get
        {
            return IsNull(28);
        }
    }

    public String F30
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[29]);
        }
    }
    public bool F30_IsNull
    {
        get
        {
            return IsNull(29);
        }
    }

    public String F31
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[30]);
        }
    }
    public bool F31_IsNull
    {
        get
        {
            return IsNull(30);
        }
    }

    public String WorksheetName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[31]);
        }
    }
    public bool WorksheetName_IsNull
    {
        get
        {
            return IsNull(31);
        }
    }

    public Int32 ColumnCount
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[32]);
        }
    }
    public bool ColumnCount_IsNull
    {
        get
        {
            return IsNull(32);
        }
    }

    public Int32 RowNumber
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[33]);
        }
    }
    public bool RowNumber_IsNull
    {
        get
        {
            return IsNull(33);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DetailDataOutputBuffer: ScriptBuffer

{
    public DetailDataOutputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String UnitNumber
    {
        set
        {
            this[0] = value;
        }
    }
    public bool UnitNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TenantName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool TenantName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EffectiveEndDate
    {
        set
        {
            this[2] = value;
        }
    }
    public bool EffectiveEndDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RentAmount
    {
        set
        {
            this[3] = value;
        }
    }
    public bool RentAmount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ExternalUnitType
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ExternalUnitType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MoveInDate
    {
        set
        {
            this[5] = value;
        }
    }
    public bool MoveInDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MoveOutDate
    {
        set
        {
            this[6] = value;
        }
    }
    public bool MoveOutDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WorksheetName
    {
        set
        {
            this[7] = value;
        }
    }
    public bool WorksheetName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 RowNumber
    {
        set
        {
            this[8] = value;
        }
    }
    public bool RowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class HeaderDataOutputBuffer: ScriptBuffer

{
    public HeaderDataOutputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ReportingMonthYear
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ReportingMonthYear_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ExternalAssetName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ExternalAssetName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WorksheetName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool WorksheetName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 RowNumber
    {
        set
        {
            this[3] = value;
        }
    }
    public bool RowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_37e366ba705f4c8f96c014909ff4b7e8.Properties.Settings.get_Default():SC_37e366ba705f4c8f96c014909ff4b7e8.Properties.Sett" +
    "ings")]

namespace SC_37e366ba705f4c8f96c014909ff4b7e8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_37e366ba705f4c8f96c014909ff4b7e8.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{046B6D6A-A8A8-4EF2-9F7B-FABE8ECD3020}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_37e366ba705f4c8f96c014909ff4b7e8</RootNamespace>
    <AssemblyName>SC_26705E76C9FF4BE88FB632315FBFFBCD</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="Parser\ExcelParser.cs" />
    <Compile Include="Data\HeaderData.cs" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Parser\RockhillExcelParser.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_37e366ba705f4c8f96c014909ff4b7e8</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_37e366ba705f4c8f96c014909ff4b7e8</msb:DisplayName>
		<msb:ProjectId>{946EF609-064A-4A6E-9EB6-24FE004A3261}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_37e366ba705f4c8f96c014909ff4b7e8.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Parser\ExcelParser.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Data\HeaderData.cs"/>
		<msb:File Include="Parser\RockhillExcelParser.cs"/>
		<msb:Folder Include="Parser\"/>
		<msb:Folder Include="Parser\Providers"/>
		<msb:Folder Include="Data\"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_37e366ba705f4c8f96c014909ff4b7e8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_37e366ba705f4c8f96c014909ff4b7e8")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_37e366ba705f4c8f96c014909ff4b7e8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_37e366ba705f4c8f96c014909ff4b7e8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_37e366ba705f4c8f96c014909ff4b7e8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_37e366ba705f4c8f96c014909ff4b7e8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_37e366ba705f4c8f96c014909ff4b7e8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[HeaderData.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

public class HeaderData
{
    public string AssetCode;
    public string Currency;
    public string DateMonth01;
    public string DateMonth02;
    public string DateMonth03;
    public string DateMonth04;
    public string DateMonth05;
    public string DateMonth06;
    public string DateMonth07;
    public string DateMonth08;
    public string DateMonth09;
    public string DateMonth10;
    public string DateMonth11;
    public string DateMonth12;
    public string DateTotal;
    public string LedgerTypeMonth01;
    public string LedgerTypeMonth02;
    public string LedgerTypeMonth03;
    public string LedgerTypeMonth04;
    public string LedgerTypeMonth05;
    public string LedgerTypeMonth06;
    public string LedgerTypeMonth07;
    public string LedgerTypeMonth08;
    public string LedgerTypeMonth09;
    public string LedgerTypeMonth10;
    public string LedgerTypeMonth11;
    public string LedgerTypeMonth12;
    public string LedgerTypeTotal;
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ExcelFileParser.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

public abstract class ExcelFileParser
{
    private DetailDataOutputBuffer detailOutputBuffer;
    private HeaderDataOutputBuffer headerOutputBuffer;

    public ExcelFileParser(HeaderDataOutputBuffer headerOutputBuffer, DetailDataOutputBuffer detailOutputBuffer)
    {
        this.headerOutputBuffer = headerOutputBuffer;
        this.detailOutputBuffer = detailOutputBuffer;
    }

    public bool StartParsingWorksheet(string worksheetName, ExcelDataInputBuffer firstRow)
    {
        return true;
    }

    public abstract void FinishParsingWorksheet(string worksheetName);
    public abstract void ProcessInputRow(ExcelDataInputBuffer Row, string worksheetName, HeaderData headerData);
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[MultiTabParser.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

public class MultiTabParser : ExcelParser
{
    private HeaderData headerData;

    public override bool StartParsingWorksheet(string worksheetName, ExcelDataInputBuffer firstRow)
    {
        var isIncomeStatement = firstRow.ColumnCount == 15 && !firstRow.F1_IsNull && firstRow.F1.StartsWith("Income Statement", StringComparison.InvariantCultureIgnoreCase);
        if (!isIncomeStatement)
            return false; // Skip the worksheet, not the one we want

        headerData = new HeaderData();
        return true;
    }    

    public override void ProcessInputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // Header info line 1 to 8
        if (row.RowNumber == 1)
        {
            headerData.Currency = row.F1.Split(' ').LastOrDefault();
        }
        if (row.RowNumber == 2)
        {
            headerData.AssetCode = row.F1;
        }
        if (row.RowNumber == 4)
        {
            headerData.DateMonth01 = row.F2;
            headerData.DateMonth02 = row.F3;
            headerData.DateMonth03 = row.F4;
            headerData.DateMonth04 = row.F5;
            headerData.DateMonth05 = row.F6;
            headerData.DateMonth06 = row.F7;
            headerData.DateMonth07 = row.F8;
            headerData.DateMonth08 = row.F9;
            headerData.DateMonth09 = row.F10;
            headerData.DateMonth10 = row.F11;
            headerData.DateMonth11 = row.F12;
            headerData.DateMonth12 = row.F13;
            headerData.DateTotal = row.F15;
        }
        if (row.RowNumber == 5)
        {
            headerData.LedgerTypeMonth01 = row.F2;
            headerData.LedgerTypeMonth02 = row.F3;
            headerData.LedgerTypeMonth03 = row.F4;
            headerData.LedgerTypeMonth04 = row.F5;
            headerData.LedgerTypeMonth05 = row.F6;
            headerData.LedgerTypeMonth06 = row.F7;
            headerData.LedgerTypeMonth07 = row.F8;
            headerData.LedgerTypeMonth08 = row.F9;
            headerData.LedgerTypeMonth09 = row.F10;
            headerData.LedgerTypeMonth10 = row.F11;
            headerData.LedgerTypeMonth11 = row.F12;
            headerData.LedgerTypeMonth12 = row.F13;
            headerData.LedgerTypeTotal = row.F15;
        }
        if (row.RowNumber == 8)
        {
            AddHeaderOutputRow(headerData, worksheetName, row.RowNumber);
        }

        // Detail info line 9 and after
        if (row.RowNumber >= 9)
        {
            AddDetailDataOutputRow(row, worksheetName);
        }
    }

    protected override void AddDetailDataOutputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // Skip empty lines
        if (String.IsNullOrWhiteSpace(row.F1) && String.IsNullOrWhiteSpace(row.F2))
            return;

        detailOutputBuffer.AddRow();

        // Account number
        string accountNumberPattern = @"^(?<account_number>[0-9]{5}-[0-9]{3}).*";
        Match accountNumberMatch = Regex.Match(row.F1, accountNumberPattern, RegexOptions.IgnoreCase);
        detailOutputBuffer.AccountNumber = accountNumberMatch.Groups["account_number"].Value;

        // Account name
        string accountNamePattern = @"^[[0-9]{5}-[0-9]{3}]{0,1}\s-\s(?<account_name>.+)$";
        Match accountNameMatch = Regex.Match(row.F1, accountNamePattern, RegexOptions.IgnoreCase);
        string accountName = accountNameMatch.Groups["account_name"].Value;
        detailOutputBuffer.AccountName = accountName.Length == 0 ? row.F1 : accountName;

        // Amounts Month01 to Month12
        if (row.F2_IsNull)
            detailOutputBuffer.AmountMonth01_IsNull = true;
        else
            detailOutputBuffer.AmountMonth01 = row.F2;

        if (row.F3_IsNull)
            detailOutputBuffer.AmountMonth02_IsNull = true;
        else
            detailOutputBuffer.AmountMonth02 = row.F3;

        if (row.F4_IsNull)
            detailOutputBuffer.AmountMonth03_IsNull = true;
        else
            detailOutputBuffer.AmountMonth03 = row.F4;

        if (row.F5_IsNull)
            detailOutputBuffer.AmountMonth04_IsNull = true;
        else
            detailOutputBuffer.AmountMonth04 = row.F5;

        if (row.F6_IsNull)
            detailOutputBuffer.AmountMonth05_IsNull = true;
        else
            detailOutputBuffer.AmountMonth05 = row.F6;

        if (row.F7_IsNull)
            detailOutputBuffer.AmountMonth06_IsNull = true;
        else
            detailOutputBuffer.AmountMonth06 = row.F7;

        if (row.F8_IsNull)
            detailOutputBuffer.AmountMonth07_IsNull = true;
        else
            detailOutputBuffer.AmountMonth07 = row.F8;

        if (row.F9_IsNull)
            detailOutputBuffer.AmountMonth08_IsNull = true;
        else
            detailOutputBuffer.AmountMonth08 = row.F9;

        if (row.F10_IsNull)
            detailOutputBuffer.AmountMonth09_IsNull = true;
        else
            detailOutputBuffer.AmountMonth09 = row.F10;

        if (row.F11_IsNull)
            detailOutputBuffer.AmountMonth10_IsNull = true;
        else
            detailOutputBuffer.AmountMonth10 = row.F11;

        if (row.F12_IsNull)
            detailOutputBuffer.AmountMonth11_IsNull = true;
        else
            detailOutputBuffer.AmountMonth11 = row.F12;

        if (row.F13_IsNull)
            detailOutputBuffer.AmountMonth12_IsNull = true;
        else
            detailOutputBuffer.AmountMonth12 = row.F13;

        if (row.F15_IsNull)
            detailOutputBuffer.AmountTotal_IsNull = true;
        else
            detailOutputBuffer.AmountTotal = row.F15;

        // Meta info
        detailOutputBuffer.WorksheetName = worksheetName;
        detailOutputBuffer.RowNumber = row.RowNumber;
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ExcelParser.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

public abstract class ExcelParser
{
    protected DetailDataOutputBuffer detailOutputBuffer;
    protected HeaderDataOutputBuffer headerOutputBuffer;

    public void SetHeaderOutputBuffer(HeaderDataOutputBuffer headerOutputBuffer)
    {
        this.headerOutputBuffer = headerOutputBuffer;
    }

    public void SetDetailOutputBuffer(DetailDataOutputBuffer detailOutputBuffer)
    {
        this.detailOutputBuffer = detailOutputBuffer;
    }

    public virtual bool StartParsingWorksheet(string worksheetName, ExcelDataInputBuffer firstRow)
    {
        return true;
    }

    public virtual void FinishParsingWorksheet(string worksheetName)
    {
    }

    protected void AddHeaderOutputRow(HeaderData headerData, string worksheetName, int rowNumber)
    {
        headerOutputBuffer.AddRow();

        // Asset Code
        if (headerData.AssetCode == null)
            headerOutputBuffer.AssetCode_IsNull = true;
        else
            headerOutputBuffer.AssetCode = headerData.AssetCode;

        // Accounting Basis not available
        headerOutputBuffer.AccountingBasis_IsNull = true;

        // Currency
        if (headerData.Currency == null)
            headerOutputBuffer.Currency_IsNull = true;
        else
            headerOutputBuffer.Currency = headerData.Currency;

        // Date Month01 to Month12
        if (headerData.DateMonth01 == null)
            headerOutputBuffer.DateMonth01_IsNull = true;
        else
            headerOutputBuffer.DateMonth01 = headerData.DateMonth01;

        if (headerData.DateMonth02 == null)
            headerOutputBuffer.DateMonth02_IsNull = true;
        else
            headerOutputBuffer.DateMonth02 = headerData.DateMonth02;

        if (headerData.DateMonth03 == null)
            headerOutputBuffer.DateMonth03_IsNull = true;
        else
            headerOutputBuffer.DateMonth03 = headerData.DateMonth03;

        if (headerData.DateMonth04 == null)
            headerOutputBuffer.DateMonth04_IsNull = true;
        else
            headerOutputBuffer.DateMonth04 = headerData.DateMonth04;

        if (headerData.DateMonth05 == null)
            headerOutputBuffer.DateMonth05_IsNull = true;
        else
            headerOutputBuffer.DateMonth05 = headerData.DateMonth05;

        if (headerData.DateMonth06 == null)
            headerOutputBuffer.DateMonth06_IsNull = true;
        else
            headerOutputBuffer.DateMonth06 = headerData.DateMonth06;

        if (headerData.DateMonth07 == null)
            headerOutputBuffer.DateMonth07_IsNull = true;
        else
            headerOutputBuffer.DateMonth07 = headerData.DateMonth07;

        if (headerData.DateMonth08 == null)
            headerOutputBuffer.DateMonth08_IsNull = true;
        else
            headerOutputBuffer.DateMonth08 = headerData.DateMonth08;

        if (headerData.DateMonth09 == null)
            headerOutputBuffer.DateMonth09_IsNull = true;
        else
            headerOutputBuffer.DateMonth09 = headerData.DateMonth09;

        if (headerData.DateMonth10 == null)
            headerOutputBuffer.DateMonth10_IsNull = true;
        else
            headerOutputBuffer.DateMonth10 = headerData.DateMonth10;

        if (headerData.DateMonth11 == null)
            headerOutputBuffer.DateMonth11_IsNull = true;
        else
            headerOutputBuffer.DateMonth11 = headerData.DateMonth11;

        if (headerData.DateMonth12 == null)
            headerOutputBuffer.DateMonth12_IsNull = true;
        else
            headerOutputBuffer.DateMonth12 = headerData.DateMonth12;

        if (headerData.DateTotal == null)
            headerOutputBuffer.DateTotal_IsNull = true;
        else
            headerOutputBuffer.DateTotal = headerData.DateTotal;

        // LedgerType Month01 to Month12
        if (headerData.LedgerTypeMonth01 == null)
            headerOutputBuffer.LedgerTypeMonth01_IsNull = true;
        else
            headerOutputBuffer.LedgerTypeMonth01 = headerData.LedgerTypeMonth01;

        if (headerData.LedgerTypeMonth02 == null)
            headerOutputBuffer.LedgerTypeMonth02_IsNull = true;
        else
            headerOutputBuffer.LedgerTypeMonth02 = headerData.LedgerTypeMonth02;

        if (headerData.LedgerTypeMonth03 == null)
            headerOutputBuffer.LedgerTypeMonth03_IsNull = true;
        else
            headerOutputBuffer.LedgerTypeMonth03 = headerData.LedgerTypeMonth03;

        if (headerData.LedgerTypeMonth04 == null)
            headerOutputBuffer.LedgerTypeMonth04_IsNull = true;
        else
            headerOutputBuffer.LedgerTypeMonth04 = headerData.LedgerTypeMonth04;

        if (headerData.LedgerTypeMonth05 == null)
            headerOutputBuffer.LedgerTypeMonth05_IsNull = true;
        else
            headerOutputBuffer.LedgerTypeMonth05 = headerData.LedgerTypeMonth05;

        if (headerData.LedgerTypeMonth06 == null)
            headerOutputBuffer.LedgerTypeMonth06_IsNull = true;
        else
            headerOutputBuffer.LedgerTypeMonth06 = headerData.LedgerTypeMonth06;

        if (headerData.LedgerTypeMonth07 == null)
            headerOutputBuffer.LedgerTypeMonth07_IsNull = true;
        else
            headerOutputBuffer.LedgerTypeMonth07 = headerData.LedgerTypeMonth07;

        if (headerData.LedgerTypeMonth08 == null)
            headerOutputBuffer.LedgerTypeMonth08_IsNull = true;
        else
            headerOutputBuffer.LedgerTypeMonth08 = headerData.LedgerTypeMonth08;

        if (headerData.LedgerTypeMonth09 == null)
            headerOutputBuffer.LedgerTypeMonth09_IsNull = true;
        else
            headerOutputBuffer.LedgerTypeMonth09 = headerData.LedgerTypeMonth09;

        if (headerData.LedgerTypeMonth10 == null)
            headerOutputBuffer.LedgerTypeMonth10_IsNull = true;
        else
            headerOutputBuffer.LedgerTypeMonth10 = headerData.LedgerTypeMonth10;

        if (headerData.LedgerTypeMonth11 == null)
            headerOutputBuffer.LedgerTypeMonth11_IsNull = true;
        else
            headerOutputBuffer.LedgerTypeMonth11 = headerData.LedgerTypeMonth11;

        if (headerData.LedgerTypeMonth12 == null)
            headerOutputBuffer.LedgerTypeMonth12_IsNull = true;
        else
            headerOutputBuffer.LedgerTypeMonth12 = headerData.LedgerTypeMonth12;

        if (headerData.LedgerTypeTotal == null)
            headerOutputBuffer.LedgerTypeTotal_IsNull = true;
        else
            headerOutputBuffer.LedgerTypeTotal = headerData.LedgerTypeTotal;

        // Meta info
        headerOutputBuffer.WorksheetName = worksheetName;
        headerOutputBuffer.RowNumber = rowNumber;
    }

    protected abstract void AddDetailDataOutputRow(ExcelDataInputBuffer row, string worksheetName);
    public abstract void ProcessInputRow(ExcelDataInputBuffer row, string worksheetName);    
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Parser\ExcelParser.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

public abstract class ExcelParser
{
    protected DetailDataOutputBuffer detailOutputBuffer;
    protected HeaderDataOutputBuffer headerOutputBuffer;

    public void SetHeaderOutputBuffer(HeaderDataOutputBuffer headerOutputBuffer)
    {
        this.headerOutputBuffer = headerOutputBuffer;
    }

    public void SetDetailOutputBuffer(DetailDataOutputBuffer detailOutputBuffer)
    {
        this.detailOutputBuffer = detailOutputBuffer;
    }

    public virtual bool StartParsingWorksheet(string worksheetName, ExcelDataInputBuffer firstRow)
    {
        return true;
    }

    public virtual void FinishParsingWorksheet(string worksheetName)
    {
    }

    protected void AddHeaderOutputRow(HeaderData headerData, string worksheetName, int rowNumber)
    {
        headerOutputBuffer.AddRow();

        // External Asset Name
        if (headerData.ExternalAssetName == null)
            headerOutputBuffer.ExternalAssetName_IsNull = true;
        else
            headerOutputBuffer.ExternalAssetName = headerData.ExternalAssetName;

        // Reporting Month Year
        if (headerData.ReportingMonthYear == null)
            headerOutputBuffer.ReportingMonthYear_IsNull = true;
        else
            headerOutputBuffer.ReportingMonthYear = headerData.ReportingMonthYear;

       

        // Meta info
        headerOutputBuffer.WorksheetName = worksheetName;
        headerOutputBuffer.RowNumber = rowNumber;
    }

    protected String ReadRowValue(ExcelDataInputBuffer row, int rowIndex)
    {
        String value = null;

        if (rowIndex <= 0 || rowIndex > row.ColumnCount)
            return value;

        switch (rowIndex)
        {
            case 1:
                value = row.F1;
                break;
            case 2:
                value = row.F2;
                break;
            case 3:
                value = row.F3;
                break;
            case 4:
                value = row.F4;
                break;
            case 5:
                value = row.F5;
                break;
            case 6:
                value = row.F6;
                break;
            case 7:
                value = row.F7;
                break;
            case 8:
                value = row.F8;
                break;
            case 9:
                value = row.F9;
                break;
            case 10:
                value = row.F10;
                break;
            case 11:
                value = row.F11;
                break;
            case 12:
                value = row.F12;
                break;
            case 13:
                value = row.F13;
                break;
            case 14:
                value = row.F14;
                break;
            case 15:
                value = row.F15;
                break;
            case 16:
                value = row.F16;
                break;
            case 17:
                value = row.F17;
                break;
            case 18:
                value = row.F18;
                break;
            case 19:
                value = row.F19;
                break;
            case 20:
                value = row.F20;
                break;
            case 21:
                value = row.F21;
                break;
            case 22:
                value = row.F22;
                break;
            case 23:
                value = row.F23;
                break;
            case 24:
                value = row.F24;
                break;
            case 25:
                value = row.F25;
                break;
            case 26:
                value = row.F26;
                break;
            case 27:
                value = row.F27;
                break;
            case 28:
                value = row.F28;
                break;
            case 29:
                value = row.F29;
                break;
            case 30:
                value = row.F30;
                break;
            case 31:
                value = row.F31;
                break;
        }

        return value;
    }

    protected abstract void AddDetailDataOutputRow(ExcelDataInputBuffer row, string worksheetName);
    public abstract void ProcessInputRow(ExcelDataInputBuffer row, string worksheetName);    
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Parser\MultiTabParser.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

public class MultiTabParser : ExcelParser
{
    private HeaderData headerData;

    public override bool StartParsingWorksheet(string worksheetName, ExcelDataInputBuffer firstRow)
    {
        var isIncomeStatement = firstRow.ColumnCount == 15 && !firstRow.F1_IsNull && firstRow.F1.StartsWith("Income Statement", StringComparison.InvariantCultureIgnoreCase);
        if (!isIncomeStatement)
            return false; // Skip the worksheet, not the one we want

        headerData = new HeaderData();
        return true;
    }    

    public override void ProcessInputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // Header info line 1 to 8
        if (row.RowNumber == 1)
        {
            headerData.Currency = row.F1.Split(' ').LastOrDefault();
        }
        if (row.RowNumber == 2)
        {
            headerData.AssetCode = row.F1;
        }
        if (row.RowNumber == 4)
        {
            headerData.DateMonth01 = row.F2;
            headerData.DateMonth02 = row.F3;
            headerData.DateMonth03 = row.F4;
            headerData.DateMonth04 = row.F5;
            headerData.DateMonth05 = row.F6;
            headerData.DateMonth06 = row.F7;
            headerData.DateMonth07 = row.F8;
            headerData.DateMonth08 = row.F9;
            headerData.DateMonth09 = row.F10;
            headerData.DateMonth10 = row.F11;
            headerData.DateMonth11 = row.F12;
            headerData.DateMonth12 = row.F13;
            headerData.DateTotal = row.F15;
        }
        if (row.RowNumber == 5)
        {
            headerData.LedgerTypeMonth01 = row.F2;
            headerData.LedgerTypeMonth02 = row.F3;
            headerData.LedgerTypeMonth03 = row.F4;
            headerData.LedgerTypeMonth04 = row.F5;
            headerData.LedgerTypeMonth05 = row.F6;
            headerData.LedgerTypeMonth06 = row.F7;
            headerData.LedgerTypeMonth07 = row.F8;
            headerData.LedgerTypeMonth08 = row.F9;
            headerData.LedgerTypeMonth09 = row.F10;
            headerData.LedgerTypeMonth10 = row.F11;
            headerData.LedgerTypeMonth11 = row.F12;
            headerData.LedgerTypeMonth12 = row.F13;
            headerData.LedgerTypeTotal = row.F15;
        }
        if (row.RowNumber == 8)
        {
            AddHeaderOutputRow(headerData, worksheetName, row.RowNumber);
        }

        // Detail info line 9 and after
        if (row.RowNumber >= 9)
        {
            AddDetailDataOutputRow(row, worksheetName);
        }
    }

    protected override void AddDetailDataOutputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // Skip empty lines
        if (String.IsNullOrWhiteSpace(row.F1) && String.IsNullOrWhiteSpace(row.F2))
            return;

        detailOutputBuffer.AddRow();

        // Account number
        string accountNumberPattern = @"^(?<account_number>[0-9]{5}-[0-9]{3}).*";
        Match accountNumberMatch = Regex.Match(row.F1, accountNumberPattern, RegexOptions.IgnoreCase);
        detailOutputBuffer.AccountNumber = accountNumberMatch.Groups["account_number"].Value;

        // Account name
        string accountNamePattern = @"^[[0-9]{5}-[0-9]{3}]{0,1}\s-\s(?<account_name>.+)$";
        Match accountNameMatch = Regex.Match(row.F1, accountNamePattern, RegexOptions.IgnoreCase);
        string accountName = accountNameMatch.Groups["account_name"].Value;
        detailOutputBuffer.AccountName = accountName.Length == 0 ? row.F1 : accountName;

        // Amounts Month01 to Month12
        if (row.F2_IsNull)
            detailOutputBuffer.AmountMonth01_IsNull = true;
        else
            detailOutputBuffer.AmountMonth01 = row.F2;

        if (row.F3_IsNull)
            detailOutputBuffer.AmountMonth02_IsNull = true;
        else
            detailOutputBuffer.AmountMonth02 = row.F3;

        if (row.F4_IsNull)
            detailOutputBuffer.AmountMonth03_IsNull = true;
        else
            detailOutputBuffer.AmountMonth03 = row.F4;

        if (row.F5_IsNull)
            detailOutputBuffer.AmountMonth04_IsNull = true;
        else
            detailOutputBuffer.AmountMonth04 = row.F5;

        if (row.F6_IsNull)
            detailOutputBuffer.AmountMonth05_IsNull = true;
        else
            detailOutputBuffer.AmountMonth05 = row.F6;

        if (row.F7_IsNull)
            detailOutputBuffer.AmountMonth06_IsNull = true;
        else
            detailOutputBuffer.AmountMonth06 = row.F7;

        if (row.F8_IsNull)
            detailOutputBuffer.AmountMonth07_IsNull = true;
        else
            detailOutputBuffer.AmountMonth07 = row.F8;

        if (row.F9_IsNull)
            detailOutputBuffer.AmountMonth08_IsNull = true;
        else
            detailOutputBuffer.AmountMonth08 = row.F9;

        if (row.F10_IsNull)
            detailOutputBuffer.AmountMonth09_IsNull = true;
        else
            detailOutputBuffer.AmountMonth09 = row.F10;

        if (row.F11_IsNull)
            detailOutputBuffer.AmountMonth10_IsNull = true;
        else
            detailOutputBuffer.AmountMonth10 = row.F11;

        if (row.F12_IsNull)
            detailOutputBuffer.AmountMonth11_IsNull = true;
        else
            detailOutputBuffer.AmountMonth11 = row.F12;

        if (row.F13_IsNull)
            detailOutputBuffer.AmountMonth12_IsNull = true;
        else
            detailOutputBuffer.AmountMonth12 = row.F13;

        if (row.F15_IsNull)
            detailOutputBuffer.AmountTotal_IsNull = true;
        else
            detailOutputBuffer.AmountTotal = row.F15;

        // Meta info
        detailOutputBuffer.WorksheetName = worksheetName;
        detailOutputBuffer.RowNumber = row.RowNumber;
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Parser\HeaderData.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

public class HeaderData
{
    public string RealEstateProperty;
    public string AccountingBasis;
    public string Currency;
    public string LedgerType;
    public string StatementType;
    public string DateMonth01;
    public string DateMonth02;
    public string DateMonth03;
    public string DateMonth04;
    public string DateMonth05;
    public string DateMonth06;
    public string DateMonth07;
    public string DateMonth08;
    public string DateMonth09;
    public string DateMonth10;
    public string DateMonth11;
    public string DateMonth12;
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Parser\MultiTabExcelParser.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

public class MultiTabExcelParser : ExcelParser
{
    private HeaderData headerData;

    public override bool StartParsingWorksheet(string worksheetName, ExcelDataInputBuffer firstRow)
    {
        var isIncomeStatement = firstRow.ColumnCount == 15 && !firstRow.F1_IsNull && firstRow.F1.StartsWith("Income Statement", StringComparison.InvariantCultureIgnoreCase);
        if (!isIncomeStatement)
            return false; // Skip the worksheet, not the one we want

        headerData = new HeaderData();
        return true;
    }    

    public override void ProcessInputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // StatementType
        if (row.RowNumber == 1)
        {
            headerData.StatementType = row.F1;
        }

        // RealEstateProperty
        if (row.RowNumber == 2)
        {
            headerData.RealEstateProperty = row.F1;
        }

        // Dates
        if (row.RowNumber == 4)
        {
            headerData.DateMonth01 = row.F2;
            headerData.DateMonth02 = row.F3;
            headerData.DateMonth03 = row.F4;
            headerData.DateMonth04 = row.F5;
            headerData.DateMonth05 = row.F6;
            headerData.DateMonth06 = row.F7;
            headerData.DateMonth07 = row.F8;
            headerData.DateMonth08 = row.F9;
            headerData.DateMonth09 = row.F10;
            headerData.DateMonth10 = row.F11;
            headerData.DateMonth11 = row.F12;
            headerData.DateMonth12 = row.F13;
        }

        // LedgerType + add header info to output buffer 
        if (row.RowNumber == 5)
        {
            headerData.LedgerType = row.F2;

            // Add header info to output buffer
            AddHeaderOutputRow(headerData, worksheetName, row.RowNumber);
        }

        // Detail info line 9 and after
        if (row.RowNumber >= 9)
        {
            AddDetailDataOutputRow(row, worksheetName);
        }
    }

    protected override void AddDetailDataOutputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // Skip empty lines
        if (String.IsNullOrWhiteSpace(row.F1) && String.IsNullOrWhiteSpace(row.F2))
            return;

        detailOutputBuffer.AddRow();

        // Account number + Account name
        detailOutputBuffer.AccountNumber = row.F1;

        // Amounts Month01 to Month12
        if (row.F2_IsNull)
            detailOutputBuffer.AmountMonth01_IsNull = true;
        else
            detailOutputBuffer.AmountMonth01 = row.F2;

        if (row.F3_IsNull)
            detailOutputBuffer.AmountMonth02_IsNull = true;
        else
            detailOutputBuffer.AmountMonth02 = row.F3;

        if (row.F4_IsNull)
            detailOutputBuffer.AmountMonth03_IsNull = true;
        else
            detailOutputBuffer.AmountMonth03 = row.F4;

        if (row.F5_IsNull)
            detailOutputBuffer.AmountMonth04_IsNull = true;
        else
            detailOutputBuffer.AmountMonth04 = row.F5;

        if (row.F6_IsNull)
            detailOutputBuffer.AmountMonth05_IsNull = true;
        else
            detailOutputBuffer.AmountMonth05 = row.F6;

        if (row.F7_IsNull)
            detailOutputBuffer.AmountMonth06_IsNull = true;
        else
            detailOutputBuffer.AmountMonth06 = row.F7;

        if (row.F8_IsNull)
            detailOutputBuffer.AmountMonth07_IsNull = true;
        else
            detailOutputBuffer.AmountMonth07 = row.F8;

        if (row.F9_IsNull)
            detailOutputBuffer.AmountMonth08_IsNull = true;
        else
            detailOutputBuffer.AmountMonth08 = row.F9;

        if (row.F10_IsNull)
            detailOutputBuffer.AmountMonth09_IsNull = true;
        else
            detailOutputBuffer.AmountMonth09 = row.F10;

        if (row.F11_IsNull)
            detailOutputBuffer.AmountMonth10_IsNull = true;
        else
            detailOutputBuffer.AmountMonth10 = row.F11;

        if (row.F12_IsNull)
            detailOutputBuffer.AmountMonth11_IsNull = true;
        else
            detailOutputBuffer.AmountMonth11 = row.F12;

        if (row.F13_IsNull)
            detailOutputBuffer.AmountMonth12_IsNull = true;
        else
            detailOutputBuffer.AmountMonth12 = row.F13;

        // Meta info
        detailOutputBuffer.WorksheetName = worksheetName;
        detailOutputBuffer.RowNumber = row.RowNumber;
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Parser\YardiExcelParser.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

public class YardiExcelParser : ExcelParser
{
    private HeaderData headerData;

    public override bool StartParsingWorksheet(string worksheetName, ExcelDataInputBuffer firstRow)
    {
        headerData = new HeaderData();
        return true;
    }

    public override void ProcessInputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // RealEstateProperty
        if (row.RowNumber == 1)
        {
            headerData.Asset = row.F1;
        }

        // StatementType
        if (row.RowNumber == 2)
        {
            headerData.StatementType = row.F1;
        }

        // AccountingBasis
        if (row.RowNumber == 4)
        {
            headerData.AccountingBasis = row.F1;
        }

        // Dates + add header info to output buffer
        if (row.RowNumber == 5)
        {
            headerData.DateMonth01 = row.F3;
            headerData.DateMonth02 = row.F4;
            headerData.DateMonth03 = row.F5;
            headerData.DateMonth04 = row.F6;
            headerData.DateMonth05 = row.F7;
            headerData.DateMonth06 = row.F8;
            headerData.DateMonth07 = row.F9;
            headerData.DateMonth08 = row.F10;
            headerData.DateMonth09 = row.F11;
            headerData.DateMonth10 = row.F12;
            headerData.DateMonth11 = row.F13;
            headerData.DateMonth12 = row.F14;

            // Add header info to output buffer
            AddHeaderOutputRow(headerData, worksheetName, row.RowNumber);
        }

        // Detail info line 7 and after
        if (row.RowNumber >= 7)
        {
            AddDetailDataOutputRow(row, worksheetName);
        }
    }

    protected override void AddDetailDataOutputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // Skip empty lines
        if (String.IsNullOrWhiteSpace(row.F3) && String.IsNullOrWhiteSpace(row.F4) &&
            String.IsNullOrWhiteSpace(row.F5) && String.IsNullOrWhiteSpace(row.F6) &&
            String.IsNullOrWhiteSpace(row.F7) && String.IsNullOrWhiteSpace(row.F8) &&
            String.IsNullOrWhiteSpace(row.F9) && String.IsNullOrWhiteSpace(row.F10) &&
            String.IsNullOrWhiteSpace(row.F11) && String.IsNullOrWhiteSpace(row.F12) &&
            String.IsNullOrWhiteSpace(row.F13) && String.IsNullOrWhiteSpace(row.F14))
            return;

        detailOutputBuffer.AddRow();

        // IsOperationalMetric
        detailOutputBuffer.IsOperationalMetric = false;

        // Account number
        if (String.IsNullOrWhiteSpace(row.F1))
            detailOutputBuffer.AccountNumber_IsNull = true;
        else
            detailOutputBuffer.AccountNumber = row.F1;

        // Account name
        if (String.IsNullOrWhiteSpace(row.F2))
            detailOutputBuffer.AccountName_IsNull = true;
        else
            detailOutputBuffer.AccountName = row.F2;

        // Amounts Month01 to Month12
        if (String.IsNullOrWhiteSpace(row.F3))
            detailOutputBuffer.AmountMonth01_IsNull = true;
        else
            detailOutputBuffer.AmountMonth01 = row.F3;

        if (String.IsNullOrWhiteSpace(row.F4))
            detailOutputBuffer.AmountMonth02_IsNull = true;
        else
            detailOutputBuffer.AmountMonth02 = row.F4;

        if (String.IsNullOrWhiteSpace(row.F5))
            detailOutputBuffer.AmountMonth03_IsNull = true;
        else
            detailOutputBuffer.AmountMonth03 = row.F5;

        if (String.IsNullOrWhiteSpace(row.F6))
            detailOutputBuffer.AmountMonth04_IsNull = true;
        else
            detailOutputBuffer.AmountMonth04 = row.F6;

        if (String.IsNullOrWhiteSpace(row.F7))
            detailOutputBuffer.AmountMonth05_IsNull = true;
        else
            detailOutputBuffer.AmountMonth05 = row.F7;

        if (String.IsNullOrWhiteSpace(row.F8))
            detailOutputBuffer.AmountMonth06_IsNull = true;
        else
            detailOutputBuffer.AmountMonth06 = row.F8;

        if (String.IsNullOrWhiteSpace(row.F9))
            detailOutputBuffer.AmountMonth07_IsNull = true;
        else
            detailOutputBuffer.AmountMonth07 = row.F9;

        if (String.IsNullOrWhiteSpace(row.F10))
            detailOutputBuffer.AmountMonth08_IsNull = true;
        else
            detailOutputBuffer.AmountMonth08 = row.F10;

        if (String.IsNullOrWhiteSpace(row.F11))
            detailOutputBuffer.AmountMonth09_IsNull = true;
        else
            detailOutputBuffer.AmountMonth09 = row.F11;

        if (String.IsNullOrWhiteSpace(row.F12))
            detailOutputBuffer.AmountMonth10_IsNull = true;
        else
            detailOutputBuffer.AmountMonth10 = row.F12;

        if (String.IsNullOrWhiteSpace(row.F13))
            detailOutputBuffer.AmountMonth11_IsNull = true;
        else
            detailOutputBuffer.AmountMonth11 = row.F13;

        if (String.IsNullOrWhiteSpace(row.F14))
            detailOutputBuffer.AmountMonth12_IsNull = true;
        else
            detailOutputBuffer.AmountMonth12 = row.F14;

        // Meta info
        detailOutputBuffer.WorksheetName = worksheetName;
        detailOutputBuffer.RowNumber = row.RowNumber;
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Parser\GreystarExcelParser.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

public class GreystarExcelParser : ExcelParser
{
    private HeaderData headerData;

    public override bool StartParsingWorksheet(string worksheetName, ExcelDataInputBuffer firstRow)
    {
        var isIncomeStatement = firstRow.ColumnCount >= 13 && firstRow.ColumnCount <= 15 && !firstRow.F1_IsNull && firstRow.F1.StartsWith("Income Statement", StringComparison.InvariantCultureIgnoreCase);
        if (!isIncomeStatement)
            return false; // Skip the worksheet, not the one we want

        headerData = new HeaderData();
        return true;
    }    

    public override void ProcessInputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // StatementType
        if (row.RowNumber == 1)
        {
            headerData.StatementType = row.F1;
        }

        // RealEstateProperty
        if (row.RowNumber == 2)
        {
            headerData.Asset = row.F1;
        }

        // Dates
        if (row.RowNumber == 4)
        {
            headerData.DateMonth01 = row.F2;
            headerData.DateMonth02 = row.F3;
            headerData.DateMonth03 = row.F4;
            headerData.DateMonth04 = row.F5;
            headerData.DateMonth05 = row.F6;
            headerData.DateMonth06 = row.F7;
            headerData.DateMonth07 = row.F8;
            headerData.DateMonth08 = row.F9;
            headerData.DateMonth09 = row.F10;
            headerData.DateMonth10 = row.F11;
            headerData.DateMonth11 = row.F12;
            headerData.DateMonth12 = row.F13;
        }

        // LedgerType + add header info to output buffer 
        if (row.RowNumber == 5)
        {
            headerData.LedgerType = row.F2;

            // Add header info to output buffer
            AddHeaderOutputRow(headerData, worksheetName, row.RowNumber);
        }

        // Detail info line 9 and after
        if (row.RowNumber >= 9)
        {
            AddDetailDataOutputRow(row, worksheetName);
        }
    }

    protected override void AddDetailDataOutputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // Skip empty lines and 'accounts' not starting by digits
        if ((String.IsNullOrWhiteSpace(row.F2) && String.IsNullOrWhiteSpace(row.F3) &&
            String.IsNullOrWhiteSpace(row.F4) && String.IsNullOrWhiteSpace(row.F5) &&
            String.IsNullOrWhiteSpace(row.F6) && String.IsNullOrWhiteSpace(row.F7) &&
            String.IsNullOrWhiteSpace(row.F8) && String.IsNullOrWhiteSpace(row.F9) &&
            String.IsNullOrWhiteSpace(row.F10) && String.IsNullOrWhiteSpace(row.F11) &&
            String.IsNullOrWhiteSpace(row.F12) && String.IsNullOrWhiteSpace(row.F13))
            || String.IsNullOrWhiteSpace(row.F1)  
            || !Regex.Match(row.F1.TrimStart(), "^[0-9]+.*").Success
            )
            return;

        detailOutputBuffer.AddRow();

        // IsOperationalMetric
        detailOutputBuffer.IsOperationalMetric = false;

        // Account number + Account name
        detailOutputBuffer.AccountNumber = row.F1.TrimStart();

        // Amounts Month01 to Month12
        if (String.IsNullOrWhiteSpace(row.F2))
            detailOutputBuffer.AmountMonth01_IsNull = true;
        else
            detailOutputBuffer.AmountMonth01 = row.F2;

        if (String.IsNullOrWhiteSpace(row.F3))
            detailOutputBuffer.AmountMonth02_IsNull = true;
        else
            detailOutputBuffer.AmountMonth02 = row.F3;

        if (String.IsNullOrWhiteSpace(row.F4))
            detailOutputBuffer.AmountMonth03_IsNull = true;
        else
            detailOutputBuffer.AmountMonth03 = row.F4;

        if (String.IsNullOrWhiteSpace(row.F5))
            detailOutputBuffer.AmountMonth04_IsNull = true;
        else
            detailOutputBuffer.AmountMonth04 = row.F5;

        if (String.IsNullOrWhiteSpace(row.F6))
            detailOutputBuffer.AmountMonth05_IsNull = true;
        else
            detailOutputBuffer.AmountMonth05 = row.F6;

        if (String.IsNullOrWhiteSpace(row.F7))
            detailOutputBuffer.AmountMonth06_IsNull = true;
        else
            detailOutputBuffer.AmountMonth06 = row.F7;

        if (String.IsNullOrWhiteSpace(row.F8))
            detailOutputBuffer.AmountMonth07_IsNull = true;
        else
            detailOutputBuffer.AmountMonth07 = row.F8;

        if (String.IsNullOrWhiteSpace(row.F9))
            detailOutputBuffer.AmountMonth08_IsNull = true;
        else
            detailOutputBuffer.AmountMonth08 = row.F9;

        if (String.IsNullOrWhiteSpace(row.F10))
            detailOutputBuffer.AmountMonth09_IsNull = true;
        else
            detailOutputBuffer.AmountMonth09 = row.F10;

        if (String.IsNullOrWhiteSpace(row.F11))
            detailOutputBuffer.AmountMonth10_IsNull = true;
        else
            detailOutputBuffer.AmountMonth10 = row.F11;

        if (String.IsNullOrWhiteSpace(row.F12))
            detailOutputBuffer.AmountMonth11_IsNull = true;
        else
            detailOutputBuffer.AmountMonth11 = row.F12;

        if (String.IsNullOrWhiteSpace(row.F13))
            detailOutputBuffer.AmountMonth12_IsNull = true;
        else
            detailOutputBuffer.AmountMonth12 = row.F13;

        // Meta info
        detailOutputBuffer.WorksheetName = worksheetName;
        detailOutputBuffer.RowNumber = row.RowNumber;
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Parser\BlackstoneParser.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

public class BlackstoneParser : ExcelParser
{
    private HeaderData headerData;
    private int lastColumn;

    public override bool StartParsingWorksheet(string worksheetName, ExcelDataInputBuffer firstRow)
    {
        headerData = new HeaderData();
        return true;
    }

    public override void ProcessInputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // RealEstateProperty
        if (row.RowNumber == 2)
        {
            headerData.RealEstateProperty = row.F4;
        }

        // StatementType
        if (row.RowNumber == 3)
        {
            headerData.StatementType = row.F4;
        }

        // Find the last column
        if (row.RowNumber == 5)
        {
            string lastColumnMarker = "Total";
            if (row.F3 == "Total")
                lastColumn = 3;
            else if (row.F4 == "Total")
        }

        // AccountingBasis
        if (row.RowNumber == 6)
        {
            headerData.AccountingBasis = row.F1;
        }

        // Dates + add header info to output buffer
        if (row.RowNumber == 6)
        {
            headerData.DateMonth01 = row.F2;
            headerData.DateMonth02 = row.F3;
            headerData.DateMonth03 = row.F4;
            headerData.DateMonth04 = row.F5;
            headerData.DateMonth05 = row.F6;
            headerData.DateMonth06 = row.F7;
            headerData.DateMonth07 = row.F8;
            headerData.DateMonth08 = row.F9;
            headerData.DateMonth09 = row.F10;
            headerData.DateMonth10 = row.F11;
            headerData.DateMonth11 = row.F12;
            headerData.DateMonth12 = row.F13;

            // Add header info to output buffer
            AddHeaderOutputRow(headerData, worksheetName, row.RowNumber);
        }

        // Detail info line 7 and after
        if (row.RowNumber >= 7)
        {
            AddDetailDataOutputRow(row, worksheetName);
        }
    }

    protected override void AddDetailDataOutputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // Skip empty lines
        if (String.IsNullOrWhiteSpace(row.F1) && String.IsNullOrWhiteSpace(row.F8) &&
            String.IsNullOrWhiteSpace(row.F2) && String.IsNullOrWhiteSpace(row.F9) &&
            String.IsNullOrWhiteSpace(row.F3) && String.IsNullOrWhiteSpace(row.F10) &&
            String.IsNullOrWhiteSpace(row.F4) && String.IsNullOrWhiteSpace(row.F11) &&
            String.IsNullOrWhiteSpace(row.F5) && String.IsNullOrWhiteSpace(row.F12) &&
            String.IsNullOrWhiteSpace(row.F6) && String.IsNullOrWhiteSpace(row.F13) &&
            String.IsNullOrWhiteSpace(row.F7) && String.IsNullOrWhiteSpace(row.F14))
            return;

        detailOutputBuffer.AddRow();

        // Account number
        if (row.F1_IsNull)
            detailOutputBuffer.AccountNumber_IsNull = true;
        else
            detailOutputBuffer.AccountNumber = row.F1;

        // Account name
        if (row.F2_IsNull)
            detailOutputBuffer.AccountName_IsNull = true;
        else
            detailOutputBuffer.AccountName = row.F2;

        // Amounts Month01 to Month12
        if (row.F3_IsNull)
            detailOutputBuffer.AmountMonth01_IsNull = true;
        else
            detailOutputBuffer.AmountMonth01 = row.F3;

        if (row.F4_IsNull)
            detailOutputBuffer.AmountMonth02_IsNull = true;
        else
            detailOutputBuffer.AmountMonth02 = row.F4;

        if (row.F5_IsNull)
            detailOutputBuffer.AmountMonth03_IsNull = true;
        else
            detailOutputBuffer.AmountMonth03 = row.F5;

        if (row.F6_IsNull)
            detailOutputBuffer.AmountMonth04_IsNull = true;
        else
            detailOutputBuffer.AmountMonth04 = row.F6;

        if (row.F7_IsNull)
            detailOutputBuffer.AmountMonth05_IsNull = true;
        else
            detailOutputBuffer.AmountMonth05 = row.F7;

        if (row.F8_IsNull)
            detailOutputBuffer.AmountMonth06_IsNull = true;
        else
            detailOutputBuffer.AmountMonth06 = row.F8;

        if (row.F9_IsNull)
            detailOutputBuffer.AmountMonth07_IsNull = true;
        else
            detailOutputBuffer.AmountMonth07 = row.F9;

        if (row.F10_IsNull)
            detailOutputBuffer.AmountMonth08_IsNull = true;
        else
            detailOutputBuffer.AmountMonth08 = row.F10;

        if (row.F11_IsNull)
            detailOutputBuffer.AmountMonth09_IsNull = true;
        else
            detailOutputBuffer.AmountMonth09 = row.F11;

        if (row.F12_IsNull)
            detailOutputBuffer.AmountMonth10_IsNull = true;
        else
            detailOutputBuffer.AmountMonth10 = row.F12;

        if (row.F13_IsNull)
            detailOutputBuffer.AmountMonth11_IsNull = true;
        else
            detailOutputBuffer.AmountMonth11 = row.F13;

        if (row.F14_IsNull)
            detailOutputBuffer.AmountMonth12_IsNull = true;
        else
            detailOutputBuffer.AmountMonth12 = row.F14;

        // Meta info
        detailOutputBuffer.WorksheetName = worksheetName;
        detailOutputBuffer.RowNumber = row.RowNumber;
    }
}

]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Data\HeaderData.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

public class HeaderData
{
    public string ReportingMonthYear;
    public string ExternalAssetName;

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Parser\BlackstoneExcelParser.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

public class BlackstoneExcelParser : ExcelParser
{
    private HeaderData headerData;
    private string lastColumnMarker = "Total";
    private int lastColumnIndex = -1;

    public override bool StartParsingWorksheet(string worksheetName, ExcelDataInputBuffer firstRow)
    {
        headerData = new HeaderData();
        return true;
    }

    public override void ProcessInputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // RealEstateProperty
        if (row.RowNumber == 1)
        {
            headerData.RealEstateProperty = row.F4;
        }

        // StatementType
        if (row.RowNumber == 2)
        {
            headerData.StatementType = row.F4;
        }

        // Find the last column
        if (row.RowNumber == 4)
        {
            for (int i = 1; i <= row.ColumnCount; i++)
            {
                if (ReadRowValue(row, i) == lastColumnMarker)
                {
                    lastColumnIndex = i;
                    break;
                }
            }
        }

        // AccountingBasis
        if (row.RowNumber == 5)
        {
            headerData.AccountingBasis = row.F1;
        }

        // LedgerTypeCode
        if (row.RowNumber == 5)
        {
            headerData.LedgerType = ReadRowValue(row, lastColumnIndex);
        }

        // Dates + add header info to output buffer
        if (row.RowNumber == 5)
        {
            if (lastColumnIndex > 2)
                headerData.DateMonth01 = row.F2;
            if (lastColumnIndex > 3)
                headerData.DateMonth02 = row.F3;
            if (lastColumnIndex > 4)
                headerData.DateMonth03 = row.F4;
            if (lastColumnIndex > 5)
                headerData.DateMonth04 = row.F5;
            if (lastColumnIndex > 6)
                headerData.DateMonth05 = row.F6;
            if (lastColumnIndex > 7)
                headerData.DateMonth06 = row.F7;
            if (lastColumnIndex > 8)
                headerData.DateMonth07 = row.F8;
            if (lastColumnIndex > 9)
                headerData.DateMonth08 = row.F9;
            if (lastColumnIndex > 10)
                headerData.DateMonth09 = row.F10;
            if (lastColumnIndex > 11)
                headerData.DateMonth10 = row.F11;
            if (lastColumnIndex > 12)
                headerData.DateMonth11 = row.F12;
            if (lastColumnIndex > 13)
                headerData.DateMonth12 = row.F13;

            // Add header info to output buffer
            AddHeaderOutputRow(headerData, worksheetName, row.RowNumber);
        }

        // Detail 
        if (row.RowNumber >= 6)
        {
            AddDetailDataOutputRow(row, worksheetName);
        }
    }

    protected override void AddDetailDataOutputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // Skip empty lines
        if (String.IsNullOrWhiteSpace(row.F2) && String.IsNullOrWhiteSpace(row.F3) &&
            String.IsNullOrWhiteSpace(row.F4) && String.IsNullOrWhiteSpace(row.F5) &&
            String.IsNullOrWhiteSpace(row.F6) && String.IsNullOrWhiteSpace(row.F7) &&
            String.IsNullOrWhiteSpace(row.F8) && String.IsNullOrWhiteSpace(row.F9) &&
            String.IsNullOrWhiteSpace(row.F10) && String.IsNullOrWhiteSpace(row.F11) &&
            String.IsNullOrWhiteSpace(row.F12) && String.IsNullOrWhiteSpace(row.F13) &&
            String.IsNullOrWhiteSpace(row.F14))
            return;

        detailOutputBuffer.AddRow();

        // Account number & account name
        if (row.F1_IsNull)
            detailOutputBuffer.AccountNumber_IsNull = true;
        else
            detailOutputBuffer.AccountNumber = row.F1;

        // Amounts Month01 to Month12
        if (row.F2_IsNull)
            detailOutputBuffer.AmountMonth01_IsNull = true;
        else
            detailOutputBuffer.AmountMonth01 = row.F3;

        if (row.F3_IsNull)
            detailOutputBuffer.AmountMonth02_IsNull = true;
        else
            detailOutputBuffer.AmountMonth02 = row.F4;

        if (row.F4_IsNull)
            detailOutputBuffer.AmountMonth03_IsNull = true;
        else
            detailOutputBuffer.AmountMonth03 = row.F5;

        if (row.F5_IsNull)
            detailOutputBuffer.AmountMonth04_IsNull = true;
        else
            detailOutputBuffer.AmountMonth04 = row.F6;

        if (row.F6_IsNull)
            detailOutputBuffer.AmountMonth05_IsNull = true;
        else
            detailOutputBuffer.AmountMonth05 = row.F7;

        if (row.F7_IsNull)
            detailOutputBuffer.AmountMonth06_IsNull = true;
        else
            detailOutputBuffer.AmountMonth06 = row.F8;

        if (row.F8_IsNull)
            detailOutputBuffer.AmountMonth07_IsNull = true;
        else
            detailOutputBuffer.AmountMonth07 = row.F9;

        if (row.F9_IsNull)
            detailOutputBuffer.AmountMonth08_IsNull = true;
        else
            detailOutputBuffer.AmountMonth08 = row.F10;

        if (row.F10_IsNull)
            detailOutputBuffer.AmountMonth09_IsNull = true;
        else
            detailOutputBuffer.AmountMonth09 = row.F11;

        if (row.F11_IsNull)
            detailOutputBuffer.AmountMonth10_IsNull = true;
        else
            detailOutputBuffer.AmountMonth10 = row.F12;

        if (row.F12_IsNull)
            detailOutputBuffer.AmountMonth11_IsNull = true;
        else
            detailOutputBuffer.AmountMonth11 = row.F13;

        if (row.F13_IsNull)
            detailOutputBuffer.AmountMonth12_IsNull = true;
        else
            detailOutputBuffer.AmountMonth12 = row.F14;

        // Meta info
        detailOutputBuffer.WorksheetName = worksheetName;
        detailOutputBuffer.RowNumber = row.RowNumber;
    }
}

]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Parser\RockhillExcelParser.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

public class RockhillExcelParser : ExcelParser
{
    private HeaderData headerData;

    public override bool StartParsingWorksheet(string worksheetName, ExcelDataInputBuffer firstRow)
    {
        headerData = new HeaderData();
        return true;
    }

    public override void ProcessInputRow(ExcelDataInputBuffer row, string worksheetName)
    {

        // ExternalAssetName
        if (row.RowNumber == 6)
        {
            headerData.ExternalAssetName = row.F18;

           
        }


        // ReportingMonthYear + add header info to output buffer
        if (row.RowNumber == 9)
        {
            headerData.ReportingMonthYear = row.F18;

            // Add header info to output buffer
            AddHeaderOutputRow(headerData, worksheetName, row.RowNumber);

        }

        





        // Detail info line 13 and after
        if (row.RowNumber >= 13)
        {
            AddDetailDataOutputRow(row, worksheetName);
        }
    }

    protected override void AddDetailDataOutputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // empty lines
        if (String.IsNullOrWhiteSpace(row.F2) && String.IsNullOrWhiteSpace(row.F4) &&
         String.IsNullOrWhiteSpace(row.F8) && String.IsNullOrWhiteSpace(row.F17) &&
         String.IsNullOrWhiteSpace(row.F26) && String.IsNullOrWhiteSpace(row.F28) &&
         String.IsNullOrWhiteSpace(row.F30))
            return;
        if (String.IsNullOrWhiteSpace(row.F2) || row.F2 == "Unit" || row.F2 == "Unité")
            return;

        detailOutputBuffer.AddRow();

      

        // UnitNumber
        if (String.IsNullOrWhiteSpace(row.F2))
            detailOutputBuffer.UnitNumber_IsNull = true;
        else
            detailOutputBuffer.UnitNumber = row.F2;

        // TenantName
        if (String.IsNullOrWhiteSpace(row.F4))
            detailOutputBuffer.TenantName_IsNull = true;
        else
            detailOutputBuffer.TenantName = row.F4;

        
        if (String.IsNullOrWhiteSpace(row.F28))
            detailOutputBuffer.EffectiveEndDate_IsNull = true;
        else
            detailOutputBuffer.EffectiveEndDate = row.F28;

        if (String.IsNullOrWhiteSpace(row.F17))
            detailOutputBuffer.RentAmount_IsNull = true;
        else
            detailOutputBuffer.RentAmount= row.F17;

        if (String.IsNullOrWhiteSpace(row.F8))
            detailOutputBuffer.ExternalUnitType_IsNull = true;
        else
            detailOutputBuffer.ExternalUnitType = row.F8;

        if (String.IsNullOrWhiteSpace(row.F26))
            detailOutputBuffer.MoveInDate_IsNull = true;
        else
            detailOutputBuffer.MoveInDate = row.F26;

        if (String.IsNullOrWhiteSpace(row.F30))
            detailOutputBuffer.MoveOutDate_IsNull = true;
        else
            detailOutputBuffer.MoveOutDate = row.F30;

        

        // Meta info
        detailOutputBuffer.WorksheetName = worksheetName;
        detailOutputBuffer.RowNumber = row.RowNumber;
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Parser\StarwoodExcelParser.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

internal class StarwoodExcelParser : ExcelParser
{
    private HeaderData headerData;
    private string fileName;
    private bool IsOperationalMetric;

    public StarwoodExcelParser(string fileName)
    {
        this.fileName = fileName;
    }

    public override bool StartParsingWorksheet(string worksheetName, ExcelDataInputBuffer firstRow)
    {
        if (worksheetName.ToUpper() != "ZBUN10 REPORTS")
            return false; // Skip the worksheet, not the one we want

        headerData = new HeaderData();
        IsOperationalMetric = true;
        return true;
    } 

    public override void ProcessInputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // ExtractionDate
        if (row.RowNumber == 1)
        {
            headerData.ExtractionDate = row.F15;
        }

        // Currency & Asset & Time
        if (row.RowNumber == 2)
        {
            headerData.Currency = row.F1;
            // Pour Food&Bev l'asset est présent dans le nom du fichier. Attention le fichier devient préfixé à son passage dans PNMSoft
            headerData.Asset = row.F7.ToUpper().Contains("SUMMARY") ? Regex.Match(fileName, "^(\\d*_?)(.*?)[0-9][0-9][0-9][0-9].*").Groups[2].Value : row.F7;
            headerData.ExtractionDate = headerData.ExtractionDate + " " + row.F15;
        }

        // StatementType
        if (row.RowNumber == 3)
        {
            headerData.StatementType = row.F7;
        }

        //Reporting Period Year
        if (row.RowNumber == 4)
        {
            headerData.ReportingPeriod = row.F7;
        }

        // LedgerType 
        if (row.RowNumber == 6)
        {
            headerData.LedgerType = row.F3;
        }

        // Dates + add header info to output buffer
        if (row.RowNumber == 7)
        {
            headerData.DateMonth01 = row.F2;
            headerData.DateMonth02 = row.F3;
            headerData.DateMonth03 = row.F4;
            headerData.DateMonth04 = row.F5;
            headerData.DateMonth05 = row.F6;
            headerData.DateMonth06 = row.F7;
            headerData.DateMonth07 = row.F8;
            headerData.DateMonth08 = row.F9;
            headerData.DateMonth09 = row.F10;
            headerData.DateMonth10 = row.F11;
            headerData.DateMonth11 = row.F12;
            headerData.DateMonth12 = row.F13;

            // Add header info to output buffer
            AddHeaderOutputRow(headerData, worksheetName, row.RowNumber);
        }

        // Detail info line 8 and after
        if (row.RowNumber >= 8)
        {
            AddDetailDataOutputRow(row, worksheetName);
        }
    }

    protected override void AddDetailDataOutputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // Skip empty lines
        if (String.IsNullOrWhiteSpace(row.F1) || (String.IsNullOrWhiteSpace(row.F2) && String.IsNullOrWhiteSpace(row.F3) &&
            String.IsNullOrWhiteSpace(row.F4) && String.IsNullOrWhiteSpace(row.F5) &&
            String.IsNullOrWhiteSpace(row.F6) && String.IsNullOrWhiteSpace(row.F7) &&
            String.IsNullOrWhiteSpace(row.F8) && String.IsNullOrWhiteSpace(row.F9) &&
            String.IsNullOrWhiteSpace(row.F10) && String.IsNullOrWhiteSpace(row.F11) &&
            String.IsNullOrWhiteSpace(row.F12) && String.IsNullOrWhiteSpace(row.F13)))
            return;

        // As soon as we hit "OPERATING REVENUE" section then we are leaving operational metrics section
        if (row.F1.ToUpper() == "OPERATING REVENUE" || row.F1.ToUpper() == "FOOD AND BEVERAGE" || row.F1.ToUpper() == "ROOMS")
            IsOperationalMetric = false;

        detailOutputBuffer.AddRow();

        // IsOperationalMetric
        detailOutputBuffer.IsOperationalMetric = IsOperationalMetric;

        // Item name (Account + Metrics)
        if (String.IsNullOrWhiteSpace(row.F1))
            detailOutputBuffer.AccountName_IsNull = true;
        else
            detailOutputBuffer.AccountName = row.F1;

        // Amounts Month01 to Month12
        if (String.IsNullOrWhiteSpace(row.F2))
            detailOutputBuffer.AmountMonth01_IsNull = true;
        else
            detailOutputBuffer.AmountMonth01 = row.F2;

        if (String.IsNullOrWhiteSpace(row.F3))
            detailOutputBuffer.AmountMonth02_IsNull = true;
        else
            detailOutputBuffer.AmountMonth02 = row.F3;

        if (String.IsNullOrWhiteSpace(row.F4))
            detailOutputBuffer.AmountMonth03_IsNull = true;
        else
            detailOutputBuffer.AmountMonth03 = row.F4;

        if (String.IsNullOrWhiteSpace(row.F5))
            detailOutputBuffer.AmountMonth04_IsNull = true;
        else
            detailOutputBuffer.AmountMonth04 = row.F5;

        if (String.IsNullOrWhiteSpace(row.F6))
            detailOutputBuffer.AmountMonth05_IsNull = true;
        else
            detailOutputBuffer.AmountMonth05 = row.F6;

        if (String.IsNullOrWhiteSpace(row.F7))
            detailOutputBuffer.AmountMonth06_IsNull = true;
        else
            detailOutputBuffer.AmountMonth06 = row.F7;

        if (String.IsNullOrWhiteSpace(row.F8))
            detailOutputBuffer.AmountMonth07_IsNull = true;
        else
            detailOutputBuffer.AmountMonth07 = row.F8;

        if (String.IsNullOrWhiteSpace(row.F9))
            detailOutputBuffer.AmountMonth08_IsNull = true;
        else
            detailOutputBuffer.AmountMonth08 = row.F9;

        if (String.IsNullOrWhiteSpace(row.F10))
            detailOutputBuffer.AmountMonth09_IsNull = true;
        else
            detailOutputBuffer.AmountMonth09 = row.F10;

        if (String.IsNullOrWhiteSpace(row.F11))
            detailOutputBuffer.AmountMonth10_IsNull = true;
        else
            detailOutputBuffer.AmountMonth10 = row.F11;

        if (String.IsNullOrWhiteSpace(row.F12))
            detailOutputBuffer.AmountMonth11_IsNull = true;
        else
            detailOutputBuffer.AmountMonth11 = row.F12;

        if (String.IsNullOrWhiteSpace(row.F13))
            detailOutputBuffer.AmountMonth12_IsNull = true;
        else
            detailOutputBuffer.AmountMonth12 = row.F13;

        // Meta info
        detailOutputBuffer.WorksheetName = worksheetName;
        detailOutputBuffer.RowNumber = row.RowNumber;
    }
}]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Parser\FairmontExcelParser.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

internal class FairmontExcelParser : ExcelParser
{
    private HeaderData headerData;
    private string CurrentSectionHeaderName;
    private string CurrentItemName;
    private bool IsOperationalMetric;

    public override bool StartParsingWorksheet(string worksheetName, ExcelDataInputBuffer firstRow)
    {
        headerData = new HeaderData();
        IsOperationalMetric = true;
        return true;
    }

    public override void ProcessInputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // Asset
        if (row.RowNumber == 1)
        {
            headerData.Asset = row.F1;
        }

        // ReportingPeriod
        if (row.RowNumber == 4)
        {
            headerData.ReportingPeriod = row.F1;
        }

        // StatementType
        if (row.RowNumber == 5)
        {
            headerData.StatementType = row.F1;
        }

        // Dates + add header info to output buffer
        if (row.RowNumber == 7)
        {
            headerData.DateMonth01 = row.F3;
            headerData.DateMonth02 = row.F4;
            headerData.DateMonth03 = row.F5;
            headerData.DateMonth04 = row.F6;
            headerData.DateMonth05 = row.F7;
            headerData.DateMonth06 = row.F8;
            headerData.DateMonth07 = row.F9;
            headerData.DateMonth08 = row.F10;
            headerData.DateMonth09 = row.F11;
            headerData.DateMonth10 = row.F12;
            headerData.DateMonth11 = row.F13;
            headerData.DateMonth12 = row.F14;

            // Add header info to output buffer
            AddHeaderOutputRow(headerData, worksheetName, row.RowNumber);
        }

        // Detail info line 8 and after
        if (row.RowNumber >= 8)
        {
            AddDetailDataOutputRow(row, worksheetName);
        }
    }

    protected override void AddDetailDataOutputRow(ExcelDataInputBuffer row, string worksheetName)
    {
        // Skip empty lines
        if (String.IsNullOrWhiteSpace(row.F1) && String.IsNullOrWhiteSpace(row.F2))
            return;

        // Hypothesis: a row without amounts is a 'Section Header'
        if (String.IsNullOrWhiteSpace(row.F3) && String.IsNullOrWhiteSpace(row.F4) &&
            String.IsNullOrWhiteSpace(row.F5) && String.IsNullOrWhiteSpace(row.F6) &&
            String.IsNullOrWhiteSpace(row.F7) && String.IsNullOrWhiteSpace(row.F8) &&
            String.IsNullOrWhiteSpace(row.F9) && String.IsNullOrWhiteSpace(row.F10) &&
            String.IsNullOrWhiteSpace(row.F11) && String.IsNullOrWhiteSpace(row.F12) &&
            String.IsNullOrWhiteSpace(row.F13) && String.IsNullOrWhiteSpace(row.F14))
        {
            CurrentSectionHeaderName = (String.IsNullOrWhiteSpace(row.F1) ? row.F2 : row.F1) + " - ";
            // As soon as we hit "REVENUE" section then we are leaving operational metrics section
            IsOperationalMetric = CurrentSectionHeaderName.ToUpper() == "REVENUE - " ? false : IsOperationalMetric;
            return;
        }
        
        detailOutputBuffer.AddRow();

        // IsOperationalMetric
        detailOutputBuffer.IsOperationalMetric = IsOperationalMetric;

        // Item name (Account + Metrics)
        CurrentItemName = CurrentSectionHeaderName + (String.IsNullOrWhiteSpace(row.F1) ? row.F2 : row.F1);
        detailOutputBuffer.AccountName = CurrentItemName;
        // Reset Section Header if current Item is TOTAL
        if ((String.IsNullOrWhiteSpace(row.F1) ? row.F2 : row.F1).ToUpper() == "TOTAL")
            CurrentSectionHeaderName = "";

        // Amounts Month01 to Month12
        if (String.IsNullOrWhiteSpace(row.F3))
            detailOutputBuffer.AmountMonth01_IsNull = true;
        else
            detailOutputBuffer.AmountMonth01 = row.F3;

        if (String.IsNullOrWhiteSpace(row.F4))
            detailOutputBuffer.AmountMonth02_IsNull = true;
        else
            detailOutputBuffer.AmountMonth02 = row.F4;

        if (String.IsNullOrWhiteSpace(row.F5))
            detailOutputBuffer.AmountMonth03_IsNull = true;
        else
            detailOutputBuffer.AmountMonth03 = row.F5;

        if (String.IsNullOrWhiteSpace(row.F6))
            detailOutputBuffer.AmountMonth04_IsNull = true;
        else
            detailOutputBuffer.AmountMonth04 = row.F6;

        if (String.IsNullOrWhiteSpace(row.F7))
            detailOutputBuffer.AmountMonth05_IsNull = true;
        else
            detailOutputBuffer.AmountMonth05 = row.F7;

        if (String.IsNullOrWhiteSpace(row.F8))
            detailOutputBuffer.AmountMonth06_IsNull = true;
        else
            detailOutputBuffer.AmountMonth06 = row.F8;

        if (String.IsNullOrWhiteSpace(row.F9))
            detailOutputBuffer.AmountMonth07_IsNull = true;
        else
            detailOutputBuffer.AmountMonth07 = row.F9;

        if (String.IsNullOrWhiteSpace(row.F10))
            detailOutputBuffer.AmountMonth08_IsNull = true;
        else
            detailOutputBuffer.AmountMonth08 = row.F10;

        if (String.IsNullOrWhiteSpace(row.F11))
            detailOutputBuffer.AmountMonth09_IsNull = true;
        else
            detailOutputBuffer.AmountMonth09 = row.F11;

        if (String.IsNullOrWhiteSpace(row.F12))
            detailOutputBuffer.AmountMonth10_IsNull = true;
        else
            detailOutputBuffer.AmountMonth10 = row.F12;

        if (String.IsNullOrWhiteSpace(row.F13))
            detailOutputBuffer.AmountMonth11_IsNull = true;
        else
            detailOutputBuffer.AmountMonth11 = row.F13;

        if (String.IsNullOrWhiteSpace(row.F14))
            detailOutputBuffer.AmountMonth12_IsNull = true;
        else
            detailOutputBuffer.AmountMonth12 = row.F14;

        // Meta info
        detailOutputBuffer.WorksheetName = worksheetName;
        detailOutputBuffer.RowNumber = row.RowNumber;
    }
}]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_26705E76C9FF4BE88FB632315FBFFBCD.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAA4SFlkAAAAAAAAAAOAAIiALATAAADYAAAAIAAAAAAAAelUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAChVAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAgDUAAAAgAAAANgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAA4AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABc
VQAAAAAAAEgAAAACAAUAYC4AABAmAAABAAAAAAAAAHBUAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACICA30CAAAEKiICA30BAAAEKgoXKgYqABMwAgByAAAAAAAA
AAJ7AgAABG91AAAGA3sEAAAELQ4CewIAAAQXb3AAAAYrEQJ7AgAABAN7BAAABG9vAAAGA3sDAAAE
LQ4CewIAAAQXb24AAAYrEQJ7AgAABAN7AwAABG9tAAAGAnsCAAAEBG9xAAAGAnsCAAAEBW9zAAAG
KgAAEzACAOEBAAABAAARFAoEFjEJBANvUAAABjECBioEF1lFHwAAAAUAAAARAAAAHQAAACkAAAA1
AAAAQQAAAE0AAABZAAAAZQAAAHEAAAB9AAAAiQAAAJUAAAChAAAArQAAALkAAADFAAAAzgAAANcA
AADgAAAA6QAAAPIAAAD7AAAABAEAAA0BAAAWAQAAHwEAACgBAAAxAQAAOgEAAEMBAAA4RQEAAANv
EAAABgo4OQEAAANvEgAABgo4LQEAAANvFAAABgo4IQEAAANvFgAABgo4FQEAAANvGAAABgo4CQEA
AANvGgAABgo4/QAAAANvHAAABgo48QAAAANvHgAABgo45QAAAANvIAAABgo42QAAAANvIgAABgo4
zQAAAANvJAAABgo4wQAAAANvJgAABgo4tQAAAANvKAAABgo4qQAAAANvKgAABgo4nQAAAANvLAAA
Bgo4kQAAAANvLgAABgo4hQAAAANvMAAABgorfANvMgAABgorcwNvNAAABgoragNvNgAABgorYQNv
OAAABgorWANvPAAABgorTwNvOgAABgorRgNvPgAABgorPQNvQAAABgorNANvQgAABgorKwNvRAAA
BgorIgNvRgAABgorGQNvSAAABgorEANvSgAABgorBwNvTAAABgoGKh4CKBAAAAoqAAAAEzACAEUA
AAABAAARAigRAAAKAhZ9BQAABAIUfQYAAAQCFn0HAAAEAnsKAAAEb4IAAAZvEgAACgoGcgEAAHAo
EwAACiwLAnOJAAAGfQgAAAQqYgIoFAAACgJ7CgAABAJ7BQAABG+FAAAGKgAAEzAEAKsAAAAAAAAA
AnsIAAAEAnsMAAAEbwEAAAYCewgAAAQCewsAAARvAgAABit7AgJ7BQAABBdYfQUAAAQCewYAAAQD
b04AAAYoFQAACixAAnsGAAAELBECewgAAAQCewYAAARvBAAABgIDb04AAAZ9BgAABAICewgAAAQC
ewYAAAQDbwMAAAYW/gF9BwAABAJ7BwAABC0SAnsIAAAEAwJ7BgAABG8IAAAGA29UAAAGOnr///8q
HgIoeAAABioqAgMEBSgWAAAKKlICexcAAAoCexgAAAoWlG8ZAAAKKiICFigaAAAKKlICexcAAAoC
exgAAAoXlG8ZAAAKKiICFygaAAAKKlICexcAAAoCexgAAAoYlG8ZAAAKKiICGCgaAAAKKlICexcA
AAoCexgAAAoZlG8ZAAAKKiICGSgaAAAKKlICexcAAAoCexgAAAoalG8ZAAAKKiICGigaAAAKKlIC
excAAAoCexgAAAoblG8ZAAAKKiICGygaAAAKKlICexcAAAoCexgAAAoclG8ZAAAKKiICHCgaAAAK
KlICexcAAAoCexgAAAodlG8ZAAAKKiICHSgaAAAKKlICexcAAAoCexgAAAoelG8ZAAAKKiICHiga
AAAKKlYCexcAAAoCexgAAAofCZRvGQAACiomAh8JKBoAAAoqVgJ7FwAACgJ7GAAACh8KlG8ZAAAK
KiYCHwooGgAACipWAnsXAAAKAnsYAAAKHwuUbxkAAAoqJgIfCygaAAAKKlYCexcAAAoCexgAAAof
DJRvGQAACiomAh8MKBoAAAoqVgJ7FwAACgJ7GAAACh8NlG8ZAAAKKiYCHw0oGgAACipWAnsXAAAK
AnsYAAAKHw6UbxkAAAoqJgIfDigaAAAKKlYCexcAAAoCexgAAAofD5RvGQAACiomAh8PKBoAAAoq
VgJ7FwAACgJ7GAAACh8QlG8ZAAAKKiYCHxAoGgAACipWAnsXAAAKAnsYAAAKHxGUbxkAAAoqJgIf
ESgaAAAKKlYCexcAAAoCexgAAAofEpRvGQAACiomAh8SKBoAAAoqVgJ7FwAACgJ7GAAACh8TlG8Z
AAAKKiYCHxMoGgAACipWAnsXAAAKAnsYAAAKHxSUbxkAAAoqJgIfFCgaAAAKKlYCexcAAAoCexgA
AAofFZRvGQAACiomAh8VKBoAAAoqVgJ7FwAACgJ7GAAACh8WlG8ZAAAKKiYCHxYoGgAACipWAnsX
AAAKAnsYAAAKHxeUbxkAAAoqJgIfFygaAAAKKlYCexcAAAoCexgAAAofGJRvGQAACiomAh8YKBoA
AAoqVgJ7FwAACgJ7GAAACh8ZlG8ZAAAKKiYCHxkoGgAACipWAnsXAAAKAnsYAAAKHxqUbxkAAAoq
JgIfGigaAAAKKlYCexcAAAoCexgAAAofG5RvGQAACiomAh8bKBoAAAoqVgJ7FwAACgJ7GAAACh8c
lG8ZAAAKKiYCHxwoGgAACipWAnsXAAAKAnsYAAAKHx2UbxkAAAoqJgIfHSgaAAAKKlYCexcAAAoC
exgAAAofHpRvGQAACiomAh8eKBoAAAoqVgJ7FwAACgJ7GAAACh8flG8ZAAAKKiYCHx8oGgAACipW
AnsXAAAKAnsYAAAKHyCUbxsAAAoqJgIfICgaAAAKKlYCexcAAAoCexgAAAofIZRvGwAACiomAh8h
KBoAAAoqHgIoHAAACioeAigdAAAKKiYCFgMoHgAACipaAywIAhYoHwAACipyEwAAcHMgAAAKeiYC
FwMoHgAACipaAywIAhcoHwAACipyEwAAcHMgAAAKeiYCGAMoHgAACipaAywIAhgoHwAACipyEwAA
cHMgAAAKeiYCGQMoHgAACipaAywIAhkoHwAACipyEwAAcHMgAAAKeiYCGgMoHgAACipaAywIAhoo
HwAACipyEwAAcHMgAAAKeiYCGwMoHgAACipaAywIAhsoHwAACipyEwAAcHMgAAAKeiYCHAMoHgAA
CipaAywIAhwoHwAACipyEwAAcHMgAAAKeiYCHQMoHgAACipaAywIAh0oHwAACipyEwAAcHMgAAAK
ejoCHgOMHAAAASgeAAAKKloDLAgCHigfAAAKKnITAABwcyAAAAp6HgIoIQAACioeAigiAAAKKjoC
GQOMHAAAASgeAAAKKn4CKCMAAAoCAnOAAAAGfQkAAAQCAnOBAAAGfQoAAAQqAAAAEzAEAE8AAAAA
AAAABHKwAABwGm8kAAAKLBUCBQIDKCUAAAoOBHMPAAAGb34AAAYFbyYAAAosIwICew0AAAQXWH0N
AAAEAnsNAAAEFzMMAm96AAAGAih7AAAGKtYCewsAAAQsEgJ7CwAABG9qAAAGAhR9CwAABAJ7DAAA
BCwSAnsMAAAEb3YAAAYCFH0MAAAEKgAAABMwBQBnAAAAAgAAERYKK1gEBpQOBHLOAABwKCcAAAoz
GQIFBpoCBAaUKCUAAAoOBHNWAAAGfQsAAAQEBpQOBHLwAABwKCcAAAozGQIFBpoCBAaUKCUAAAoO
BHNsAAAGfQwAAAQGF1gKBgMypAJvfQAABipKKwcCA29/AAAGA29UAAAGLfEqOgIoEAAACgIDfQ4A
AAQqOgIoEAAACgIDfQ8AAAQqlgJ7DwAABG8oAAAKchIBAHBvKQAACigqAAAKbysAAAp0GgAAASqW
AnsPAAAEbygAAApyQgEAcG8pAAAKKCoAAApvKwAACnQaAAABKpYCew8AAARvLAAACnJmAQBwbykA
AAooKgAACm8rAAAKpRwAAAEqhgJ7DwAABG8sAAAKcmYBAHBvKQAACgOMHAAAAW8tAAAKKjYCcwoA
AAZ9EAAABBcqAAATMAQAWwAAAAAAAAADb1IAAAYcMxECexAAAAQDbzIAAAZ9BAAABANvUgAABh8J
MyQCexAAAAQDbzIAAAZ9AwAABAICexAAAAQEA29SAAAGKAUAAAYDb1IAAAYfDTIIAgMEbwcAAAYq
ABMwAgDrAQAAAAAAAANvEgAABiguAAAKLE8DbxYAAAYoLgAACixCA28eAAAGKC4AAAosNQNvMAAA
BiguAAAKLCgDb0IAAAYoLgAACiwbA29GAAAGKC4AAAosDgNvSgAABiguAAAKLAEqA28SAAAGKC4A
AAotJANvEgAABnKAAQBwKBMAAAotEgNvEgAABnKKAQBwKBMAAAosASoCewEAAARvaQAABgNvEgAA
BiguAAAKLA4CewEAAAQXb1gAAAYrEQJ7AQAABANvEgAABm9XAAAGA28WAAAGKC4AAAosDgJ7AQAA
BBdvWgAABisRAnsBAAAEA28WAAAGb1kAAAYDb0YAAAYoLgAACiwOAnsBAAAEF29cAAAGKxECewEA
AAQDb0YAAAZvWwAABgNvMAAABiguAAAKLA4CewEAAAQXb14AAAYrEQJ7AQAABANvMAAABm9dAAAG
A28eAAAGKC4AAAosDgJ7AQAABBdvYAAABisRAnsBAAAEA28eAAAGb18AAAYDb0IAAAYoLgAACiwO
AnsBAAAEF29iAAAGKxECewEAAAQDb0IAAAZvYQAABgNvSgAABiguAAAKLA4CewEAAAQXb2QAAAYr
EQJ7AQAABANvSgAABm9jAAAGAnsBAAAEBG9lAAAGAnsBAAAEA29SAAAGb2cAAAYqHgIoCQAABiqu
fhEAAAQtHnKWAQBw0AwAAAIoLwAACm8wAAAKczEAAAqAEQAABH4RAAAEKhp+EgAABCoeAoASAAAE
Khp+EwAABCoeAigyAAAKKi5zjwAABoATAAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5
AAAAAAUAbAAAANASAAAjfgAAPBMAAIQOAAAjU3RyaW5ncwAAAADAIQAACAIAACNVUwDIIwAAEAAA
ACNHVUlEAAAA2CMAADgCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAkAAAA
DQAAABMAAACQAAAARgAAADIAAAAQAAAAAgAAAAYAAABkAAAAZgAAAAEAAAAFAAAAAQAAAAAAPQUB
AAAAAAAGAB0E7goGALEE7goGAGkD2woPAGILAAAGAJYD5AgGAAAE5AgGAOED5AgGAJgE5AgGAD0E
5AgGAFYE5AgGAK0D5AgGAMgDAwUGAFMMnAgKAHEEcgIKAMMJcgIOALQJcgIKAC0JcgIKAOUMcgIG
AEwD2woGAGkKDgsGACEJzwgSABwDJwUSAH0DJwUSANACuggGADED7goGACAFnAgGAPYInAgGAIQA
nAgGABAJnAgWABEAgQoWAAEAgQpLALwNAAAWACIAgQoGAKMCnAgGANgBnAgGAF4O5AgAAAAAMgEA
AAAAAQABAIEAEACxCgAANQABAAEAAQAQAHMBAAA1AAMACgABABAArwgAACAABQALAAEAEADQCQAA
PQAJAA8AAQAQAOUJAAA9AAkAVgABABAA/AkAAD0ACQBsAAEAEADHDAAASQAJAHgAAQAQAAIMAAA1
AA4AgAABABAAwwsAADUADwCBAAEAEACpCgAACAAQAIYAAAAQABULcQs1ABEAigAAARAA8gtxC2EA
EwCOAAQAKQq3AAQAUgq7AAYAbAm/AAYARwK/AAEABQ3CAAEANQK/AAEAhwzFAAEAvQrIAAYAAgzM
AAYAwwvQAAYA5Qm3AAYA/Am7AAEAkgHCAAEA1QzUAAEA1QzUAAEAfgHYABEAowjcABEAwALgABEA
yAHkAFAgAAAAAIYAPAroAAEAWSAAAAAAhgATCu4AAgBiIAAAAADGAXEM9AADAGUgAAAAAMYBWgwQ
AAUAaCAAAAAAhAAyDvsABgDoIAAAAACEAPAEAwEJAAAAAAAAAMQFGw4KAQsAAAAAAAAAxgULDgoB
DQDVIgAAAACEGMQKBgAPANUiAAAAAIYYxAoGAA8A4CIAAAAAxgDPBAYADwAxIwAAAADGANoEBgAP
AEwjAAAAAMYAgA0RAQ8AAyQAAAAAhhjECgYAEAALJAAAAACGGMQKKQAQABYkAAAAAIYIagAfABMA
KyQAAAAAhgi/BUoAEwA0JAAAAACGCIoAHwATAEkkAAAAAIYI6wVKABMAUiQAAAAAhgihAB8AEwBn
JAAAAACGCBcGSgATAHAkAAAAAIYIuAAfABMAhSQAAAAAhghDBkoAEwCOJAAAAACGCM8AHwATAKMk
AAAAAIYIbwZKABMArCQAAAAAhgjmAB8AEwDBJAAAAACGCJsGSgATAMokAAAAAIYI/QAfABMA3yQA
AAAAhgjHBkoAEwDoJAAAAACGCBQBHwATAP0kAAAAAIYI8wZKABMABiUAAAAAhggrAR8AEwAbJQAA
AACGCB8HSgATACQlAAAAAIYIOgAfABMAOiUAAAAAhghlBUoAEwBEJQAAAACGCFIAHwATAFolAAAA
AIYIkgVKABMAZCUAAAAAhghxAB8AEwB6JQAAAACGCM0FSgATAIQlAAAAAIYIkQAfABMAmiUAAAAA
hgj5BUoAEwCkJQAAAACGCKgAHwATALolAAAAAIYIJQZKABMAxCUAAAAAhgi/AB8AEwDaJQAAAACG
CFEGSgATAOQlAAAAAIYI1gAfABMA+iUAAAAAhgh9BkoAEwAEJgAAAACGCO0AHwATABomAAAAAIYI
qQZKABMAJCYAAAAAhggEAR8AEwA6JgAAAACGCNUGSgATAEQmAAAAAIYIGwEfABMAWiYAAAAAhggB
B0oAEwBkJgAAAACGCEIAHwATAHomAAAAAIYIdAVKABMAhCYAAAAAhghaAB8AEwCaJgAAAACGCKEF
SgATAKQmAAAAAIYImQAfABMAuiYAAAAAhggIBkoAEwDEJgAAAACGCHkAHwATANomAAAAAIYI3AVK
ABMA5CYAAAAAhgiwAB8AEwD6JgAAAACGCDQGSgATAAQnAAAAAIYIxwAfABMAGicAAAAAhghgBkoA
EwAkJwAAAACGCN4AHwATADonAAAAAIYIjAZKABMARCcAAAAAhgj1AB8AEwBaJwAAAACGCLgGSgAT
AGQnAAAAAIYIDAEfABMAeicAAAAAhgjkBkoAEwCEJwAAAACGCCMBHwATAJonAAAAAIYIEAdKABMA
pCcAAAAAhghKAB8AEwC6JwAAAACGCIMFSgATAMQnAAAAAIYIYgAfABMA2icAAAAAhgiwBUoAEwDk
JwAAAACGCBECHwATAPonAAAAAIYILQdKABMABCgAAAAAhgj1DBcBEwAaKAAAAACGCFUISgATACQo
AAAAAIYIjgkXARMAOigAAAAAhggrCEoAEwBEKAAAAACGAEUOSgATAEwoAAAAAIYArwxKABMACyQA
AAAAhhjECikAEwBUKAAAAACGCH8JEAAWAF4oAAAAAIYIFQgbARcAdSgAAAAAhghZAhAAGAB/KAAA
AACGCHwHGwEZAJYoAAAAAIYI6AIQABoAoCgAAAAAhgiuBxsBGwC3KAAAAACGCDMNEAAcAMEoAAAA
AIYIbAgbAR0A2CgAAAAAhgiTAhAAHgDiKAAAAACGCJIHGwEfAPkoAAAAAIYI/QIQACAAAykAAAAA
hgjKBxsBIQAaKQAAAACGCAwDEAAiACQpAAAAAIYI4AcbASMAOykAAAAAhggjAhAAJABFKQAAAACG
CEYHGwElAFwpAAAAAIYInAkBACYAaykAAAAAhghACBsBJwCCKQAAAACGAOwNBgAoAIopAAAAAIYA
rAwGACgATCgAAAAAhgCvDEoAKAALJAAAAACGGMQKKQAoAFQoAAAAAIYIaAkQACsAXigAAAAAhgj3
BxsBLAB1KAAAAACGCEMCEAAtAH8oAAAAAIYIXwcbAS4AligAAAAAhggjAhAALwCgKAAAAACGCEYH
GwEwAJIpAAAAAIYInAkBADEAwSgAAAAAhghACBsBMgCCKQAAAACGAOwNBgAzAIopAAAAAIYArAwG
ADMATCgAAAAAhgCvDEoAMwChKQAAAACGGMQKBgAzAMQpAAAAAMYAjw0gATMAZSAAAAAAxgEWDAYA
NwAfKgAAAACBAKEBBgA3AFgqAAAAAMYAnA0qATcAZSAAAAAAxgEkDAYAOwDLKgAAAADGAYANEQE7
AGUgAAAAAMYB/A0RATwA3ioAAAAAhhjECjYBPQDtKgAAAACGGMQKNgE+APwqAAAAAIYIOAwfAD8A
IisAAAAAhgj8AR8APwBIKwAAAACGCBMNFwE/AG4rAAAAAIYIIw0BAD8AkCsAAAAAxgBxDPQAQACg
KwAAAADGAAsOCgFCAAgsAAAAAMQAGw4KAUQA/y0AAAAAhhjECgYARgDVIgAAAACDGMQKBgBGAAcu
AAAAAJMIZQo8AUYAMy4AAAAAkwioAkEBRgA6LgAAAACTCLQCRgFGAEIuAAAAAJYIuwxMAUcASS4A
AAAAhhjECgYARwBRLgAAAACRGMoKUQFHAAAAAQBSCgAAAQApCgAAAQA1AgAAAgDzDQAAAQA1AgAA
AQB+AQAAAgA1AgAAAwCqCQAAAQBNDgAAAgBRDgAAAQBNDgAAAgA1AgAAAQBNDgAAAgA1AgAAAQBe
CgAAAQBeCgAAAgDNCwAAAwA7CQAAAQBeCgAAAgDNCwAAAwA7CQAAAQD9BAAAAQD9BAAAAQD9BAAA
AQD9BAAAAQD9BAAAAQD9BAAAAQD9BAAAAQD9BAAAAQD9BAAAAQD9BAAAAQD9BAAAAQD9BAAAAQD9
BAAAAQD9BAAAAQD9BAAAAQD9BAAAAQD9BAAAAQD9BAAAAQBeCgAAAgDNCwAAAwA7CQAAAQD9BAAA
AQD9BAAAAQD9BAAAAQD9BAAAAQD9BAAAAQD9BAAAAQD9BAAAAQD9BAAAAQBfAQAAAgBoAgAAAwBe
CgAABAA7CQAAAQAcDAAAAgDRCgAAAwAODAAABAA7CQAAAQBeCgAAAQBJDgAAAQDrDAAAAQDrDAAA
AQD9BAAAAQA1AgAAAgDzDQAAAQBNDgAAAgA1AgAAAQBNDgAAAgA1AgAAAQD9BAkAxAoBABEAxAoG
ABkAxAoKACkAxAoQADEAxAoQADkAxAoQAEEAxAoQAEkAxAoQAFEAxAoQAFkAxAoQAGEAxAoQAHEA
xAoGAJkAxAoGALkAxAoVAMkAxAoGAGkAxAoGAJEAzwQGANEAeQofANEAZw4jAJEA2gQGANEAcw4j
AHkAxAopAHkAXgozAHkAzQs3AIEAHQU7AHkAewhAAIEAgQBFAHkARQ5KAHkArwxKAHkAkwhOAHkA
gggBANkAxAoQAHkA7A0GAHkArAwGAJEAxAoGANEA+wtUAJEA4QtbAIEAnAxKAJEAZwFlAJEAtwts
APEAighxAJEA1w13APkAqA19AJEAoAtsAPkA5gSEANEAtQGJABEB6gGOABEBWg6XAKEAxAqdAMEA
xAoGAC4ACwBwAS4AEwB5AS4AGwCYAS4AIwChAS4AKwDKAS4AMwDKAS4AOwDKAS4AQwChAS4ASwDQ
AS4AUwDKAS4AWwDnAYMAYwAxAoMBawAxAmECewAxAkkMcwCYAWkMcwCYARsAYQAFAAEABgBFAAcA
VwAKAF8ADABiAA0AZAAAAG4AVQEAAMMFWQEAAI4AVQEAAO8FWQEAAKUAVQEAABsGWQEAALwAVQEA
AEcGWQEAANMAVQEAAHMGWQEAAOoAVQEAAJ8GWQEAAAEBVQEAAMsGWQEAABgBVQEAAPcGWQEAAC8B
VQEAACMHWQEAAD4AVQEAAGkFWQEAAFYAVQEAAJYFWQEAAHUAVQEAANEFWQEAAJUAVQEAAP0FWQEA
AKwAVQEAACkGWQEAAMMAVQEAAFUGWQEAANoAVQEAAIEGWQEAAPEAVQEAAK0GWQEAAAgBVQEAANkG
WQEAAB8BVQEAAAUHWQEAAEYAVQEAAHgFWQEAAF4AVQEAAKUFWQEAAJ0AVQEAAAwGWQEAAH0AVQEA
AOAFWQEAALQAVQEAADgGWQEAAMsAVQEAAGQGWQEAAOIAVQEAAJAGWQEAAPkAVQEAALwGWQEAABAB
VQEAAOgGWQEAACcBVQEAABQHWQEAAE4AVQEAAIcFWQEAAGYAVQEAALQFWQEAACcCVQEAAEoHWQEA
APkMXQEAAFkIWQEAAKAJXQEAAEQIWQEAAIMJVQEAABkIWQEAAF0CVQEAAIAHWQEAAOwCVQEAALIH
WQEAADcNVQEAAHAIWQEAAJcCVQEAAJYHWQEAAAEDVQEAAM4HWQEAABADVQEAAOQHWQEAACcCVQEA
AEoHWQEAAKAJXQEAAEQIWQEAAGwJVQEAAPsHWQEAAEcCVQEAAGMHWQEAACcCVQEAAEoHWQEAAKAJ
XQEAAEQIWQEAADwMVQEAAAACVQEAACcNXQEAAGkKYQEAAMgCZgEAAL8MawECABAAAwACABEABQAC
ABIABwACABMACQACABQACwACABUADQACABYADwACABcAEQACABgAEwACABkAFQACABoAFwACABsA
GQACABwAGwACAB0AHQACAB4AHwACAB8AIQACACAAIwACACEAJQACACIAJwACACMAKQACACQAKwAC
ACUALQACACYALwACACcAMQACACgAMwACACkANQACACoANwACACsAOQACACwAOwACAC0APQACAC4A
PwACAC8AQQACADAAQwACADEARQACADIARwACADMASQACADQASwACADUATQACADYATwACADcAUQAC
ADgAUwACADkAVQACADoAVwACADsAWQACADwAWwACAD0AXQACAD4AXwACAD8AYQACAEAAYwACAEEA
ZQACAEIAZwACAEMAaQACAEQAawACAEUAbQACAEYAbwACAEcAcQACAEgAcwACAEkAdQACAEoAdwAC
AEsAeQACAEwAewACAE0AfQACAE4AfwACAE8AgQACAFAAgwACAFEAhQACAFIAhwACAFMAiQABAFcA
iwABAFgAjQABAFkAjwABAFoAkQABAFsAkwABAFwAlQABAF0AlwABAF4AmQABAF8AmwABAGAAnQAB
AGEAnwABAGIAoQABAGMAowABAGQApQABAGUApwABAGYAqQABAGcAqwABAGgArQABAG0ArwABAG4A
sQABAG8AswABAHAAtQABAHEAtwABAHIAuQABAHMAuwABAHQAvQACAIIAvwACAIMAwQACAIQAwwAB
AIUAwwACAIsAxQACAIwAxwABAI0AxwACAI4AyQAEgAAAAQAAAAAAAAAAAAAAAAA7AQAABAAAAAAA
AAAAAAAApQCJAQAAAAANAAAAAAAAAAAAAACuAEINAAAAAA0AAAAAAAAAAAAAAK4AXw0AAAAABAAA
AAAAAAAAAAAApQCcCAAAAAANAAAAAAAAAAAAAACuAEUJAAAAAAAAAAABAAAAHwsAAAAAAAAASURU
U1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAZ2V0
X0YxMABnZXRfRjIwAGdldF9GMzAAZ2V0X0YxMQBnZXRfRjIxAGdldF9GMzEAZ2V0X0YxAGdldF9G
MTIAZ2V0X0YyMgBHZXRJbnQzMgBnZXRfRjIAZ2V0X0YxMwBnZXRfRjIzAGdldF9GMwBnZXRfRjE0
AGdldF9GMjQAZ2V0X0Y0AGdldF9GMTUAZ2V0X0YyNQBnZXRfRjUAZ2V0X0YxNgBnZXRfRjI2AGdl
dF9GNgBnZXRfRjE3AGdldF9GMjcAZ2V0X0Y3AGdldF9GMTgAZ2V0X0YyOABnZXRfRjgAZ2V0X0Yx
OQBnZXRfRjI5AGdldF9GOQA8TW9kdWxlPgBTQ18yNjcwNUU3NkM5RkY0QkU4OEZCNjMyMzE1RkJG
RkJDRABJbnB1dElEAEdldE91dHB1dElEAEhlYWRlckRhdGEAaGVhZGVyRGF0YQBtc2NvcmxpYgBJ
bnB1dHNGaW5pc2hlZABNYXJrT3V0cHV0c0ZpbmlzaGVkAElzTnVsbE9yV2hpdGVTcGFjZQBkZWZh
dWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X3Zhcklu
cHV0RmlsZU5hbWUAZ2V0X1dvcmtzaGVldE5hbWUAc2V0X1dvcmtzaGVldE5hbWUAd29ya3NoZWV0
TmFtZQBzZXRfRXh0ZXJuYWxBc3NldE5hbWUAc2V0X1RlbmFudE5hbWUASW5wdXROYW1lAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAHNldF9FeHRlcm5hbFVuaXRUeXBlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBz
ZXRfRWZmZWN0aXZlRW5kRGF0ZQBzZXRfTW92ZUluRGF0ZQBzZXRfTW92ZU91dERhdGUARWRpdG9y
QnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBzZXRf
VmFsdWUAUmVhZFJvd1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3Ry
aW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18yNjcwNUU3NkM5RkY0QkU4OEZCNjMyMzE1RkJG
RkJDRC5kbGwAZ2V0X0YxMF9Jc051bGwAZ2V0X0YyMF9Jc051bGwAZ2V0X0YzMF9Jc051bGwAZ2V0
X0YxMV9Jc051bGwAZ2V0X0YyMV9Jc051bGwAZ2V0X0YzMV9Jc051bGwAZ2V0X0YxX0lzTnVsbABn
ZXRfRjEyX0lzTnVsbABnZXRfRjIyX0lzTnVsbABnZXRfRjJfSXNOdWxsAGdldF9GMTNfSXNOdWxs
AGdldF9GMjNfSXNOdWxsAGdldF9GM19Jc051bGwAZ2V0X0YxNF9Jc051bGwAZ2V0X0YyNF9Jc051
bGwAZ2V0X0Y0X0lzTnVsbABnZXRfRjE1X0lzTnVsbABnZXRfRjI1X0lzTnVsbABnZXRfRjVfSXNO
dWxsAGdldF9GMTZfSXNOdWxsAGdldF9GMjZfSXNOdWxsAGdldF9GNl9Jc051bGwAZ2V0X0YxN19J
c051bGwAZ2V0X0YyN19Jc051bGwAZ2V0X0Y3X0lzTnVsbABnZXRfRjE4X0lzTnVsbABnZXRfRjI4
X0lzTnVsbABnZXRfRjhfSXNOdWxsAGdldF9GMTlfSXNOdWxsAGdldF9GMjlfSXNOdWxsAGdldF9G
OV9Jc051bGwAZ2V0X1dvcmtzaGVldE5hbWVfSXNOdWxsAHNldF9Xb3Jrc2hlZXROYW1lX0lzTnVs
bABzZXRfRXh0ZXJuYWxBc3NldE5hbWVfSXNOdWxsAHNldF9UZW5hbnROYW1lX0lzTnVsbABzZXRf
RXh0ZXJuYWxVbml0VHlwZV9Jc051bGwAc2V0X0VmZmVjdGl2ZUVuZERhdGVfSXNOdWxsAHNldF9N
b3ZlSW5EYXRlX0lzTnVsbABzZXRfTW92ZU91dERhdGVfSXNOdWxsAHNldF9SZXBvcnRpbmdNb250
aFllYXJfSXNOdWxsAHNldF9Vbml0TnVtYmVyX0lzTnVsbABnZXRfUm93TnVtYmVyX0lzTnVsbABz
ZXRfUm93TnVtYmVyX0lzTnVsbABnZXRfQ29sdW1uQ291bnRfSXNOdWxsAHNldF9SZW50QW1vdW50
X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0
dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1
bnRpbWVXcmFwAHNldF9SZXBvcnRpbmdNb250aFllYXIAc2V0X1VuaXROdW1iZXIAZ2V0X1Jvd051
bWJlcgBzZXRfUm93TnVtYmVyAHJvd051bWJlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIA
RXhjZWxEYXRhSW5wdXRCdWZmZXIARGV0YWlsRGF0YU91dHB1dEJ1ZmZlcgBIZWFkZXJEYXRhT3V0
cHV0QnVmZmVyAFNldERldGFpbE91dHB1dEJ1ZmZlcgBkZXRhaWxPdXRwdXRCdWZmZXIAU2V0SGVh
ZGVyT3V0cHV0QnVmZmVyAGhlYWRlck91dHB1dEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFRv
VXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAFJvY2toaWxsRXhj
ZWxQYXJzZXIAcGFyc2VyAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ18zN2Uz
NjZiYTcwNWY0YzhmOTZjMDE0OTA5ZmY0YjdlOC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAU0NfMzdlMzY2YmE3MDVmNGM4Zjk2YzAxNDkwOWZmNGI3ZTguUHJv
cGVydGllcwBnZXRfUmVhZFdyaXRlVmFyaWFibGVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZm
ZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rp
b25zAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAGdldF92YXJJbnB1
dEZpbGVEYXRhRm9ybWF0AE9iamVjdABGaW5pc2hQYXJzaW5nV29ya3NoZWV0AFN0YXJ0UGFyc2lu
Z1dvcmtzaGVldABza2lwQ3VycmVudFdvcmtzaGVldABnZXRfRW5kT2ZSb3dzZXQAU2V0RW5kT2ZS
b3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29t
cG9uZW50AGdldF9Db2x1bW5Db3VudAB0b3RhbFJvd0NvdW50AGdldF92YXJSb3dDb3VudABzZXRf
dmFyUm93Q291bnQAc2V0X1JlbnRBbW91bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABN
aWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABFeGNlbERhdGFJbnB1dF9Qcm9jZXNzSW5w
dXQAUHJpbWVPdXRwdXQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29u
dGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABBZGRSb3cAZmlyc3RSb3cARXhjZWxEYXRhSW5wdXRf
UHJvY2Vzc0lucHV0Um93AEFkZERldGFpbERhdGFPdXRwdXRSb3cAQWRkSGVhZGVyT3V0cHV0Um93
AE5leHRSb3cAcm93AHJvd0luZGV4AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQBvcF9JbmVxdWFs
aXR5AAAAAAARUgBPAEMASwBIAEkATABMAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5
ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMA
aQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBz
AHQAZQBhAGQALgAAHUUAeABjAGUAbABEAGEAdABhAEkAbgBwAHUAdAAAIUQAZQB0AGEAaQBsAEQA
YQB0AGEATwB1AHQAcAB1AHQAACFIAGUAYQBkAGUAcgBEAGEAdABhAE8AdQB0AHAAdQB0AAAvdgBh
AHIAXwBJAG4AcAB1AHQARgBpAGwAZQBEAGEAdABhAEYAbwByAG0AYQB0AAAjdgBhAHIAXwBJAG4A
cAB1AHQARgBpAGwAZQBOAGEAbQBlAAAZdgBhAHIAXwBSAG8AdwBDAG8AdQBuAHQAAAlVAG4AaQB0
AAALVQBuAGkAdADpAAFxUwBDAF8AMwA3AGUAMwA2ADYAYgBhADcAMAA1AGYANABjADgAZgA5ADYA
YwAwADEANAA5ADAAOQBmAGYANABiADcAZQA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBz
AG8AdQByAGMAZQBzAAA5G3dzFKxnQrRk7u3ZuW1oAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZ
AwcBDgMgAA4FAAICDg4JIAMBEkEdCBJFAwYSQQMGHQgEIAEOCAQgAQIIBCABCAgDIAACBSACAQgc
BiACAg4RdQUgAR0ICAMHAQgGAAIIEkUOBCAAEnkFIAESfRwFAAASgIEGIAEcEoCFBCABARwEAAEC
DggAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRAwYSGAMGEhwCBg4CBggC
BgIDBhIIAwYSJAMGEigDBhJJAwYSDAMGElEDBhJVAwYSNAUgAQESHAUgAQESGAYgAgIOEhQHIAMB
EgwOCAYgAg4SFAgGIAIBEhQOBSABARIUAyAACAQgAQECCSAEAQgOEkESRQsgBAEIHQgdEkESRQUg
AQESSQQAABJRBAAAElUFAAEBElUEAAASNAMAAAEDKAAOAygAAgMoAAgECAASUQQIABJVBAgAEjQI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzM3
ZTM2NmJhNzA1ZjRjOGY5NmMwMTQ5MDlmZjRiN2U4AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIw
MTYAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291
cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMu
UnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABQVQAAAAAAAAAAAABqVQAA
ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA7AMAAAAAAAAA
AAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAA
AAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwDAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQAB
AEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAA
AABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMwA3AGUAMwA2
ADYAYgBhADcAMAA1AGYANABjADgAZgA5ADYAYwAwADEANAA5ADAAOQBmAGYANABiADcAZQA4AAAA
MAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBu
AHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAyADYANwAwADUARQA3ADYAQwA5AEYARgA0AEIA
RQA4ADgARgBCADYAMwAyADMAMQA1AEYAQgBGAEYAQgBDAEQALgBkAGwAbAAAAEgAEgABAEwAZQBn
AGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEA
NgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwBy
AGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADIANgA3ADAANQBFADcANgBDADkA
RgBGADQAQgBFADgAOABGAEIANgAzADIAMwAxADUARgBCAEYARgBCAEMARAAuAGQAbABsAAAAaAAk
AAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAzADcAZQAzADYANgBiAGEANwAwADUA
ZgA0AGMAOABmADkANgBjADAAMQA0ADkAMAA5AGYAZgA0AGIANwBlADgAAAA0AAgAAQBQAHIAbwBk
AHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAHw1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_26705e76c9ff4be88fb632315fbffbcd</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::var_InputFileDataFormat,User::var_InputFileName</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::var_RowCount</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">a7e5250ef25d5c3e47d3a25b2d369376</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">4afa59c7692425c6e34db72208d2362ceb7fadfc</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput]"
                      hasSideEffects="true"
                      name="ExcelDataInput">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F1]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F2"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F2]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F3]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F3"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F3]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F4]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F4]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F5]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F5"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F5]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F6]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F6"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F6]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F7]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F7"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F7]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F8]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F8"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F8]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F9]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F9"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F9]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F10]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F10"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F10]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F11]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F11"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F11]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F12]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F12"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F12]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F13]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F13"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F13]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F14]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F14"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F14]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F15]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F15"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F15]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F16]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F16"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F16]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F17]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F17"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F17]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F18]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F18"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F18]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F19]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F19"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F19]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F20]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F20"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F20]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F21]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F21"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F21]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F23]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F23"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F23]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F22]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F22"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F22]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F24]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F24"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F24]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F25]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F25"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F25]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F26]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F26"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F26]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F27]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F27"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F27]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F28]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F28"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F28]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F29]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F29"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F29]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F30]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F30"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F30]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[F31]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F31"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[F31]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[WorksheetName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="WorksheetName"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Outputs[Derived Column Output].Columns[WorksheetName]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[ColumnCount]"
                          cachedDataType="i4"
                          cachedName="ColumnCount"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[ColumnCount]" />
                        <inputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput].Columns[RowNumber]"
                          cachedDataType="i4"
                          cachedName="RowNumber"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output].Columns[RowNumber]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput]"
                      hasSideEffects="true"
                      name="DetailDataOutput">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[UnitNumber]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[UnitNumber]"
                          name="UnitNumber" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[TenantName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[TenantName]"
                          name="TenantName" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[EffectiveEndDate]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[EffectiveEndDate]"
                          name="EffectiveEndDate" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[RentAmount]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[RentAmount]"
                          name="RentAmount" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[ExternalUnitType]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[ExternalUnitType]"
                          name="ExternalUnitType" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[MoveInDate]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[MoveInDate]"
                          name="MoveInDate" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[MoveOutDate]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[MoveOutDate]"
                          name="MoveOutDate" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[WorksheetName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[WorksheetName]"
                          name="WorksheetName" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[RowNumber]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput].Columns[RowNumber]"
                          name="RowNumber" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[HeaderDataOutput]"
                      hasSideEffects="true"
                      name="HeaderDataOutput">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[HeaderDataOutput].Columns[ReportingMonthYear]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[HeaderDataOutput].Columns[ReportingMonthYear]"
                          name="ReportingMonthYear" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[HeaderDataOutput].Columns[ExternalAssetName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[HeaderDataOutput].Columns[ExternalAssetName]"
                          name="ExternalAssetName" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[HeaderDataOutput].Columns[WorksheetName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[HeaderDataOutput].Columns[WorksheetName]"
                          name="WorksheetName" />
                        <outputColumn
                          refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[HeaderDataOutput].Columns[RowNumber]"
                          dataType="i4"
                          lineageId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[HeaderDataOutput].Columns[RowNumber]"
                          name="RowNumber" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail).Paths[Derived Column Output]"
                  endId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header.Outputs[Derived Column Output]" />
                <path
                  refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail).Paths[Derived Column Output1]"
                  endId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output]" />
                <path
                  refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail).Paths[Derived Column Output2]"
                  endId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Inputs[ExcelDataInput]"
                  name="Derived Column Output"
                  startId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail).Paths[DetailDataOutput]"
                  endId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail.Inputs[Derived Column Input]"
                  name="DetailDataOutput"
                  startId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[DetailDataOutput]" />
                <path
                  refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail).Paths[HeaderDataOutput]"
                  endId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header.Inputs[Derived Column Input]"
                  name="HeaderDataOutput"
                  startId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file.Outputs[HeaderDataOutput]" />
                <path
                  refId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail).Paths[OLE DB Source Output]"
                  endId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Load and Validate data\SEQC - Dummy"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{E04EEC76-47D5-4E1D-96D6-9B8810BD9E86}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="SEQC - Dummy">
          <DTS:Variables />
          <DTS:Executables />
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Load and Validate data\SQL - Delete PART_RENT_ROLL (Header &amp; Detail)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6C997FB2-817F-4ECB-8FE1-5B1A39A3D79D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - Delete PART_RENT_ROLL (Header &amp; Detail)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sql_DeletePreviousData_RENTROLL" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Load and Validate data\SQL - DM_Staging - Read data parameters"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{73110A85-5F4C-4F06-A9A7-5D4B233A5BCF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - DM_Staging - Read data parameters"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sql_GetFileParameters"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="Format"
                SQLTask:DtsVariableName="User::var_InputFileDataFormat" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Load and Validate data\SQL - DM_Staging - Validate Detail"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0E6E7722-6239-4D73-BF51-45393C234B33}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - DM_Staging - Validate Detail"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sql_ValidateDetail" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Load and Validate data\SQL - DM_Staging - Validate Header"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1CFC4C51-18D7-463B-A975-F9B691629039}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - DM_Staging - Validate Header"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sql_ValidateHeader" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Load and Validate data.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{2E820443-1CBC-4EEC-96D7-805A36113C8A}"
          DTS:From="Package\SEQC - Load and Validate data\SQL - Delete PART_RENT_ROLL (Header &amp; Detail)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Load and Validate data.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{A4D8696B-EE37-4D74-990F-39D67623D03B}"
          DTS:From="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\SEQC - Load and Validate data\SQL - DM_Staging - Validate Header" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Load and Validate data.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{8F0373A1-8A9E-43CA-AFE0-C034FE2AF32F}"
          DTS:From="Package\SEQC - Load and Validate data\SQL - DM_Staging - Validate Header"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\SEQC - Load and Validate data\SQL - DM_Staging - Validate Detail" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Load and Validate data.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{76E40BA0-3734-45B2-B993-41BE4B6844FF}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::var_FailedFileValidationCount] == 0 &amp;&amp; @[User::var_FailedDataLoadingValidationCount] == 0"
          DTS:From="Package\SEQC - Load and Validate data\SEQC - Dummy"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\SEQC - Load and Validate data\SQL - DM_Staging - Read data parameters" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Load and Validate data.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{2CFB8DF7-F55A-417F-8730-FDF477C23CED}"
          DTS:EvalOp="3"
          DTS:Expression="@[$Package::SourceCode] == &quot;PART&quot; &amp;&amp;  @[$Package::DataCode] == &quot;RENT_ROLL&quot;"
          DTS:From="Package\SEQC - Load and Validate data\SQL - DM_Staging - Read data parameters"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\SEQC - Load and Validate data\SQL - Delete PART_RENT_ROLL (Header &amp; Detail)" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SEQC - Load and Validate file"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{6C460263-6457-4481-83E4-39F3737F11E0}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SEQC - Load and Validate file">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SEQC - Load and Validate file\DFT - Dummy"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{8F223EE6-BA82-407D-A770-6FB867C56F2C}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="DFT - Dummy"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Load and Validate file\EPT - DM_Staging - Load Excel file (Info &amp; Data)"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:Description="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{60149E27-B68C-4DFA-9ED7-53A02F536C3D}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="EPT - DM_Staging - Load Excel file (Info &amp; Data)"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>EXCEL_FILE.dtsx</PackageName>
              <ParameterAssignment>
                <ParameterName>DataLoadingID</ParameterName>
                <BindedVariableOrParameterName>User::var_DataLoadingID</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>InputFileFullPath</ParameterName>
                <BindedVariableOrParameterName>User::var_InputFileFullPath</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>ProviderCode</ParameterName>
                <BindedVariableOrParameterName>$Package::ProviderCode</BindedVariableOrParameterName>
              </ParameterAssignment>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Load and Validate file\SQL - DM_Staging - Validate Excel file (Info)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{18FCC1DF-7C43-417E-AD02-12A2BAC35C8C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - DM_Staging - Validate Excel file (Info)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sql_ValidateFile" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Load and Validate file\SQL - DM_Staging - Verify Excel file (Info) validation result"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{F7C03DBA-FF43-49DA-832F-72E12EE94AD9}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - DM_Staging - Verify Excel file (Info) validation result"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sql_VerifyValidationResult"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="FailedValidationCount"
                SQLTask:DtsVariableName="User::var_FailedFileValidationCount" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Load and Validate file.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{51CB9415-F580-491A-9A7B-5422905BE3A5}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::var_FailedDataLoadingValidationCount] == 0"
          DTS:From="Package\SEQC - Load and Validate file\DFT - Dummy"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SEQC - Load and Validate file\EPT - DM_Staging - Load Excel file (Info &amp; Data)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Load and Validate file.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{93CF0368-B7E0-44D9-A1D0-5A80CFFD3998}"
          DTS:From="Package\SEQC - Load and Validate file\EPT - DM_Staging - Load Excel file (Info &amp; Data)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\SEQC - Load and Validate file\SQL - DM_Staging - Validate Excel file (Info)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Load and Validate file.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{EAC76B83-9C03-4175-A996-17BE5730DD6F}"
          DTS:From="Package\SEQC - Load and Validate file\SQL - DM_Staging - Validate Excel file (Info)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\SEQC - Load and Validate file\SQL - DM_Staging - Verify Excel file (Info) validation result" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL - DM_Staging - Update DataLoading validation flag"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3C6D7D7C-3159-428D-B6E1-B116072EE5BD}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL - DM_Staging - Update DataLoading validation flag"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::sql_UpdateDataLoadingValidationFlag" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{8E7EA172-4CF0-4010-A607-D7BF86142BE0}"
      DTS:From="Package\SEQC - Create and Validate DataLoading record"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\SEQC - Load and Validate file" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{67BF21E2-EF9E-45DA-9E3E-374A9CC68E41}"
      DTS:From="Package\SEQC - Load and Validate file"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\SEQC - Load and Validate data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{E15FE986-E312-4BCD-A474-4096C213B849}"
      DTS:From="Package\SEQC - Load and Validate data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\SQL - DM_Staging - Update DataLoading validation flag" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="260,42"
          Id="Package\SEQC - Create and Validate DataLoading record\SQL - DM_Staging - Load DataLoading"
          TopLeft="54,5.5" />
        <NodeLayout
          Size="357,42"
          Id="Package\SEQC - Create and Validate DataLoading record\SQL - DM_Staging - Validate rule PARM-01 (DataID &lt;&gt; -1)"
          TopLeft="7.5,136.5" />
        <NodeLayout
          Size="342,42"
          Id="Package\SEQC - Create and Validate DataLoading record\SQL - DM_Staging - Verify DataLoading validation result"
          TopLeft="13,209.5" />
        <EdgeLayout
          Id="Package\SEQC - Create and Validate DataLoading record.PrecedenceConstraints[Constraint 1]"
          TopLeft="185,178.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="186,42"
          Id="Package\SEQC - Create and Validate DataLoading record\SQL - truncate Staging"
          TopLeft="82,71" />
        <EdgeLayout
          Id="Package\SEQC - Create and Validate DataLoading record.PrecedenceConstraints[Constraint]"
          TopLeft="184,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9,23.5"
              Start="0,0"
              End="-9,16">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.75"
                    Point2="0,11.75"
                    Point3="-4,11.75" />
                  <mssgle:LineSegment
                    End="-5,11.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-5,11.75"
                    Point2="-9,11.75"
                    Point3="-9,15.75" />
                  <mssgle:LineSegment
                    End="-9,16" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Create and Validate DataLoading record.PrecedenceConstraints[Constraint 2]"
          TopLeft="175,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="11,23.5"
              Start="0,0"
              End="11,16">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.75"
                    Point2="0,11.75"
                    Point3="4,11.75" />
                  <mssgle:LineSegment
                    End="7,11.75" />
                  <mssgle:CubicBezierSegment
                    Point1="7,11.75"
                    Point2="11,11.75"
                    Point3="11,15.75" />
                  <mssgle:LineSegment
                    End="11,16" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="375,307"
          Size="375,350"
          Id="Package\SEQC - Create and Validate DataLoading record"
          TopLeft="459.5,5.5" />
        <NodeLayout
          Size="375,42"
          Id="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)"
          TopLeft="430.930555555556,309" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="False"
          PanelSize="205,50"
          Size="205,43"
          Id="Package\SEQC - Load and Validate data\SEQC - Dummy"
          TopLeft="523.430555555556,21.2222222222223" />
        <NodeLayout
          Size="315,42"
          Id="Package\SEQC - Load and Validate data\SQL - Delete PART_RENT_ROLL (Header &amp; Detail)"
          TopLeft="468.430555555556,223" />
        <NodeLayout
          Size="280,42"
          Id="Package\SEQC - Load and Validate data\SQL - DM_Staging - Read data parameters"
          TopLeft="485.930555555556,107.5" />
        <NodeLayout
          Size="243,42"
          Id="Package\SEQC - Load and Validate data\SQL - DM_Staging - Validate Detail"
          TopLeft="504.430555555556,528.277777777778" />
        <NodeLayout
          Size="250,42"
          Id="Package\SEQC - Load and Validate data\SQL - DM_Staging - Validate Header"
          TopLeft="500.930555555556,426.277777777778" />
        <EdgeLayout
          Id="Package\SEQC - Load and Validate data.PrecedenceConstraints[Constraint]"
          TopLeft="622.180555555556,265">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Load and Validate data.PrecedenceConstraints[Constraint 1]"
          TopLeft="622.180555555556,351">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,75.277777777778"
              Start="0,0"
              End="0,67.777777777778">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.777777777778" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Load and Validate data.PrecedenceConstraints[Constraint 2]"
          TopLeft="625.930555555556,468.277777777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Load and Validate data.PrecedenceConstraints[Constraint 3]"
          TopLeft="625.930555555556,64.2222222222223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.2777777777777"
              Start="0,0"
              End="0,35.7777777777777">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.7777777777777" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,9.88888888888885,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Load and Validate data.PrecedenceConstraints[Constraint 6]"
          TopLeft="625.930555555556,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,73.5"
              Start="0,0"
              End="0,66">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1814,772"
          Size="1814,815"
          Id="Package\SEQC - Load and Validate data"
          TopLeft="5.50000000000011,927.5" />
        <NodeLayout
          Size="145,42"
          Id="Package\SEQC - Load and Validate file\DFT - Dummy"
          TopLeft="111,5.5" />
        <NodeLayout
          Size="309,42"
          Id="Package\SEQC - Load and Validate file\EPT - DM_Staging - Load Excel file (Info &amp; Data)"
          TopLeft="29,107.5" />
        <NodeLayout
          Size="288,42"
          Id="Package\SEQC - Load and Validate file\SQL - DM_Staging - Validate Excel file (Info)"
          TopLeft="39.5,209.5" />
        <NodeLayout
          Size="356,42"
          Id="Package\SEQC - Load and Validate file\SQL - DM_Staging - Verify Excel file (Info) validation result"
          TopLeft="5.50000000000006,311.5" />
        <EdgeLayout
          Id="Package\SEQC - Load and Validate file.PrecedenceConstraints[Constraint]"
          TopLeft="183.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Load and Validate file.PrecedenceConstraints[Constraint 1]"
          TopLeft="183.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Load and Validate file.PrecedenceConstraints[Constraint 2]"
          TopLeft="183.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="367,409"
          Size="367,452"
          Id="Package\SEQC - Load and Validate file"
          TopLeft="460,415.5" />
        <NodeLayout
          Size="340,42"
          Id="Package\SQL - DM_Staging - Update DataLoading validation flag"
          TopLeft="471.5,1792.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="645.25,355.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="643.5,867.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="269,60"
              Start="0,0"
              End="269,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="265,30" />
                  <mssgle:CubicBezierSegment
                    Point1="265,30"
                    Point2="269,30"
                    Point3="269,34" />
                  <mssgle:LineSegment
                    End="269,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="912.5,1742.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-271,50"
              Start="0,0"
              End="-271,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21"
                    Point2="0,25"
                    Point3="-4,25" />
                  <mssgle:LineSegment
                    End="-267,25" />
                  <mssgle:CubicBezierSegment
                    Point1="-267,25"
                    Point2="-271,25"
                    Point3="-271,29" />
                  <mssgle:LineSegment
                    End="-271,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="321,42"
          Id="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail"
          TopLeft="409,413.5" />
        <NodeLayout
          Size="264,42"
          Id="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Header"
          TopLeft="124,311.5" />
        <NodeLayout
          Size="179,42"
          Id="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\SCR - Parse Excel file"
          TopLeft="487.5,205.5" />
        <NodeLayout
          Size="328,42"
          Id="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header"
          TopLeft="5.50000000000006,413.5" />
        <NodeLayout
          Size="241,42"
          Id="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Rename TableName column"
          TopLeft="456.5,107.5" />
        <NodeLayout
          Size="257,42"
          Id="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\DER - Add columns required by Detail"
          TopLeft="448.5,311.5" />
        <NodeLayout
          Size="238,42"
          Id="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData"
          TopLeft="458,5.49999999999989" />
        <EdgeLayout
          Id="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail).Paths[OLE DB Source Output]"
          TopLeft="577,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail).Paths[HeaderDataOutput]"
          TopLeft="548.5,247.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-292.5,64"
              Start="0,0"
              End="-292.5,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.9401993355482" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.9401993355482"
                    Point2="0,25.9401993355482"
                    Point3="-4,25.9401993355482" />
                  <mssgle:LineSegment
                    End="-288.5,25.9401993355482" />
                  <mssgle:CubicBezierSegment
                    Point1="-288.5,25.9401993355482"
                    Point2="-292.5,25.9401993355482"
                    Point3="-292.5,29.9401993355482" />
                  <mssgle:LineSegment
                    End="-292.5,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-188.23638671875,30.9401993355482,83.9727734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail).Paths[DetailDataOutput]"
          TopLeft="605.5,247.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-28.5,64"
              Start="0,0"
              End="-28.5,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.9401993355482" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.9401993355482"
                    Point2="0,25.9401993355482"
                    Point3="-4,25.9401993355482" />
                  <mssgle:LineSegment
                    End="-24.5,25.9401993355482" />
                  <mssgle:CubicBezierSegment
                    Point1="-24.5,25.9401993355482"
                    Point2="-28.5,25.9401993355482"
                    Point3="-28.5,29.9401993355482" />
                  <mssgle:LineSegment
                    End="-28.5,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-53.01638671875,30.9401993355482,77.5327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail).Paths[Derived Column Output2]"
          TopLeft="577,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail).Paths[Derived Column Output1]"
          TopLeft="573.25,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail).Paths[Derived Column Output]"
          TopLeft="256,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-86.4999999999999,60"
              Start="0,0"
              End="-86.4999999999999,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-82.4999999999999,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-82.4999999999999,30"
                    Point2="-86.4999999999999,30"
                    Point3="-86.4999999999999,34" />
                  <mssgle:LineSegment
                    End="-86.4999999999999,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Detail">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_DST - DM_Staging - PART_RENT_ROLL_Header">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\SEQC - Load and Validate data\DFT - DM_Staging - Load PART_RENT_ROLL (Header &amp; Detail)\OLE_SRC - DM_Staging - FileData">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>