<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/5/2016 8:54:56 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SDVCDPSBI02"
  DTS:CreatorName="CORP\adm1ned"
  DTS:DelayValidation="True"
  DTS:DTSID="{ACDC08D7-1BF4-4500-9F4D-200D485CAC19}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3008.28"
  DTS:LocaleID="1033"
  DTS:ObjectName="PART_FINANCE_FORECAST"
  DTS:PackageType="5"
  DTS:VersionBuild="332"
  DTS:VersionGUID="{660EC320-69A6-4B39-9DC5-C48BE8758E65}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{625E7158-DEB1-435B-8A94-09FD67C7D460}"
      DTS:ObjectName="BrazilCurrencyName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">BRL</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{DAD83A86-84F1-418C-AE31-CDF634FDB22C}"
      DTS:ObjectName="BrazilDevFlowCode">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">P_OTHER1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{F60F72C4-C388-4663-8C0E-7DE70EE4EDD3}"
      DTS:ObjectName="BrazilMainBankAccount">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">BSAFBR_C_BRL_001</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{A8930D1B-7936-4953-AA33-555571A1D581}"
      DTS:ObjectName="BrazilPartnerName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Default</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{029C5DC5-26E5-48A2-83F8-5AB924FA60EB}"
      DTS:ObjectName="BusinessProcessInstanceID"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">20160610-01-EL</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{D8D60A3F-EA1E-4E6F-9654-6C2BA6F90B0C}"
      DTS:ObjectName="BusinessProcessInstanceIteration"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{9E622D55-3DA6-4A08-AFFA-D898F82F066C}"
      DTS:ObjectName="ExcelWorksheetNum">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{EE9C7AD9-D035-4B0C-89DA-CEDC945B5758}"
      DTS:ObjectName="FileToLoad"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">20Vic_Forecasts_IN (003).xlsx</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{778C0A1C-F29F-4940-9766-097C69F0C09A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="md_Data">
      <DTS:VariableValue
        DTS:DataType="8">FINANCE_FORECAST</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F5A600E8-ECFB-42B2-8D1A-A628C3964093}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="md_Source">
      <DTS:VariableValue
        DTS:DataType="8">PART</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2B2101CE-3E1F-44EB-991B-7134116A03B4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="md_ValidFileNamePattern">
      <DTS:VariableValue
        DTS:DataType="8">.*\.xlsx{0,1}$</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CB45EE55-3D3E-44EE-907D-E14EBC28B7A5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="md_ValidSheetName">
      <DTS:VariableValue
        DTS:DataType="8">Data</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7C21E5AE-9518-4D28-B88F-64CDC34CBB79}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;INSERT INTO [staging].[DataLoading]&#xA;           ([DataID]&#xA;           ,[LoadingDate]&#xA;           ,[IC_DM_BUSINESS_PROCESS_INSTANCE_ID]&#xA;           ,[IC_DM_BUSINESS_PROCESS_INSTANCE_ITERATION]&#xA;           )&#xA;SELECT&#xA;&#x9;d.DataID,&#xA;&#x9;'&quot; + @[User::var_LoadingDate_str] + &quot;',&#xA;&#x9;'&quot; + @[$Package::BusinessProcessInstanceID] + &quot;',&#xA;&#x9;&quot; + (DT_WSTR, 32) @[$Package::BusinessProcessInstanceIteration] + &quot;&#xA;FROM config.Source s&#xA;JOIN config.Data d&#xA;&#x9;ON s.SourceID = d.SourceID&#xA;JOIN config.DataProvider dp&#xA;&#x9;ON d.DataID = dp.DataID&#xA;JOIN config.Provider p&#xA;&#x9;ON dp.ProviderID = p.ProviderID&#xA;WHERE s.SourceCode = '&quot;+ @[User::md_Source]  +&quot;'&#xA;&#x9;and d.DataCode = '&quot;+ @[User::md_Data]  +&quot;'&#xA;SELECT SCOPE_IDENTITY() AS DataLoadingID;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_InsertDataLoading">
      <DTS:VariableValue
        DTS:DataType="8">INSERT INTO [staging].[DataLoading]
           ([DataID]
           ,[LoadingDate]
           ,[IC_DM_BUSINESS_PROCESS_INSTANCE_ID]
           ,[IC_DM_BUSINESS_PROCESS_INSTANCE_ITERATION]
           )
SELECT
	d.DataID,
	'2018-05-25 11:20:34',
	'20160610-01-EL',
	1
FROM config.Source s
JOIN config.Data d
	ON s.SourceID = d.SourceID
JOIN config.DataProvider dp
	ON d.DataID = dp.DataID
JOIN config.Provider p
	ON dp.ProviderID = p.ProviderID
WHERE s.SourceCode = 'PART'
	and d.DataCode = 'FINANCE_FORECAST'
SELECT SCOPE_IDENTITY() AS DataLoadingID;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6998DE99-4C27-43DC-8542-A11399DAFF5D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;delete staging.PART_FINANCE_FORECAST_Detail from staging.PART_FINANCE_FORECAST_Detail inner join staging.dataLoading on staging.dataLoading.DataLoadingID = staging.PART_FINANCE_FORECAST_Detail.DataLoadingID &#xA;where staging.dataLoading.IC_DM_BUSINESS_PROCESS_INSTANCE_ID &lt;&gt;  '&quot; + @[User::var_BusinessProcessInstanceID] + &quot;'&quot;&#xA;+&quot;;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_TruncateStaging">
      <DTS:VariableValue
        DTS:DataType="8">delete staging.PART_FINANCE_FORECAST_Detail from staging.PART_FINANCE_FORECAST_Detail inner join staging.dataLoading on staging.dataLoading.DataLoadingID = staging.PART_FINANCE_FORECAST_Detail.DataLoadingID 
where staging.dataLoading.IC_DM_BUSINESS_PROCESS_INSTANCE_ID &lt;&gt;  '20160610-01-EL';</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{14E620B8-8122-486C-95DE-A4BBBE967196}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;UPDATE d&#xA;SET ValidationSucceeded = 1,&#xA;&#x9;ValidationDate = SYSDATETIME()&#xA;FROM staging.DataLoading d&#xA;WHERE d.DataLoadingID = &quot;+ (DT_WSTR, 50)@[User::var_DataLoadingID] +&quot;&#xA;&#x9;AND NOT EXISTS(&#xA;&#x9;&#x9;SELECT * &#xA;&#x9;&#x9;FROM staging.ValidationResult &#xA;&#x9;&#x9;WHERE DataLoadingID = d.DataLoadingID&#xA;&#x9;&#x9;&#x9;AND ValidationSeverity = 'FATAL'&#xA;&#x9;)&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_UpdateDataLoadingValidationFlag">
      <DTS:VariableValue
        DTS:DataType="8">UPDATE d
SET ValidationSucceeded = 1,
	ValidationDate = SYSDATETIME()
FROM staging.DataLoading d
WHERE d.DataLoadingID = 0
	AND NOT EXISTS(
		SELECT * 
		FROM staging.ValidationResult 
		WHERE DataLoadingID = d.DataLoadingID
			AND ValidationSeverity = 'FATAL'
	)</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F10B71A1-7888-4745-8B28-6B446DB66B07}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::sql_ValidateSP]+&quot;, @ValidationScopeParam='DETAIL'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_ValidateDetail">
      <DTS:VariableValue
        DTS:DataType="8">EXEC staging.sp_Validate_Data @SourceCodeParam='PART', @DataCodeParam='FINANCE_FORECAST', @ProviderCodeParam='IC', @DataLoadingID=0, @ValidationScopeParam='DETAIL'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7ACE0211-41BB-407C-B19A-AF1F5B3C20C7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::sql_ValidateSP]+&quot;, @ValidationScopeParam='FILE'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_ValidateFile">
      <DTS:VariableValue
        DTS:DataType="8">EXEC staging.sp_Validate_Data @SourceCodeParam='PART', @DataCodeParam='FINANCE_FORECAST', @ProviderCodeParam='IC', @DataLoadingID=0, @ValidationScopeParam='FILE'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E6B019B6-0827-422A-8F03-D572727D0F15}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;EXEC staging.sp_Validate_Data @SourceCodeParam='&quot;+ @[User::md_Source] +&quot;', @DataCodeParam='&quot;+ @[User::md_Data] +&quot;', @ProviderCodeParam='IC', @DataLoadingID=&quot;+ (DT_WSTR, 50)@[User::var_DataLoadingID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_ValidateSP">
      <DTS:VariableValue
        DTS:DataType="8">EXEC staging.sp_Validate_Data @SourceCodeParam='PART', @DataCodeParam='FINANCE_FORECAST', @ProviderCodeParam='IC', @DataLoadingID=0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F7DD5CAB-A96C-4140-B085-7996FE07ACCE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::BusinessProcessInstanceID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_BusinessProcessInstanceID">
      <DTS:VariableValue
        DTS:DataType="8">20160610-01-EL</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4A53AD5B-9194-4F6F-8856-614B971034D9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="var_DataLoadingID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC681E29-890C-4DB1-B877-6468E73EEAF3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="var_FileExists">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4A06AFE6-2E3D-4CB9-829A-F54EB2C1CF8C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::IC_DM_Files_Folder] + &quot;\\input\\&quot; +  @[User::md_Source] + &quot;\\&quot; +  @[User::md_Data] + &quot;\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_InputFileDirectory">
      <DTS:VariableValue
        DTS:DataType="8">\\corp\appsbur\IC_DM\dev\input\PART\FINANCE_FORECAST\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{051E98D4-EACB-4D76-90E7-E1F9EAF7DA6C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::var_InputFileDirectory] + &quot;working\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_InputFileDirectoryWorking">
      <DTS:VariableValue
        DTS:DataType="8">\\corp\appsbur\IC_DM\dev\input\PART\FINANCE_FORECAST\working\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C21C33EA-41AA-4343-BC0F-AD2079150B70}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::var_InputFileDirectoryWorking] +  @[User::var_InputFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_InputFileFullPath">
      <DTS:VariableValue
        DTS:DataType="8">\\corp\appsbur\IC_DM\dev\input\PART\FINANCE_FORECAST\working\20Vic_Forecasts_IN (003).xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{00A89A1F-873E-4F17-A6EE-9264A1AA887C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::FileToLoad]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_InputFileName">
      <DTS:VariableValue
        DTS:DataType="8">20Vic_Forecasts_IN (003).xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{13EB16A5-FA37-4B71-9527-F0A19A20FB49}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="var_IsFileNameValid">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D3987134-3778-494F-B9DA-CD5176117FD0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="var_IsFileReadable">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5D8EF029-7D1B-4732-9651-427368CB408E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="var_IsSheetNameValid">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1EB5C13A-00D7-4AEE-B91D-1594E294183A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_STR, 4, 1252) DATEPART(&quot;yy&quot; , @[System::StartTime]) + &quot;-&quot; + RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mm&quot; , @[System::StartTime]), 2) + &quot;-&quot; + RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;dd&quot; , @[System::StartTime]), 2) + &quot; &quot; + RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;hh&quot; , @[System::StartTime]), 2) + &quot;:&quot; + RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mi&quot; , @[System::StartTime]), 2) + &quot;:&quot; + RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;ss&quot; , @[System::StartTime]), 2)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_LoadingDate_str">
      <DTS:VariableValue
        DTS:DataType="8">2018-05-25 11:20:34</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1FFEB44F-DE7B-442C-BF74-71C2C73AA342}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="var_RowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{53C85C04-2969-461C-8255-CDAF2E39E9C7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="var_RowNumber">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{165DB33B-13BF-4B10-A83A-51646895075B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_TemplateName">
      <DTS:VariableValue
        DTS:DataType="8">DEFAULT</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:DelayValidation="True"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{14E461ED-AEE3-4F4E-808D-43282EB6661B}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:FailParentOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{E4FB0158-4758-4FB5-9B1C-40D1EFFDFF35}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{04B3BF80-A472-4A92-88CF-BD7CD7E92613}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">0</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="DC - Flow code or default"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default.Inputs[Derived Column Input].Columns[FlowCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FlowCode"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[FlowCode]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[ISNULL](#{Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Outputs[Lookup Match Output].Columns[CorrectedFlowCode]}) ? "P_OTHER1" : #{Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Outputs[Lookup Match Output].Columns[CorrectedFlowCode]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(CorrectedFlowCode) ? "P_OTHER1" : CorrectedFlowCode</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default.Inputs[Derived Column Input].Columns[CorrectedFlowCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CorrectedFlowCode"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Outputs[Lookup Match Output].Columns[CorrectedFlowCode]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default.Inputs[Derived Column Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="DER - Add columns required by Detail"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[DataLoadingID]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[DataLoadingID]"
                      name="DataLoadingID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[User::var_DataLoadingID]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[User::var_DataLoadingID]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[FileName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[FileName]"
                      name="FileName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[$Package::FileToLoad]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[$Package::FileToLoad]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="LKP - FlowCodeMapping"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [config].[PART_FORECAST_FLOWCODEMAPPING]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [config].[PART_FORECAST_FLOWCODEMAPPING]) [refTable]
where [refTable].[SourceFlowCode] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SourceFlowCode" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CorrectedFlowCode" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[FlowCode]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Connections[OleDbConnection]"
                  connectionManagerID="{E24982FB-22F7-4235-9AE4-99A820D08725}:external"
                  connectionManagerRefId="Project.ConnectionManagers[oledb IC_DM_Staging]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Inputs[Lookup Input].Columns[FlowCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FlowCode"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[FlowCode]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">SourceFlowCode</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="IgnoreFailure"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Outputs[Lookup Match Output].Columns[CorrectedFlowCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="255"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Outputs[Lookup Match Output].Columns[CorrectedFlowCode]"
                      name="CorrectedFlowCode"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">CorrectedFlowCode</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[staging].[PART_FINANCE_FORECAST_Detail]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Connections[OleDbConnection]"
                  connectionManagerID="{E24982FB-22F7-4235-9AE4-99A820D08725}:external"
                  connectionManagerRefId="Project.ConnectionManagers[oledb IC_DM_Staging]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[Currency]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Currency"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Currency]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Currency]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[Amount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Amount"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Amount]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Amount]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[DataLoadingID]"
                      cachedDataType="i4"
                      cachedName="DataLoadingID"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[DataLoadingID]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[DataLoadingID]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[ForecastDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ForecastDate"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[ForecastDate]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[ForecastDate]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[Comment]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Comment"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Comment]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Comment]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[FlowCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FlowCode"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[FlowCode]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[FlowCode]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[BankAccount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BankAccount"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[BankAccount]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[BankAccount]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[RowNumber]"
                      cachedDataType="i4"
                      cachedName="RowNumber"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[RowNumber]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\SCR - Get Row Number.Outputs[Output 0].Columns[RowNumber]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[Portfolio]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Portfolio"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Portfolio]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Portfolio]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[AssetName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="AssetName"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[AssetName]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[AssetName]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[FileName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FileName"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[FileName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Currency]"
                      dataType="wstr"
                      length="255"
                      name="Currency" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Amount]"
                      dataType="wstr"
                      length="255"
                      name="Amount" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[DataLoadingID]"
                      dataType="i4"
                      name="DataLoadingID" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[ForecastDate]"
                      dataType="wstr"
                      length="255"
                      name="ForecastDate" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Comment]"
                      dataType="wstr"
                      length="255"
                      name="Comment" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[FlowCode]"
                      dataType="wstr"
                      length="255"
                      name="FlowCode" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[BankAccount]"
                      dataType="wstr"
                      length="255"
                      name="BankAccount" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[RowNumber]"
                      dataType="i4"
                      name="RowNumber" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Portfolio]"
                      dataType="wstr"
                      length="255"
                      name="Portfolio" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[AssetName]"
                      dataType="wstr"
                      length="255"
                      name="AssetName" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                      dataType="wstr"
                      length="255"
                      name="FileName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Read From Brazil Partner forecast worksheet"
              version="10">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="33">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a35e6c962ade41edaaddb4fc980d8ffc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_a35e6c962ade41edaaddb4fc980d8ffc")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using Aspose.Cells;
using System.IO;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion



    //Variables
    DataTable forecastsTable = new DataTable();

    //For column const, view example of a partner forecasts parsed excel at : 
    public const int POINTER_COL_NUM = 1;
    public const int FLOW_CODE_COL_NUM = 1;

    //Start of date pivot
    public const int START_COL_NUM = 2;
    public const int START_ROW_NUM = 2;

    public const String POINTER_END = "(=) Final Cash Balance Ex-Acquisitions";

    public int maxWorksheetRows = 0;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        forecastsTable.Columns.Add("BankAccount", typeof(string));
        forecastsTable.Columns.Add("Currency", typeof(string));
        forecastsTable.Columns.Add("FlowCode", typeof(string));
        forecastsTable.Columns.Add("ForecastDate", typeof(string));
        forecastsTable.Columns.Add("Amount", typeof(string));
        forecastsTable.Columns.Add("Comments", typeof(string));
        forecastsTable.Columns.Add("Portfolio", typeof(string));

        String partnerFile = this.Variables.varInputFileFullPath;

        try
        {
            convertExcelToCSV(partnerFile);
        }
        catch(Exception e)
        {
            bool cancel = true;
            ComponentMetaData.FireError(10, "PartnerTemplateAdaptor", e.Message, "", 0, out cancel);
        }
        
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
       
    }

    public override void CreateNewOutputRows()
    {
        foreach (DataRow row in forecastsTable.Rows) {
            this.OutputBuffer.AddRow();
            this.OutputBuffer.BankAccount = Variables.BrazilMainBankAccount;
            this.OutputBuffer.Currency = Variables.BrazilCurrencyName;
            this.OutputBuffer.FlowCode = row["FlowCode"] as String;
            this.OutputBuffer.ForecastDate = row["ForecastDate"] as String;
            this.OutputBuffer.Amount = row["Amount"] as String;
            this.OutputBuffer.Comment = null;
            this.OutputBuffer.Portfolio = "NAI Holdings";
        }
    }


    private void convertExcelToCSV(String partnerFile)
    {
        License license = new License();
        license.SetLicense(Variables.AsposeLicense);

        Workbook workbook = new Workbook(partnerFile);
        Worksheet worksheet = workbook.Worksheets[0];

        maxWorksheetRows = worksheet.Cells.MaxRow + 1;

        Cell pointer = null;
        Cell dateCell = worksheet.Cells[START_ROW_NUM, START_COL_NUM];
        int currentCol = 0;

        if (dateCell.Value == null)
        {
            throw new System.IO.InvalidDataException("Cannot find starting date in cell [" + CellsHelper.CellIndexToName(START_ROW_NUM, START_COL_NUM) + "] of file " + Variables.varInputFileFullPath);
        }

        //Brazil partners template file ends with XXXX. For some reason, aspose reads and interpret it as a date so we discard it here.
        while (dateCell.Value != null && dateCell.DisplayStringValue != "XXXX")
        {
            int currentRow = 3;

            do
            {
                String flowCode = GetCellStringValue(worksheet.Cells[START_ROW_NUM + currentRow, FLOW_CODE_COL_NUM]);

                pointer = worksheet.Cells[START_ROW_NUM + currentRow, POINTER_COL_NUM];
                DataRow forecast = forecastsTable.NewRow();
                if (dateCell.Type == CellValueType.IsDateTime && dateCell.DateTimeValue > DateTime.MinValue && dateCell.DateTimeValue < new DateTime(2200, 1, 1))
                {
                    forecast["ForecastDate"] = GetCellStringValue(dateCell);
                }
                else
                {
                    forecast["ForecastDate"] = dateCell.DisplayStringValue;
                }
                forecast["FlowCode"] = flowCode;

                var amount = GetCellStringValue(worksheet.Cells[START_ROW_NUM + currentRow, START_COL_NUM + currentCol]);
                forecast["Amount"] = amount != null ? amount : "0";

                if (!String.IsNullOrEmpty(flowCode) && (flowCode.Contains("(+)") || flowCode.Contains("(-)")))
                {
                    forecastsTable.Rows.Add(forecast);
                }

                currentRow++;
            } while (!IsEndPointer(pointer, currentRow));

            currentCol++;
            dateCell = worksheet.Cells[START_ROW_NUM, START_COL_NUM + currentCol];
        }
    }

    private bool IsEndPointer(Cell pointer, int currentRow)
    {
        if (pointer == null) return false;

        var pointerStr = GetCellStringValue(pointer);
        if (pointerStr == null)
        {
            pointerStr = "";
        }

        // If for some reason, the pointer_end label do not exist ( e.g Excel was tempered with by the partner), stop at the max row to ensure no infinite looping occurs
        return pointerStr.ToUpper() == POINTER_END || currentRow > maxWorksheetRows; 
    }

    private String GetCellStringValue(Cell cell)
    {
        return cell.Value == null ? null : cell.Value.ToString();
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class OutputBuffer: ScriptBuffer

{
    public OutputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ForecastDate
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ForecastDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String BankAccount
    {
        set
        {
            this[1] = value;
        }
    }
    public bool BankAccount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Comment
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Comment_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Amount
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Amount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FlowCode
    {
        set
        {
            this[4] = value;
        }
    }
    public bool FlowCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Currency
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Currency_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Portfolio
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Portfolio_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties.Settings.get_Default():SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties.Sett" +
    "ings")]

namespace SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public OutputBuffer OutputBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != OutputBuffer)
        {
            OutputBuffer.SetEndOfRowset();
            OutputBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output"))
            {
                OutputBuffer = new OutputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String AsposeLicense
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["AsposeLicense"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String BrazilCurrencyName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["BrazilCurrencyName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String BrazilDevFlowCode
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["BrazilDevFlowCode"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String BrazilMainBankAccount
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["BrazilMainBankAccount"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String BrazilPartnerName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["BrazilPartnerName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String varInputFileFullPath
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["var_InputFileFullPath"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_a35e6c962ade41edaaddb4fc980d8ffc</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_a35e6c962ade41edaaddb4fc980d8ffc</msb:DisplayName>
		<msb:ProjectId>{1531E171-AF16-4EAD-8B0C-940AC153E911}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_a35e6c962ade41edaaddb4fc980d8ffc.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Aspose.Total.lic"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a35e6c962ade41edaaddb4fc980d8ffc.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FE24C6DF-7B5F-4203-A901-846EB3FD4240}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a35e6c962ade41edaaddb4fc980d8ffc</RootNamespace>
    <AssemblyName>SC_03FCBA654250400A84E9CCA51C489B59</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Aspose.Cells, Version=7.4.1.0, Culture=neutral, PublicKeyToken=716fcc553a201e56, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\adm1ngb\Downloads\Aspose.Total_dll_only\net3.5_clientprofile\Aspose.Cells.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Aspose.Total.lic" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Aspose.Total.lic]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<License>
  <Data>
    <LicensedTo>IVANHOE CAMBRIDGE INC</LicensedTo>
    <LicenseType>Developer OEM</LicenseType>
    <LicenseNote>Limited to 1 developer.</LicenseNote>
    <OrderID>130221161057</OrderID>
    <OEM>This is a redistributable license</OEM>
    <Products>
      <Product>Aspose.Total</Product>
    </Products>
    <EditionType>Enterprise</EditionType>
    <SerialNumber>76c4e183-be23-4afb-879c-a254325c445a</SerialNumber>
    <SubscriptionExpiry>20140221</SubscriptionExpiry>
    <LicenseVersion>2.2</LicenseVersion>
  </Data>
  <Signature>nzU4inIQyal5DwYTjwkNLQnNboqtAWlhdbYtThauG0PMJ+1PD383j7q4uchjM9k5uRwhPIGRm/oY5Xn9Mmy3z9NyTvOUSIlDHpXlllS0ZPnl0N/rgTDyOqBnt9dTG3bs0v7YWcwvmdOOq1H81M4TgG/KiHhI0hxJHWa9A9vuDrY=</Signature>
</License>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_03FCBA654250400A84E9CCA51C489B59.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
gQAhAQYAFgAsJgAAAADGABcL5QEWAAwmAAAAAMYBFwoGABoAgSYAAAAAhhhtCPEBGgCQJgAAAACG
GG0I8QEbAJ8mAAAAAIYIogJBABwAxSYAAAAAhgjvAUEAHADrJgAAAACGCFIBQQAcABEnAAAAAIYI
tApBABwANycAAAAAhgjZAUEAHABdJwAAAACGCBoFQQAcAIMnAAAAAIMYbQgGABwAiycAAAAAkwi7
B/cBHAC3JwAAAACTCEcC/AEcAL4nAAAAAJMIUwIBAhwAxicAAAAAlghSCgcCHQDNJwAAAACGGG0I
BgAdANUnAAAAAJEYcwgMAh0AAAABAL0BAAABAEEIAAACAH8LAAABAH8FAAABALQHAAACAF8JAAAD
AEEHAAABAPEEAAABAPEEAAABAPEEAAABAPEEAAABAPEEAAABAPEEAAABAPEEAAABAPEEAAABAPEE
AAABAPEEAAABAPEEAAABAPEEAAABAPEEAAABAPEEAAABAPUJAAACAHoIAAADANgJAAAEAEEHAAAB
AI4KAAABAI4KAAABAPEECQBtCAEAEQBtCAYAGQBtCAoAKQBtCBAAMQBtCBAAOQBtCBAAQQBtCBAA
SQBtCBAAUQBtCBAAWQBtCBAAYQBtCBAAaQBtCAYA0QBtCAYA8QBtCBUAAQFtCAYAwQCLBAYAcQCt
CSIAGQGrASgACQEdATEAwQD+ADsAeQBoAUEAMQFJCEUAwQCWBAYAcQD9CVkAQQFfCF8AgQCYCmQA
iQAdBmgAgQAjC20AkQC/AgYASQFtCAYASQG0AhAAUQFtCBAAUQHgCYAAWQEdBoYAmQCaCYwAYQGR
C5IAYQEdBpYAoQCiBGQAaQHJAZ0AEQErCqMAcQFtCBAAcQCKC6sAoQAwArAAoQCsBLYAgQHoBLwA
gQFCBsEAgQFtCMsAgQFRBsEAiQAmBtIAoQDRBEEAEQHQC9gAEQGkCd0AOQEdAeIAEQHCC+gAEQHb
B0EAEQG2C+gAyQARBUEAcQBtCAYAqQBtCPIAqQAmBvwAqQAVBgEAiQFtCBAAqQB4CwYAqQBDCgYA
qQBGCm0AwQBtCAYAwQCAAAYBwQBzCQ0ByQBtCAYAwQBJCRMBkQEdBhkBwQBbCyABmQEsCyYBGQGp
Cy0B2QBtCDMB+QBtCAYACAAIAFYBCAAMAFYBCAAQAFsBCAAUAFsBDgAYAGABLgALACcCLgATADAC
LgAbAE8CLgAjAFgCLgArAIECLgAzAIECLgA7AIECLgBDAFgCLgBLAIcCLgBTAIECLgBbAJ4CQwBj
AFYB4wBrAFYB4QF7AFYBqQJzAE8CyQJzAE8CGwBQAHEA7gACAQMAAQAGAA8ABwAVAAgAFwAAAMsC
EAIAAJwFFAIAAMIKEAIAANwFFAIAAGIKEAIAAMkFFAIAANIKEAIAAPMFFAIAAF8BEAIAAIgFFAIA
AKALEAIAAAUGFAIAACkHEAIAALQFFAIAAKYCEAIAAPMBEAIAAFYBEAIAALgKEAIAAN0BEAIAAB4F
EAIAAL8HGAIAAGcCHQIAAFYKIgIBAAkAAwABAAoABQABAAsABwABAAwACQABAA0ACwABAA4ADQAB
AA8ADwABABAAEQABABEAEwABABIAFQABABMAFwABABQAGQABABUAGwABABYAHQACACEAHwACACIA
IQACACMAIwACACQAJQACACUAJwACACYAKQACACgAKwACACkALQABACoALQACACsALwAEgAAAAQAA
AAAAAAAAAAAAAABTAAAABAAAAAAAAAAAAAAAOwEUAQAAAAANAAAAAAAAAAAAAABEAdkKAAAAAAQA
AAAAAAAAAAAAADsB8gAAAAAABwAEAAEAAAAAAAAATQGNCQAAAAANAAAAAAAAAAAAAABEAfYKAAAA
AAQAAAAAAAAAAAAAADsBLwYAAAAADQAAAAAAAAAAAAAARAFuBwAAAAANAAAAAAAAAAAAAABEAUsH
AAAAAAAAAAABAAAAyAgAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUx
MDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABTQ18wM0ZDQkE2NTQy
NTA0MDBBODRFOUNDQTUxQzQ4OUI1OQA8TW9kdWxlPgBHZXRPdXRwdXRJRABQT0lOVEVSX0VORABG
TE9XX0NPREVfQ09MX05VTQBQT0lOVEVSX0NPTF9OVU0AU1RBUlRfQ09MX05VTQBTVEFSVF9ST1df
TlVNAFN5c3RlbS5JTwBjb252ZXJ0RXhjZWxUb0NTVgBTeXN0ZW0uRGF0YQBnZXRfQ29tcG9uZW50
TWV0YURhdGEAbXNjb3JsaWIAQWRkAE1hcmtPdXRwdXRzRmluaXNoZWQAZGVmYXVsdEluc3RhbmNl
AHNldF9GbG93Q29kZQBnZXRfQnJhemlsRGV2Rmxvd0NvZGUAZ2V0X01lc3NhZ2UARGF0YVRhYmxl
AGZvcmVjYXN0c1RhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAHBhcnRuZXJGaWxlAENlbGxJbmRleFRvTmFtZQBnZXRfQnJhemlsUGFydG5lck5hbWUA
Z2V0X0JyYXppbEN1cnJlbmN5TmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5Q
aXBlbGluZQBnZXRfVHlwZQBDZWxsVmFsdWVUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBnZXRfQXNwb3NlTGljZW5zZQBTZXRMaWNlbnNlAERpc3Bvc2UAc2V0X0ZvcmVjYXN0
RGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RF
eGVjdXRlAGdldF9WYWx1ZQBnZXRfRGF0ZVRpbWVWYWx1ZQBHZXRDZWxsU3RyaW5nVmFsdWUAZ2V0
X0Rpc3BsYXlTdHJpbmdWYWx1ZQBNaW5WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFRvU3RyaW5nAGdldF92YXJJbnB1dEZpbGVGdWxsUGF0aABXb3JrYm9vawBTeXN0ZW0uQ29t
cG9uZW50TW9kZWwAU0NfMDNGQ0JBNjU0MjUwNDAwQTg0RTlDQ0E1MUM0ODlCNTkuZGxsAENlbGwA
Y2VsbABzZXRfRmxvd0NvZGVfSXNOdWxsAHNldF9Gb3JlY2FzdERhdGVfSXNOdWxsAHNldF9Qb3J0
Zm9saW9fSXNOdWxsAHNldF9Db21tZW50X0lzTnVsbABzZXRfQmFua0FjY291bnRfSXNOdWxsAHNl
dF9BbW91bnRfSXNOdWxsAHNldF9DdXJyZW5jeV9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRf
SXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4Ab3BfR3JlYXRlclRoYW4Ab3BfTGVzc1RoYW4AU2NyaXB0
TWFpbgBEYXRhQ29sdW1uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9uAFdvcmtzaGVldENvbGxlY3Rp
b24ARGF0YVJvd0NvbGxlY3Rpb24ASW52YWxpZERhdGFFeGNlcHRpb24ASW52YWxpZE9wZXJhdGlv
bkV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBzZXRfUG9ydGZvbGlvAE91dHB1dE5hbWVNYXAAT3V0cHV0
TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZl
ci5EVFNQaXBlbGluZVdyYXAAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAE91dHB1dEJ1ZmZl
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAENlbGxzSGVscGVyAFRvVXBwZXIATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5l
LldyYXBwZXIASXNFbmRQb2ludGVyAHBvaW50ZXIARmlyZUVycm9yAElFbnVtZXJhdG9yAEdldEVu
dW1lcmF0b3IALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2EzNWU2Yzk2MmFk
ZTQxZWRhYWRkYjRmYzk4MGQ4ZmZjLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTQ19hMzVlNmM5NjJhZGU0MWVkYWFkZGI0ZmM5ODBkOGZmYy5Qcm9wZXJ0aWVz
AGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4
ZXMAU2V0dGluZ3MAQXNwb3NlLkNlbGxzAGdldF9DZWxscwBDb250YWlucwBnZXRfQ29sdW1ucwBT
eXN0ZW0uQ29sbGVjdGlvbnMAQ29ubmVjdGlvbnMAQnVmZmVycwBnZXRfV29ya3NoZWV0cwBGaW5p
c2hPdXRwdXRzAGdldF9Sb3dzAG1heFdvcmtzaGVldFJvd3MAQ3JlYXRlTmV3T3V0cHV0Um93cwBD
b25jYXQAT2JqZWN0AFdvcmtzaGVldABTZXRFbmRPZlJvd3NldABnZXRfRGVmYXVsdABzZXRfQ29t
bWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1
cnJlbnQAc2V0X0JhbmtBY2NvdW50AGdldF9CcmF6aWxNYWluQmFua0FjY291bnQAc2V0X0Ftb3Vu
dABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxp
bmVIb3N0AFByaW1lT3V0cHV0AE1vdmVOZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29t
cG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQARGF0YVJvdwBBZGRSb3cAY3Vy
cmVudFJvdwBOZXdSb3cAZ2V0X01heFJvdwBzZXRfQ3VycmVuY3kAZ2V0X0Fzc2VtYmx5AG9wX0Vx
dWFsaXR5AG9wX0luZXF1YWxpdHkASXNOdWxsT3JFbXB0eQAAAAAXQgBhAG4AawBBAGMAYwBvAHUA
bgB0AAARQwB1AHIAcgBlAG4AYwB5AAARRgBsAG8AdwBDAG8AZABlAAAZRgBvAHIAZQBjAGEAcwB0
AEQAYQB0AGUAAA1BAG0AbwB1AG4AdAAAEUMAbwBtAG0AZQBuAHQAcwAAE1AAbwByAHQAZgBvAGwA
aQBvAAAtUABhAHIAdABuAGUAcgBUAGUAbQBwAGwAYQB0AGUAQQBkAGEAcAB0AG8AcgAAAQAZTgBB
AEkAIABIAG8AbABkAGkAbgBnAHMAAEdDAGEAbgBuAG8AdAAgAGYAaQBuAGQAIABzAHQAYQByAHQA
aQBuAGcAIABkAGEAdABlACAAaQBuACAAYwBlAGwAbAAgAFsAABVdACAAbwBmACAAZgBpAGwAZQAg
AAADMAAABygAKwApAAAHKAAtACkAAQlYAFgAWABYAABNKAA9ACkAIABGAGkAbgBhAGwAIABDAGEA
cwBoACAAQgBhAGwAYQBuAGMAZQAgAEUAeAAtAEEAYwBxAHUAaQBzAGkAdABpAG8AbgBzAAGAm0kA
cwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAg
AHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAA
dABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAADU8AdQB0AHAAdQB0AAAbQQBz
AHAAbwBzAGUATABpAGMAZQBuAHMAZQAAJUIAcgBhAHoAaQBsAEMAdQByAHIAZQBuAGMAeQBOAGEA
bQBlAAAjQgByAGEAegBpAGwARABlAHYARgBsAG8AdwBDAG8AZABlAAArQgByAGEAegBpAGwATQBh
AGkAbgBCAGEAbgBrAEEAYwBjAG8AdQBuAHQAACNCAHIAYQB6AGkAbABQAGEAcgB0AG4AZQByAE4A
YQBtAGUAACt2AGEAcgBfAEkAbgBwAHUAdABGAGkAbABlAEYAdQBsAGwAUABhAHQAaAAAcVMAQwBf
AGEAMwA1AGUANgBjADkANgAyAGEAZABlADQAMQBlAGQAYQBhAGQAZABiADQAZgBjADkAOAAwAGQA
OABmAGYAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAADcesDS
toU8TIvBSLi7WZm+AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARF1BgcDDhI9AgUgABKAhQgAARKA
jRGAkQkgAhKAlQ4SgI0FIAASgJkDIAAOCiAGAQgODg4IEAIIBwMSQRJFEkkFIAASgJ0EIAASQQMg
ABwEIAEcDgMgAAIOBwgSTRJRElEICA4SRQ4FIAASgK0FIAESTQgFIAASgLEDIAAIBiACElEICAUA
Ag4ICAcABA4ODg4OBCAAEkUFIAARgL0FIAARgMEEBhGAwQkAAgIRgMERgMEGIAMBCAgIBSACAQ4c
BAABAg4EIAECDgUgAQESRQUAAgIODgMHAQ4JIAMBElkdCBJdBSACAQgcAwcBCAYAAggSXQ4FIAEd
CAgFIAASgMkGIAESgM0cBQAAEoDRBiABHBKA1QUgABKA2QcgAgEOEoDZCLd6XFYZNOCJCImEXc2A
gMyRCHFvzFU6IB5WBAEAAAAEAgAAAEwoAD0AKQAgAEYAaQBuAGEAbAAgAEMAYQBzAGgAIABCAGEA
bABhAG4AYwBlACAARQB4AC0AQQBjAHEAdQBpAHMAaQB0AGkAbwBuAHMAAwYSOQIGCAIGDgMGEhQD
BhIYAwYSDAMGEmEDBhJtAwYScQMGEiAGIAICElEIBSABDhJRBCABAQILIAQBCB0IHRJZEl0FIAEB
EmEEAAASbQQAABJxBQABARJxBAAAEiADAAABAygADgMoAAIECAASbQQIABJxBAgAEiAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2EzNWU2Yzk2
MmFkZTQxZWRhYWRkYjRmYzk4MGQ4ZmZjAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC41tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAHRFAAAAAAAAAAAAAI5FAAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAACARQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBh
ADMANQBlADYAYwA5ADYAMgBhAGQAZQA0ADEAZQBkAGEAYQBkAGQAYgA0AGYAYwA5ADgAMABkADgA
ZgBmAGMAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADAAMwBGAEMAQgBBADYANQA0ADIA
NQAwADQAMAAwAEEAOAA0AEUAOQBDAEMAQQA1ADEAQwA0ADgAOQBCADUAOQAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMQA2AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMAAzAEYAQwBCAEEA
NgA1ADQAMgA1ADAANAAwADAAQQA4ADQARQA5AEMAQwBBADUAMQBDADQAOAA5AEIANQA5AC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGEAMwA1AGUANgBjADkA
NgAyAGEAZABlADQAMQBlAGQAYQBhAGQAZABiADQAZgBjADkAOAAwAGQAOABmAGYAYwAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAoDUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_03fcba654250400a84e9cca51c489b59</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::var_InputFileFullPath,$Package::BrazilCurrencyName,$Package::BrazilDevFlowCode,$Package::BrazilMainBankAccount,$Package::BrazilPartnerName,$Project::AsposeLicense</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">c117d8c850cd10327e68a2d90f420b05</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">49de6c583abcfa5bab45fc0c201a4cf66a86310d</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output]"
                  hasSideEffects="true"
                  name="Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[ForecastDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[ForecastDate]"
                      name="ForecastDate" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[BankAccount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[BankAccount]"
                      name="BankAccount" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[Comment]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[Comment]"
                      name="Comment" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[Amount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[Amount]"
                      name="Amount" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[FlowCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[FlowCode]"
                      name="FlowCode" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[Currency]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[Currency]"
                      name="Currency" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[Portfolio]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[Portfolio]"
                      name="Portfolio" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\SCR - Get Row Number"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SCR - Get Row Number"
              version="10">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 varRowCount
    {
        get
        {
            return (Int32)(ParentComponent.ReadWriteVariables["var_RowCount"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["var_RowCount"].Value = value;
        }
    }

    public Int32 varRowNumber
    {
        get
        {
            return (Int32)(ParentComponent.ReadWriteVariables["var_RowNumber"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["var_RowNumber"].Value = value;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    private int m_rowNumber;
    private int m_rowCount;
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        // Initialize the row number
        m_rowNumber = 0;
        m_rowCount = 0;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        this.Variables.varRowNumber = m_rowNumber;
        this.Variables.varRowCount = m_rowCount;
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        // Increase  the row number  and assign  the value  to the output column
        m_rowNumber++;
        Row.RowNumber = m_rowNumber;
        m_rowCount++;
        Row.RowCount = m_rowNumber;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 RowCount
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RowCount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 RowNumber
    {
        set
        {
            this[1] = value;
        }
    }
    public bool RowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cf88bddbfe674c53b7064ae0757f9548.Properties.Settings.get_Default():SC_cf88bddbfe674c53b7064ae0757f9548.Properties.Sett" +
    "ings")]

namespace SC_cf88bddbfe674c53b7064ae0757f9548.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_cf88bddbfe674c53b7064ae0757f9548.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{d84a8d02-4bc3-48f0-b3a0-b2cf2f4e360c}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_cf88bddbfe674c53b7064ae0757f9548</RootNamespace><AssemblyName>SC_93D4955D67834CF19C684671545FDA1A</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptComponent" GeneratedNamespace="SC_cf88bddbfe674c53b7064ae0757f9548" IconIndex="0"></Host><ProjectClient><HostIdentifier>SSIS_SC130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_cf88bddbfe674c53b7064ae0757f9548</msb:CodeName>
		<msb:DisplayName>SC_cf88bddbfe674c53b7064ae0757f9548</msb:DisplayName>
		<msb:ProjectId>{EE4657A5-9614-4C5F-AB8D-41134CF70023}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_cf88bddbfe674c53b7064ae0757f9548.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_cf88bddbfe674c53b7064ae0757f9548")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_cf88bddbfe674c53b7064ae0757f9548")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cf88bddbfe674c53b7064ae0757f9548.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cf88bddbfe674c53b7064ae0757f9548.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cf88bddbfe674c53b7064ae0757f9548.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_cf88bddbfe674c53b7064ae0757f9548.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_cf88bddbfe674c53b7064ae0757f9548.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_93D4955D67834CF19C684671545FDA1A.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
CwUbAAIA2SAAAAAAhgiCBgEABQDoIAAAAACGCHADowAGAP8gAAAAAIYIagQBAAcADiEAAAAAhghb
A6MACAAlIQAAAACGAGcHKwAJAC0hAAAAAIYAPAYrAAkANSEAAAAAhhgLBQYACQBVIQAAAADGAP8G
qAAJAHohAAAAAMYB+AadAA0AjSEAAAAAxgFQB50ADgCPIQAAAACGGAsFsgAPAJ4hAAAAAIYYCwWy
ABAArSEAAAAAhgiPBrgAEQDTIQAAAACGCJ8GAQARAPUhAAAAAIYIeAS4ABIAGyIAAAAAhgiJBAEA
EgA9IgAAAACDGAsFBgATAEUiAAAAAJMIzwS8ABMAcSIAAAAAkwjiAMEAEwB4IgAAAACTCO4AxgAT
AIAiAAAAAJYISAbMABQAhyIAAAAAhhgLBQYAFACPIgAAAACRGBEF0QAUAAAAAQBrBwAAAQDIBAAA
AgD0BQAAAwA9BAAAAQD2AgAAAQD2AgAAAQD2AgAAAQD2AgAAAQBtAAAAAgCyAAAAAwDIBAAABAA9
BAAAAQDIBAAAAQBrBwAAAQB4BgAAAQB4BgAAAQD2AgAAAQD2AgAAAQD2AgkACwUBABEACwUGABkA
CwUKACkACwUQADEACwUQADkACwUQAEEACwUQAEkACwUQAFEACwUQAFkACwUQAGEACwUQAGkACwUG
AJkACwUGALkACwUVAMkACwUGAIkA1QIGAIkA4AIGAHEACwUbAHEAlQMlAHEAhAMBANkACwUQAHEA
ZwcrAHEAPAYrAIkACwUGAOEAIgYvAIkACAY2AJEACwUGAIkA3QU8APEAjANBAIkAOwdHAPkADAdN
APkA7AJUABEBoABZABEBbwdiAKEACwVoAMEACwUGAC4ACwDsAC4AEwD1AC4AGwAUAS4AIwAdAS4A
KwBGAS4AMwBGAS4AOwBGAS4AQwAdAS4ASwBMAS4AUwBGAS4AWwBjAUMAYwCtAeMAawCtAekAcwAU
AQkBcwAUASEBewCtAQMAAQAGAAUABwAHAAgACQAAAKYG1QAAAHQD2QAAAJAE1QAAAF8D2QAAAKMG
1QAAAI0E1QAAANME3QAAAAIB4gAAAEwG5wABAAYAAwABAAcABQABAAgABwABAAkACQACABIACwAB
ABMACwACABQADQABABUADQACABcADwACABgAEQABABkAEQACABoAEwAEgAAAAQAAAAAAAAAAAAAA
AABJAAAABAAAAAAAAAAAAAAAcAB1AAAAAAANAAAAAAAAAAAAAAB5ALoGAAAAAA0AAAAAAAAAAAAA
AHkA1wYAAAAABAAAAAAAAAAAAAAAcACeAwAAAAANAAAAAAAAAAAAAAB5AEcEAAAAAAAAAAABAAAA
XAUAAAAAAElEVFNWYXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250
ZXh0MTAwAEludDMyADxNb2R1bGU+AFNDXzkzRDQ5NTVENjc4MzRDRjE5QzY4NDY3MTU0NUZEQTFB
AElucHV0SUQAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBU
eXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0
ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhh
dGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0
QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRl
AFBvc3RFeGVjdXRlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0
cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfOTNENDk1NUQ2NzgzNENGMTlDNjg0NjcxNTQ1
RkRBMUEuZGxsAHNldF9Sb3dOdW1iZXJfSXNOdWxsAHNldF9Sb3dDb3VudF9Jc051bGwAU2V0TnVs
bABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0u
Q29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZh
bGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0
TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABzZXRf
Um93TnVtYmVyAGdldF92YXJSb3dOdW1iZXIAc2V0X3ZhclJvd051bWJlcgBtX3Jvd051bWJlcgBJ
bnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFn
ZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBT
eXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAFNDX2NmODhiZGRiZmU2NzRjNTNiNzA2NGFlMDc1N2Y5NTQ4LlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19jZjg4YmRkYmZlNjc0YzUzYjcw
NjRhZTA3NTdmOTU0OC5Qcm9wZXJ0aWVzAGdldF9SZWFkV3JpdGVWYXJpYWJsZXMAQnVmZmVyQ29s
dW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBP
YmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25l
bnQAU2NyaXB0Q29tcG9uZW50AHNldF9Sb3dDb3VudABnZXRfdmFyUm93Q291bnQAc2V0X3ZhclJv
d0NvdW50AG1fcm93Q291bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQu
U3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AEdldFZhbHVlV2l0aENv
bnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQASW5w
dXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQAAgJtJAHMATgB1AGwAbAAg
AHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEA
bABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBv
AGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAAAZdgBhAHIAXwBSAG8A
dwBDAG8AdQBuAHQAABt2AGEAcgBfAFIAbwB3AE4AdQBtAGIAZQByAABxUwBDAF8AYwBmADgAOABi
AGQAZABiAGYAZQA2ADcANABjADUAMwBiADcAMAA2ADQAYQBlADAANwA1ADcAZgA5ADUANAA4AC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAALRUoPuB6ZFDs31bQD/X
4BkABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkJIAMBEj0dCBJBBSACAQgcAyAAAgYgAgIOEXUF
IAEdCAgEIAASeQUgARJ9HAUAABKAgQYgARwSgIUEIAEBHAgAARKAiRGAjQUgABKAkQcgAgEOEoCR
CLd6XFYZNOCJCImEXc2AgMyRAgYIAwYSFAMGEhgDBhJFAwYSUQMGElUDBhIgBSABARIMBCABAQIJ
IAQBCA4SPRJBBSABARJFAyAACAQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAIAygAAgQIABJR
BAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU0NfY2Y4OGJkZGJmZTY3NGM1M2I3MDY0YWUwNzU3Zjk1NDgAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAxNgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAAAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAKA0AAAA
AAAAAAAAALo0AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsNAAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfAGMAZgA4ADgAYgBkAGQAYgBmAGUANgA3ADQAYwA1ADMAYgA3ADAANgA0AGEAZQAwADcA
NQA3AGYAOQA1ADQAOAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOQAzAEQANAA5ADUA
NQBEADYANwA4ADMANABDAEYAMQA5AEMANgA4ADQANgA3ADEANQA0ADUARgBEAEEAMQBBAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA5ADMA
RAA0ADkANQA1AEQANgA3ADgAMwA0AEMARgAxADkAQwA2ADgANAA2ADcAMQA1ADQANQBGAEQAQQAx
AEEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYwBmADgA
OABiAGQAZABiAGYAZQA2ADcANABjADUAMwBiADcAMAA2ADQAYQBlADAANwA1ADcAZgA5ADUANAA4
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADMNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_93d4955d67834cf19c684671545fda1a</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::var_RowCount,User::var_RowNumber</property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">1576fbc69a80d8989f0136aa1b079751</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">73b3ae628982862ce3f3b3cbc63d885f41aa4d36</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\SCR - Get Row Number.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\SCR - Get Row Number.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\SCR - Get Row Number.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\SCR - Get Row Number.Outputs[Output 0].Columns[RowCount]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\SCR - Get Row Number.Outputs[Output 0].Columns[RowCount]"
                      name="RowCount" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\SCR - Get Row Number.Outputs[Output 0].Columns[RowNumber]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\SCR - Get Row Number.Outputs[Output 0].Columns[RowNumber]"
                      name="RowNumber" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Inputs[Union All Input 1].Columns[ForecastDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ForecastDate"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[ForecastDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[ForecastDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Inputs[Union All Input 1].Columns[BankAccount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BankAccount"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[BankAccount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[BankAccount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Inputs[Union All Input 1].Columns[Comment]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Comment"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[Comment]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Comment]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Inputs[Union All Input 1].Columns[Amount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Amount"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[Amount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Amount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Inputs[Union All Input 1].Columns[FlowCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FlowCode"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[FlowCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[FlowCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Inputs[Union All Input 1].Columns[Currency]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Currency"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[Currency]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Currency]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Inputs[Union All Input 1].Columns[Portfolio]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Portfolio"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output].Columns[Portfolio]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Portfolio]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Inputs[Union All Input 1].Columns[CorrectedFlowCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CorrectedFlowCode"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Outputs[Lookup Match Output].Columns[CorrectedFlowCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[CorrectedFlowCode]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[ForecastDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[ForecastDate]"
                      name="ForecastDate" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[BankAccount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[BankAccount]"
                      name="BankAccount" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Comment]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Comment]"
                      name="Comment" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Amount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Amount]"
                      name="Amount" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[FlowCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[FlowCode]"
                      name="FlowCode" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Currency]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Currency]"
                      name="Currency" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Portfolio]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[Portfolio]"
                      name="Portfolio" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[CorrectedFlowCode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[CorrectedFlowCode]"
                      name="CorrectedFlowCode" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[AssetName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1].Columns[AssetName]"
                      name="AssetName" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).Paths[Derived Column Output]"
              endId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output]" />
            <path
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).Paths[Derived Column Output1]"
              endId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Inputs[Union All Input 1]"
              name="Derived Column Output"
              startId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default.Outputs[Derived Column Output]" />
            <path
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).Paths[Lookup Match Output]"
              endId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Outputs[Lookup Match Output]" />
            <path
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).Paths[Output]"
              endId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping.Inputs[Lookup Input]"
              name="Output"
              startId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet.Outputs[Output]" />
            <path
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).Paths[Output 0]"
              endId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\SCR - Get Row Number.Outputs[Output 0]" />
            <path
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).Paths[Union All Output 1]"
              endId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\SCR - Get Row Number.Inputs[Input 0]"
              name="Union All Output 1"
              startId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:DelayValidation="True"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{367c17e4-85ec-454d-8181-dea719b6decc}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:FailParentOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail).EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{fce78df4-556d-4e9e-8b1c-36df644fc071}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{58ee8f24-4784-4937-84f0-51216aeb8a2c}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">0</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="DER - Add columns required by Detail"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[DataLoadingID]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[DataLoadingID]"
                      name="DataLoadingID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[User::var_DataLoadingID]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[User::var_DataLoadingID]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[FileName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[FileName]"
                      name="FileName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[$Package::FileToLoad]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[$Package::FileToLoad]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[staging].[PART_FINANCE_FORECAST_Detail]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Connections[OleDbConnection]"
                  connectionManagerID="{E24982FB-22F7-4235-9AE4-99A820D08725}:external"
                  connectionManagerRefId="Project.ConnectionManagers[oledb IC_DM_Staging]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[Currency]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="Currency"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Currency]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[Currency]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[Amount]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="Amount"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Amount]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[Amount]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[DataLoadingID]"
                      cachedDataType="i4"
                      cachedName="DataLoadingID"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[DataLoadingID]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[DataLoadingID]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[RowNumber]"
                      cachedDataType="i4"
                      cachedName="RowNumber"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[RowNumber]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\SCR - Get Row Number.Outputs[Output 0].Columns[RowNumber]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[ForecastDate]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="ForecastDate"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[ForecastDate]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[ForecastDate]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[Comment]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="Comment"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Comment]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[Comment]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[FlowCode]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FlowCode"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[FlowCode]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[FlowCode]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[BankAccount]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BankAccount"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[BankAccount]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[BankAccount]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[Portfolio]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Portfolio"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Portfolio]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[Portfolio]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].Columns[FileName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FileName"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output].Columns[FileName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Currency]"
                      dataType="wstr"
                      length="255"
                      name="Currency" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Amount]"
                      dataType="wstr"
                      length="255"
                      name="Amount" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[DataLoadingID]"
                      dataType="i4"
                      name="DataLoadingID" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[RowNumber]"
                      dataType="i4"
                      name="RowNumber" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[ForecastDate]"
                      dataType="wstr"
                      length="255"
                      name="ForecastDate" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Comment]"
                      dataType="wstr"
                      length="255"
                      name="Comment" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[FlowCode]"
                      dataType="wstr"
                      length="255"
                      name="FlowCode" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[BankAccount]"
                      dataType="wstr"
                      length="255"
                      name="BankAccount" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[Portfolio]"
                      dataType="wstr"
                      length="255"
                      name="Portfolio" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[AssetName]"
                      dataType="wstr"
                      length="255"
                      name="AssetName" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                      dataType="wstr"
                      length="255"
                      name="FileName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Read From Partner Excel"
              version="10">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="33">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a35e6c962ade41edaaddb4fc980d8ffc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_a35e6c962ade41edaaddb4fc980d8ffc")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using Aspose.Cells;
using System.IO;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion



    //Variables
    DataTable forecastsTable = new DataTable();

    //For column const, view example of a partner forecasts parsed excel at : 
    public const int FLOW_CODE_COL_NUM = 1;
    public const int COMMENTS_COL_NUM = 3;

    //Start of date pivot
    public const int START_COL_NUM = 4;
    public const int START_ROW_NUM = 7;

    //Back account cell
    public const int BANK_COL_NUM = 2;
    public const int BANK_ROW_NUM = 0;

    //Currency cell
    public const int CURRENCY_COL_NUM = 2;
    public const int CURRENCY_ROW_NUM = 1;

    //Property cell
    public const int PORTFOLIO_COL_NUM = 2;
    public const int PORTFOLIO_ROW_NUM = 2;

    public int maxWorksheetRows = 0;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        forecastsTable.Columns.Add("BankAccount", typeof(string));
        forecastsTable.Columns.Add("Currency", typeof(string));
        forecastsTable.Columns.Add("FlowCode", typeof(string));
        forecastsTable.Columns.Add("ForecastDate", typeof(string));
        forecastsTable.Columns.Add("Amount", typeof(string));
        forecastsTable.Columns.Add("Comments", typeof(string));
        forecastsTable.Columns.Add("Portfolio", typeof(string));

        String partnerFile = this.Variables.varInputFileFullPath;

        try
        {
            convertExcelToCSV(partnerFile);
        }
        catch(Exception e)
        {
            bool cancel = true;
            ComponentMetaData.FireError(10, "PartnerTemplateAdaptor", e.Message, "", 0, out cancel);
            throw e;
        }
        
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
       
    }

    public override void CreateNewOutputRows()
    {
        foreach (DataRow row in forecastsTable.Rows) {
            this.OutputBuffer.AddRow();
            this.OutputBuffer.BankAccount = row["BankAccount"] as String;
            this.OutputBuffer.Currency = row["Currency"] as String;
            this.OutputBuffer.FlowCode = row["FlowCode"] as String;
            this.OutputBuffer.ForecastDate = row["ForecastDate"] as String;
            this.OutputBuffer.Amount = row["Amount"] as String;
            this.OutputBuffer.Comment = row["Comments"] as String;
            this.OutputBuffer.Portfolio = row["Portfolio"] as String;
        }
    }


    private void readWorksheet(Workbook workbook, int worksheetId)
    {
        Worksheet worksheet = workbook.Worksheets[worksheetId];

        maxWorksheetRows = worksheet.Cells.MaxRow + 1;

        Cell dateCell = worksheet.Cells[START_ROW_NUM, START_COL_NUM];
        Cell bankAccountCell = worksheet.Cells[BANK_ROW_NUM, BANK_COL_NUM];
        Cell currencyCell = worksheet.Cells[CURRENCY_ROW_NUM, CURRENCY_COL_NUM];
        Cell PortfolioCell = worksheet.Cells[PORTFOLIO_ROW_NUM, PORTFOLIO_COL_NUM];
        int currentCol = 0;

        if(dateCell.Value == null || bankAccountCell.Value == null || currencyCell.Value == null || PortfolioCell.Value == null)
        {
            //Spec changed. Some partners sends the excel with an invalid template. When that occurs, Treasury adds a tab to respect the standard template.
            //Therefore, we simply ignore tabs that do no respect the header.
            return;
            //throw new System.IO.InvalidDataException("Cannot find starting date in cell [" + CellsHelper.CellIndexToName(START_ROW_NUM, START_COL_NUM) + "] of file " + Variables.varInputFileFullPath);
        }

        while (dateCell.Value != null)
        {

            int currentRow = 2;

            do
            {
                DataRow forecast = forecastsTable.NewRow();
                forecast["BankAccount"] = GetCellStringValue(worksheet.Cells[BANK_ROW_NUM, BANK_COL_NUM]);
                forecast["Currency"] = GetCellStringValue(worksheet.Cells[CURRENCY_ROW_NUM, CURRENCY_COL_NUM]);
                forecast["Portfolio"] = GetCellStringValue(worksheet.Cells[PORTFOLIO_ROW_NUM, PORTFOLIO_COL_NUM]);
                if (dateCell.Type == CellValueType.IsDateTime && dateCell.DateTimeValue > DateTime.MinValue && dateCell.DateTimeValue < new DateTime(2200, 1, 1))
                {
                    forecast["ForecastDate"] = GetCellStringValue(dateCell);
                }else
                {
                    forecast["ForecastDate"] = dateCell.DisplayStringValue;
                }
                forecast["FlowCode"] = GetCellStringValue(worksheet.Cells[START_ROW_NUM + currentRow, FLOW_CODE_COL_NUM]);
                forecast["Comments"] = GetCellStringValue(worksheet.Cells[START_ROW_NUM + currentRow, COMMENTS_COL_NUM]);

                var amount = GetCellStringValue(worksheet.Cells[START_ROW_NUM + currentRow, START_COL_NUM + currentCol]);
                forecast["Amount"] = amount != null ? amount : "0";
                if (!string.IsNullOrWhiteSpace(forecast["FlowCode"] as string) && !string.IsNullOrWhiteSpace(forecast["Amount"] as string) && forecast["Amount"] as string != "0")
                {
                    forecastsTable.Rows.Add(forecast);
                }

                currentRow++;
            } while (!IsEndPointer(currentRow));

            currentCol++;
            dateCell = worksheet.Cells[START_ROW_NUM, START_COL_NUM + currentCol];
        }
    }


    private void convertExcelToCSV(String partnerFile)
    {
        License license = new License();
        license.SetLicense(Variables.AsposeLicense);

        Workbook workbook = new Workbook(partnerFile);

        for (int i = 0; i < workbook.Worksheets.Count; i++)
        {
            if (workbook.Worksheets[i].Name == "Flowcodes")
                continue;
            this.readWorksheet(workbook, i);
        }
    }

    private bool IsEndPointer(int currentRow)
    {
        return currentRow > maxWorksheetRows;
    }

    private String GetCellStringValue(Cell cell)
    {
        return cell.Value == null ? null : cell.Value.ToString();
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class OutputBuffer: ScriptBuffer

{
    public OutputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ForecastDate
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ForecastDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String BankAccount
    {
        set
        {
            this[1] = value;
        }
    }
    public bool BankAccount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Comment
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Comment_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Amount
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Amount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FlowCode
    {
        set
        {
            this[4] = value;
        }
    }
    public bool FlowCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Currency
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Currency_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Portfolio
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Portfolio_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties.Settings.get_Default():SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties.Sett" +
    "ings")]

namespace SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public OutputBuffer OutputBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != OutputBuffer)
        {
            OutputBuffer.SetEndOfRowset();
            OutputBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output"))
            {
                OutputBuffer = new OutputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String AsposeLicense
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["AsposeLicense"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 ExcelWorksheetNum
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ExcelWorksheetNum"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String varInputFileFullPath
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["var_InputFileFullPath"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_a35e6c962ade41edaaddb4fc980d8ffc</msb:CodeName>
		<msb:DisplayName>SC_a35e6c962ade41edaaddb4fc980d8ffc</msb:DisplayName>
		<msb:ProjectId>{1531E171-AF16-4EAD-8B0C-940AC153E911}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_a35e6c962ade41edaaddb4fc980d8ffc.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Aspose.Total.lic"/>
		<msb:Breakpoint Include="5d64023371964d7fa54ddeb3efe987ba">
			<msb:FileName>main.cs</msb:FileName>
			<msb:ColumnNumber>9</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>178</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a35e6c962ade41edaaddb4fc980d8ffc.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FE24C6DF-7B5F-4203-A901-846EB3FD4240}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a35e6c962ade41edaaddb4fc980d8ffc</RootNamespace>
    <AssemblyName>SC_970B0C9E6780449C941F883EB1EC54C8</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Aspose.Cells, Version=7.4.1.0, Culture=neutral, PublicKeyToken=716fcc553a201e56, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\assembly\GAC_MSIL\Aspose.Cells\7.4.1.0__716fcc553a201e56\Aspose.Cells.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Aspose.Total.lic" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Aspose.Total.lic]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<License>
  <Data>
    <LicensedTo>IVANHOE CAMBRIDGE INC</LicensedTo>
    <LicenseType>Developer OEM</LicenseType>
    <LicenseNote>Limited to 1 developer.</LicenseNote>
    <OrderID>130221161057</OrderID>
    <OEM>This is a redistributable license</OEM>
    <Products>
      <Product>Aspose.Total</Product>
    </Products>
    <EditionType>Enterprise</EditionType>
    <SerialNumber>76c4e183-be23-4afb-879c-a254325c445a</SerialNumber>
    <SubscriptionExpiry>20140221</SubscriptionExpiry>
    <LicenseVersion>2.2</LicenseVersion>
  </Data>
  <Signature>nzU4inIQyal5DwYTjwkNLQnNboqtAWlhdbYtThauG0PMJ+1PD383j7q4uchjM9k5uRwhPIGRm/oY5Xn9Mmy3z9NyTvOUSIlDHpXlllS0ZPnl0N/rgTDyOqBnt9dTG3bs0v7YWcwvmdOOq1H81M4TgG/KiHhI0hxJHWa9A9vuDrY=</Signature>
</License>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a35e6c962ade41edaaddb4fc980d8ffc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_970B0C9E6780449C941F883EB1EC54C8.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
EQBWJgAAAACGCLMFmwESAG0mAAAAAIYIlAsQABMAdyYAAAAAhggwBpsBFACOJgAAAACGCFUHEAAV
AJgmAAAAAIYI3wWbARYAryYAAAAAhgBwCwYAFwC3JgAAAACGAEsKBgAXAL8mAAAAAIYATgptABcA
xyYAAAAAhhiBCAYAFwDnJgAAAADGAfoJBgAXAOkmAAAAAIEAfgEGABcACCcAAAAAxgAPC6ABFwDn
JgAAAADGASIKBgAbAF0nAAAAAIYYgQisARsAbCcAAAAAhhiBCKwBHAB7JwAAAACGCMgCQQAdAKEn
AAAAAIYIZQaVAB0AxycAAAAAhghABUEAHQDtJwAAAACDGIEIBgAdAPUnAAAAAJMI6weyAR0AISgA
AAAAkwhtArcBHQAoKAAAAACTCHkCvAEdADAoAAAAAJYIWgrCAR4ANygAAAAAhhiBCAYAHgA/KAAA
AACRGIcIxwEeAAAAAQBiBQAAAgBuAQAAAQAXAgAAAQB3CwAAAQCuBQAAAQDkBwAAAgBzCQAAAwBx
BwAAAQAXBQAAAQAXBQAAAQAXBQAAAQAXBQAAAQAXBQAAAQAXBQAAAQAXBQAAAQAXBQAAAQAXBQAA
AQAXBQAAAQAXBQAAAQAXBQAAAQAXBQAAAQAXBQAAAQAACgAAAgCOCAAAAwDjCQAABABxBwAAAQCW
CgAAAQCWCgAAAQAXBQkAgQgBABEAgQgGABkAgQgKACkAgQgQADEAgQgQADkAgQgQAEEAgQgQAEkA
gQgQAFEAgQgQAFkAgQgQAGEAgQgQAGkAgQgGANkAgQgGAPkAgQgVAAkBgQgGAMkAsQQGAHEAuAki
ACEBBQIoABEBegExAMkATwE7AHkAwgFBADkBXQhFAMkAvAQGAHEACApZAEkBcwhfAIEAoApkAIkA
TAZoAIEAGwttAJEA5QIGAJkA6wmDAFEBTAaJAKEArgmPAFkBiQuVAFkBTAaZAKkAyARkAHEAggug
AIkAVQalAKkAVgKrAKkA0gSxAGkBDgW3AGkBhwa8AGkBgQjGAGkBlga8AKkA9wRBABkBkgHNABkB
ugvSAEEBegHYAHEBgQgGAHEB2gIQAJkAgQgQAKEAIwJBABkBrgvSAHkBrAqVANEANwVBAHEAgQgG
ALEAgQjkALEAVQbuALEARAYBAIEBgQgQALEAcAsGALEASwoGALEATgptAMkAgQgGAMkAhgD4AMkA
hwn/ANEAgQgGAMkAXQkFAYkBTAYLAckAUwsSAZEBJAsYASEBoQsfAeEAgQglAQEBgQgGAAgACABI
AQgADABNAQgAEABSAQgAFABXAQgAGABcAQgAHABhAQgAIABcAQgAJABIAQgAKABcAQgALABcAS4A
CwDmAS4AEwDvAS4AGwAOAi4AIwAXAi4AKwBAAi4AMwBAAi4AOwBAAi4AQwAXAi4ASwBGAi4AUwBA
Ai4AWwBdAkMAYwBIAeMAawBIAUkCcwAOAmkCcwAOAoECewBIARsAUABxAN4A9AADAAEABgAPAAcA
EgAIABQAAADxAssBAADLBc8BAAC6CssBAAALBs8BAABqCssBAAD4Bc8BAADKCssBAAAiBs8BAAC5
AcsBAAC3Bc8BAACYC8sBAAA0Bs8BAABZB8sBAADjBc8BAADMAssBAABpBtMBAABEBcsBAADvB9cB
AACNAtwBAABeCuEBAQAKAAMAAQALAAUAAQAMAAcAAQANAAkAAQAOAAsAAQAPAA0AAQAQAA8AAQAR
ABEAAQASABMAAQATABUAAQAUABcAAQAVABkAAQAWABsAAQAXAB0AAgAiAB8AAgAjACEAAgAkACMA
AgAmACUAAgAnACcAAQAoACcAAgApACkABIAAAAEAAAAAAAAAAAAAAAAAWQAAAAQAAAAAAAAAAAAA
AC0BZQEAAAAADQAAAAAAAAAAAAAANgHRCgAAAAAEAAAAAAAAAAAAAAAtAUMBAAAAAAcABAABAAAA
AAAAAD8BoQkAAAAADQAAAAAAAAAAAAAANgHuCgAAAAAEAAAAAAAAAAAAAAAtAV4GAAAAAA0AAAAA
AAAAAAAAADYBngcAAAAADQAAAAAAAAAAAAAANgF7BwAAAAAAAAAAAQAAANwIAAAAAABJRFRTQ29t
cG9uZW50TWV0YURhdGExMDAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2
YWx1YXRvckNvbnRleHQxMDAASW50MzIAU0NfOTcwQjBDOUU2NzgwNDQ5Qzk0MUY4ODNFQjFFQzU0
QzgAPE1vZHVsZT4AR2V0T3V0cHV0SUQARkxPV19DT0RFX0NPTF9OVU0AQkFOS19DT0xfTlVNAFBP
UlRGT0xJT19DT0xfTlVNAENPTU1FTlRTX0NPTF9OVU0AU1RBUlRfQ09MX05VTQBDVVJSRU5DWV9D
T0xfTlVNAEJBTktfUk9XX05VTQBQT1JURk9MSU9fUk9XX05VTQBTVEFSVF9ST1dfTlVNAENVUlJF
TkNZX1JPV19OVU0AY29udmVydEV4Y2VsVG9DU1YAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1l
dGFEYXRhAG1zY29ybGliAHdvcmtzaGVldElkAEFkZABNYXJrT3V0cHV0c0ZpbmlzaGVkAElzTnVs
bE9yV2hpdGVTcGFjZQBkZWZhdWx0SW5zdGFuY2UAc2V0X0Zsb3dDb2RlAGdldF9NZXNzYWdlAERh
dGFUYWJsZQBmb3JlY2FzdHNUYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBwYXJ0bmVyRmlsZQBnZXRfTmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5QaXBlbGluZQBnZXRfVHlwZQBDZWxsVmFsdWVUeXBlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBnZXRfQXNwb3NlTGljZW5zZQBTZXRMaWNlbnNlAERpc3Bvc2UA
c2V0X0ZvcmVjYXN0RGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVF
eGVjdXRlAFBvc3RFeGVjdXRlAGdldF9WYWx1ZQBnZXRfRGF0ZVRpbWVWYWx1ZQBHZXRDZWxsU3Ry
aW5nVmFsdWUAZ2V0X0Rpc3BsYXlTdHJpbmdWYWx1ZQBNaW5WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAGdldF92YXJJbnB1dEZpbGVGdWxsUGF0aABXb3JrYm9v
awB3b3JrYm9vawBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfOTcwQjBDOUU2NzgwNDQ5Qzk0MUY4
ODNFQjFFQzU0QzguZGxsAENlbGwAY2VsbABzZXRfRmxvd0NvZGVfSXNOdWxsAHNldF9Gb3JlY2Fz
dERhdGVfSXNOdWxsAHNldF9Qb3J0Zm9saW9fSXNOdWxsAHNldF9Db21tZW50X0lzTnVsbABzZXRf
QmFua0FjY291bnRfSXNOdWxsAHNldF9BbW91bnRfSXNOdWxsAHNldF9DdXJyZW5jeV9Jc051bGwA
U2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AZ2V0X0V4Y2VsV29ya3NoZWV0TnVtAHJl
c291cmNlTWFuAG9wX0dyZWF0ZXJUaGFuAG9wX0xlc3NUaGFuAFNjcmlwdE1haW4ARGF0YUNvbHVt
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBEYXRhQ29sdW1uQ29sbGVjdGlvbgBXb3Jrc2hlZXRDb2xsZWN0aW9uAERhdGFSb3dDb2xs
ZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AQ3VsdHVyZUluZm8Ac2V0X1BvcnRmb2xp
bwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVX
cmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAFBpcGVsaW5lQnVmZmVyAFNj
cmlwdEJ1ZmZlcgBPdXRwdXRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxp
bmUuV3JhcHBlcgBJc0VuZFBvaW50ZXIARmlyZUVycm9yAElFbnVtZXJhdG9yAEdldEVudW1lcmF0
b3IALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2EzNWU2Yzk2MmFkZTQxZWRh
YWRkYjRmYzk4MGQ4ZmZjLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdN
b2RlcwBTQ19hMzVlNmM5NjJhZGU0MWVkYWFkZGI0ZmM5ODBkOGZmYy5Qcm9wZXJ0aWVzAGdldF9S
ZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0
dGluZ3MAQXNwb3NlLkNlbGxzAGdldF9DZWxscwBnZXRfQ29sdW1ucwBTeXN0ZW0uQ29sbGVjdGlv
bnMAQ29ubmVjdGlvbnMAQnVmZmVycwBnZXRfV29ya3NoZWV0cwBGaW5pc2hPdXRwdXRzAGdldF9S
b3dzAG1heFdvcmtzaGVldFJvd3MAQ3JlYXRlTmV3T3V0cHV0Um93cwBPYmplY3QAcmVhZFdvcmtz
aGVldABTZXRFbmRPZlJvd3NldABnZXRfRGVmYXVsdABzZXRfQ29tbWVudABVc2VyQ29tcG9uZW50
AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJlbnQAZ2V0X0NvdW50AHNl
dF9CYW5rQWNjb3VudABzZXRfQW1vdW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWlj
cm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQATW92ZU5leHQAR2V0VmFs
dWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29u
dGV4dABEYXRhUm93AEFkZFJvdwBjdXJyZW50Um93AE5ld1JvdwBnZXRfTWF4Um93AHNldF9DdXJy
ZW5jeQBnZXRfQXNzZW1ibHkAb3BfRXF1YWxpdHkAb3BfSW5lcXVhbGl0eQAAF0IAYQBuAGsAQQBj
AGMAbwB1AG4AdAAAEUMAdQByAHIAZQBuAGMAeQAAEUYAbABvAHcAQwBvAGQAZQAAGUYAbwByAGUA
YwBhAHMAdABEAGEAdABlAAANQQBtAG8AdQBuAHQAABFDAG8AbQBtAGUAbgB0AHMAABNQAG8AcgB0
AGYAbwBsAGkAbwAALVAAYQByAHQAbgBlAHIAVABlAG0AcABsAGEAdABlAEEAZABhAHAAdABvAHIA
AAEAAzAAABNGAGwAbwB3AGMAbwBkAGUAcwAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQA
eQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBz
AGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4A
cwB0AGUAYQBkAC4AAA1PAHUAdABwAHUAdAAAG0EAcwBwAG8AcwBlAEwAaQBjAGUAbgBzAGUAACNF
AHgAYwBlAGwAVwBvAHIAawBzAGgAZQBlAHQATgB1AG0AACt2AGEAcgBfAEkAbgBwAHUAdABGAGkA
bABlAEYAdQBsAGwAUABhAHQAaAAAcVMAQwBfAGEAMwA1AGUANgBjADkANgAyAGEAZABlADQAMQBl
AGQAYQBhAGQAZABiADQAZgBjADkAOAAwAGQAOABmAGYAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAADemuM/ZJ5kCN8l9dw/i5JAAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQEReQYHAw4SPQIFIAASgIkIAAESgJERgJUJIAISgJkOEoCRBSAAEoCdAyAADgogBgEIDg4O
CBACCAcDEkESRRJJBSAAEoChBCAAEkEDIAAcBCABHA4DIAACEQcJElESVRJVElUSVQgIEkUOBSAA
EoCpBSABElEIBSAAEoCtAyAACAYgAhJVCAgEIAASRQUgAgEOHAUgABGAsQUgABGAtQQGEYC1CQAC
AhGAtRGAtQYgAwEICAgEAAECDgUAAgIODgUgAQESRQUHAhJNCAkgAwESXR0IEmEFIAIBCBwDBwEI
BgACCBJhDgUgAR0ICAUgABKAxQYgARKAyRwFAAASgM0GIAEcEoDRBSAAEoDZByACAQ4SgNkIt3pc
Vhk04IkIiYRdzYCAzJEIcW/MVTogHlYEAQAAAAQDAAAABAQAAAAEBwAAAAQCAAAABAAAAAADBhI5
AgYIAwYSFAMGEhgDBhIMAwYSZQMGEnEDBhJ1AwYSIAYgAgESTQgEIAECCAUgAQ4SVQQgAQECCyAE
AQgdCB0SXRJhBSABARJlBAAAEnEEAAASdQUAAQESdQQAABIgAwAAAQMoAA4DKAACAygACAQIABJx
BAgAEnUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU0NfYTM1ZTZjOTYyYWRlNDFlZGFhZGRiNGZjOTgwZDhmZmMAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAxNgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAADBEAAAAAAAAAAAA
AEpEAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8RAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBh
ADMANQBlADYAYwA5ADYAMgBhAGQAZQA0ADEAZQBkAGEAYQBkAGQAYgA0AGYAYwA5ADgAMABkADgA
ZgBmAGMAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADkANwAwAEIAMABDADkARQA2ADcA
OAAwADQANAA5AEMAOQA0ADEARgA4ADgAMwBFAEIAMQBFAEMANQA0AEMAOAAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMQA2AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOQA3ADAAQgAwAEMA
OQBFADYANwA4ADAANAA0ADkAQwA5ADQAMQBGADgAOAAzAEUAQgAxAEUAQwA1ADQAQwA4AC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGEAMwA1AGUANgBjADkA
NgAyAGEAZABlADQAMQBlAGQAYQBhAGQAZABiADQAZgBjADkAOAAwAGQAOABmAGYAYwAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAXDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_970b0c9e6780449c941f883eb1ec54c8</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::var_InputFileFullPath,$Package::ExcelWorksheetNum,$Project::AsposeLicense</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="1">
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D13.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;178&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">aa72d7501df0cbfcc294ed39d2aab9ab</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">3929770fce5ba5df89847c41901577ef503dbe28</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output]"
                  hasSideEffects="true"
                  name="Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[ForecastDate]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[ForecastDate]"
                      name="ForecastDate" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[BankAccount]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[BankAccount]"
                      name="BankAccount" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[Comment]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[Comment]"
                      name="Comment" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[Amount]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[Amount]"
                      name="Amount" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[FlowCode]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[FlowCode]"
                      name="FlowCode" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[Currency]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[Currency]"
                      name="Currency" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[Portfolio]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output].Columns[Portfolio]"
                      name="Portfolio" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\SCR - Get Row Number"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SCR - Get Row Number"
              version="10">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 varRowCount
    {
        get
        {
            return (Int32)(ParentComponent.ReadWriteVariables["var_RowCount"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["var_RowCount"].Value = value;
        }
    }

    public Int32 varRowNumber
    {
        get
        {
            return (Int32)(ParentComponent.ReadWriteVariables["var_RowNumber"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["var_RowNumber"].Value = value;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    private int m_rowNumber;
    private int m_rowCount;
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        // Initialize the row number
        m_rowNumber = 0;
        m_rowCount = 0;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        this.Variables.varRowNumber = m_rowNumber;
        this.Variables.varRowCount = m_rowCount;
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        // Increase  the row number  and assign  the value  to the output column
        m_rowNumber++;
        Row.RowNumber = m_rowNumber;
        m_rowCount++;
        Row.RowCount = m_rowNumber;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 RowCount
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RowCount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 RowNumber
    {
        set
        {
            this[1] = value;
        }
    }
    public bool RowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cf88bddbfe674c53b7064ae0757f9548.Properties.Settings.get_Default():SC_cf88bddbfe674c53b7064ae0757f9548.Properties.Sett" +
    "ings")]

namespace SC_cf88bddbfe674c53b7064ae0757f9548.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_cf88bddbfe674c53b7064ae0757f9548.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{d84a8d02-4bc3-48f0-b3a0-b2cf2f4e360c}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_cf88bddbfe674c53b7064ae0757f9548</RootNamespace><AssemblyName>SC_5D43B23E065F4A13A1A8C1E17A98EC4A</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptComponent" GeneratedNamespace="SC_cf88bddbfe674c53b7064ae0757f9548" IconIndex="0"></Host><ProjectClient><HostIdentifier>SSIS_SC130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_cf88bddbfe674c53b7064ae0757f9548</msb:CodeName>
		<msb:DisplayName>SC_cf88bddbfe674c53b7064ae0757f9548</msb:DisplayName>
		<msb:ProjectId>{EE4657A5-9614-4C5F-AB8D-41134CF70023}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_cf88bddbfe674c53b7064ae0757f9548.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_cf88bddbfe674c53b7064ae0757f9548")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_cf88bddbfe674c53b7064ae0757f9548")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cf88bddbfe674c53b7064ae0757f9548.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cf88bddbfe674c53b7064ae0757f9548.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cf88bddbfe674c53b7064ae0757f9548.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_cf88bddbfe674c53b7064ae0757f9548.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_cf88bddbfe674c53b7064ae0757f9548.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_5D43B23E065F4A13A1A8C1E17A98EC4A.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
CwUbAAIA2SAAAAAAhgiCBgEABQDoIAAAAACGCHADowAGAP8gAAAAAIYIagQBAAcADiEAAAAAhghb
A6MACAAlIQAAAACGAGcHKwAJAC0hAAAAAIYAPAYrAAkANSEAAAAAhhgLBQYACQBVIQAAAADGAP8G
qAAJAHohAAAAAMYB+AadAA0AjSEAAAAAxgFQB50ADgCPIQAAAACGGAsFsgAPAJ4hAAAAAIYYCwWy
ABAArSEAAAAAhgiPBrgAEQDTIQAAAACGCJ8GAQARAPUhAAAAAIYIeAS4ABIAGyIAAAAAhgiJBAEA
EgA9IgAAAACDGAsFBgATAEUiAAAAAJMIzwS8ABMAcSIAAAAAkwjiAMEAEwB4IgAAAACTCO4AxgAT
AIAiAAAAAJYISAbMABQAhyIAAAAAhhgLBQYAFACPIgAAAACRGBEF0QAUAAAAAQBrBwAAAQDIBAAA
AgD0BQAAAwA9BAAAAQD2AgAAAQD2AgAAAQD2AgAAAQD2AgAAAQBtAAAAAgCyAAAAAwDIBAAABAA9
BAAAAQDIBAAAAQBrBwAAAQB4BgAAAQB4BgAAAQD2AgAAAQD2AgAAAQD2AgkACwUBABEACwUGABkA
CwUKACkACwUQADEACwUQADkACwUQAEEACwUQAEkACwUQAFEACwUQAFkACwUQAGEACwUQAGkACwUG
AJkACwUGALkACwUVAMkACwUGAIkA1QIGAIkA4AIGAHEACwUbAHEAlQMlAHEAhAMBANkACwUQAHEA
ZwcrAHEAPAYrAIkACwUGAOEAIgYvAIkACAY2AJEACwUGAIkA3QU8APEAjANBAIkAOwdHAPkADAdN
APkA7AJUABEBoABZABEBbwdiAKEACwVoAMEACwUGAC4ACwDsAC4AEwD1AC4AGwAUAS4AIwAdAS4A
KwBGAS4AMwBGAS4AOwBGAS4AQwAdAS4ASwBMAS4AUwBGAS4AWwBjAUMAYwCtAeMAawCtAekAcwAU
AQkBcwAUASEBewCtAQMAAQAGAAUABwAHAAgACQAAAKYG1QAAAHQD2QAAAJAE1QAAAF8D2QAAAKMG
1QAAAI0E1QAAANME3QAAAAIB4gAAAEwG5wABAAYAAwABAAcABQABAAgABwABAAkACQACABIACwAB
ABMACwACABQADQABABUADQACABcADwACABgAEQABABkAEQACABoAEwAEgAAAAQAAAAAAAAAAAAAA
AABJAAAABAAAAAAAAAAAAAAAcAB1AAAAAAANAAAAAAAAAAAAAAB5ALoGAAAAAA0AAAAAAAAAAAAA
AHkA1wYAAAAABAAAAAAAAAAAAAAAcACeAwAAAAANAAAAAAAAAAAAAAB5AEcEAAAAAAAAAAABAAAA
XAUAAAAAAElEVFNWYXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250
ZXh0MTAwAEludDMyADxNb2R1bGU+AFNDXzVENDNCMjNFMDY1RjRBMTNBMUE4QzFFMTdBOThFQzRB
AElucHV0SUQAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBU
eXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0
ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhh
dGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0
QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRl
AFBvc3RFeGVjdXRlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0
cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfNUQ0M0IyM0UwNjVGNEExM0ExQThDMUUxN0E5
OEVDNEEuZGxsAHNldF9Sb3dOdW1iZXJfSXNOdWxsAHNldF9Sb3dDb3VudF9Jc051bGwAU2V0TnVs
bABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0u
Q29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZh
bGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0
TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABzZXRf
Um93TnVtYmVyAGdldF92YXJSb3dOdW1iZXIAc2V0X3ZhclJvd051bWJlcgBtX3Jvd051bWJlcgBJ
bnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFn
ZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBT
eXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAFNDX2NmODhiZGRiZmU2NzRjNTNiNzA2NGFlMDc1N2Y5NTQ4LlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19jZjg4YmRkYmZlNjc0YzUzYjcw
NjRhZTA3NTdmOTU0OC5Qcm9wZXJ0aWVzAGdldF9SZWFkV3JpdGVWYXJpYWJsZXMAQnVmZmVyQ29s
dW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBP
YmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25l
bnQAU2NyaXB0Q29tcG9uZW50AHNldF9Sb3dDb3VudABnZXRfdmFyUm93Q291bnQAc2V0X3ZhclJv
d0NvdW50AG1fcm93Q291bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQu
U3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AEdldFZhbHVlV2l0aENv
bnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQASW5w
dXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQAAgJtJAHMATgB1AGwAbAAg
AHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEA
bABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBv
AGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAAAZdgBhAHIAXwBSAG8A
dwBDAG8AdQBuAHQAABt2AGEAcgBfAFIAbwB3AE4AdQBtAGIAZQByAABxUwBDAF8AYwBmADgAOABi
AGQAZABiAGYAZQA2ADcANABjADUAMwBiADcAMAA2ADQAYQBlADAANwA1ADcAZgA5ADUANAA4AC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAOixF12MVaZAt+RKJswB
CawABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkJIAMBEj0dCBJBBSACAQgcAyAAAgYgAgIOEXUF
IAEdCAgEIAASeQUgARJ9HAUAABKAgQYgARwSgIUEIAEBHAgAARKAiRGAjQUgABKAkQcgAgEOEoCR
CLd6XFYZNOCJCImEXc2AgMyRAgYIAwYSFAMGEhgDBhJFAwYSUQMGElUDBhIgBSABARIMBCABAQIJ
IAQBCA4SPRJBBSABARJFAyAACAQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAIAygAAgQIABJR
BAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU0NfY2Y4OGJkZGJmZTY3NGM1M2I3MDY0YWUwNzU3Zjk1NDgAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAxNgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAAAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAKA0AAAA
AAAAAAAAALo0AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsNAAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfAGMAZgA4ADgAYgBkAGQAYgBmAGUANgA3ADQAYwA1ADMAYgA3ADAANgA0AGEAZQAwADcA
NQA3AGYAOQA1ADQAOAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANQBEADQAMwBCADIA
MwBFADAANgA1AEYANABBADEAMwBBADEAQQA4AEMAMQBFADEANwBBADkAOABFAEMANABBAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA1AEQA
NAAzAEIAMgAzAEUAMAA2ADUARgA0AEEAMQAzAEEAMQBBADgAQwAxAEUAMQA3AEEAOQA4AEUAQwA0
AEEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYwBmADgA
OABiAGQAZABiAGYAZQA2ADcANABjADUAMwBiADcAMAA2ADQAYQBlADAANwA1ADcAZgA5ADUANAA4
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADMNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_5d43b23e065f4a13a1a8c1e17a98ec4a</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::var_RowCount,User::var_RowNumber</property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">1576fbc69a80d8989f0136aa1b079751</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">73b3ae628982862ce3f3b3cbc63d885f41aa4d36</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\SCR - Get Row Number.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\SCR - Get Row Number.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\SCR - Get Row Number.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\SCR - Get Row Number.Outputs[Output 0].Columns[RowCount]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\SCR - Get Row Number.Outputs[Output 0].Columns[RowCount]"
                      name="RowCount" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\SCR - Get Row Number.Outputs[Output 0].Columns[RowNumber]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\SCR - Get Row Number.Outputs[Output 0].Columns[RowNumber]"
                      name="RowNumber" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail).Paths[Derived Column Output]"
              endId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Outputs[Derived Column Output]" />
            <path
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail).Paths[Output]"
              endId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\SCR - Get Row Number.Inputs[Input 0]"
              name="Output"
              startId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel.Outputs[Output]" />
            <path
              refId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail).Paths[Output 0]"
              endId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\SCR - Get Row Number.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DFT - DM_Staging - Read Excel file info"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{a4e1b31d-3fc5-4121-bdbd-739e484412ed}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DFT - DM_Staging - Read Excel file info"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="DER - Add columns required by FileInfo"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Outputs[Derived Column Output].Columns[ProviderCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="4"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Outputs[Derived Column Output].Columns[ProviderCode]"
                      name="ProviderCode"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Temp"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Temp"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Outputs[Derived Column Output].Columns[DataLoadingID]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Outputs[Derived Column Output].Columns[DataLoadingID]"
                      name="DataLoadingID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[User::var_DataLoadingID]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[User::var_DataLoadingID]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE_DST - DM_Staging - FileInfo"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[staging].[FileInfo]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Connections[OleDbConnection]"
                  connectionManagerID="{E24982FB-22F7-4235-9AE4-99A820D08725}:external"
                  connectionManagerRefId="Project.ConnectionManagers[oledb IC_DM_Staging]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].Columns[FileName]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FileName"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileName]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].Columns[FileSize]"
                      cachedDataType="i8"
                      cachedName="FileSize"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[FileSize]"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileSize]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].Columns[FileCreationDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="FileCreationDate"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[FileCreationDate]"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileCreationDate]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].Columns[FileLastModificationDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="FileLastModificationDate"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[FileLastModificationDate]"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileLastModificationDate]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].Columns[DataLoadingID]"
                      cachedDataType="i4"
                      cachedName="DataLoadingID"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[DataLoadingID]"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Outputs[Derived Column Output].Columns[DataLoadingID]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].Columns[FileExists]"
                      cachedDataType="bool"
                      cachedName="FileExists"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[FileExists]"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileExists]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].Columns[IsFileReadable]"
                      cachedDataType="bool"
                      cachedName="IsFileReadable"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[IsFileReadable]"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[IsFileReadable]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].Columns[ProviderCode]"
                      cachedDataType="wstr"
                      cachedLength="4"
                      cachedName="ProviderCode"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[ProviderCode]"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Outputs[Derived Column Output].Columns[ProviderCode]" />
                    <inputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].Columns[FileExtension]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FileExtension"
                      externalMetadataColumnId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[FileExtension]"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileExtension]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                      dataType="wstr"
                      length="260"
                      name="FileName" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[FileSize]"
                      dataType="i4"
                      name="FileSize" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[FileCreationDate]"
                      dataType="dbTimeStamp2"
                      name="FileCreationDate"
                      scale="3" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[FileLastModificationDate]"
                      dataType="dbTimeStamp2"
                      name="FileLastModificationDate"
                      scale="3" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[DataLoadingID]"
                      dataType="i4"
                      name="DataLoadingID" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[FileExists]"
                      dataType="bool"
                      name="FileExists" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[IsFileReadable]"
                      dataType="bool"
                      name="IsFileReadable" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[ProviderCode]"
                      dataType="wstr"
                      length="255"
                      name="ProviderCode" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[FileExtension]"
                      dataType="wstr"
                      length="255"
                      name="FileExtension" />
                    <externalMetadataColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SCR - Read Excel file info"
              version="10">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public FileInfoBuffer FileInfoBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != FileInfoBuffer)
        {
            FileInfoBuffer.SetEndOfRowset();
            FileInfoBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"FileInfo"))
            {
                FileInfoBuffer = new FileInfoBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String varInputFileFullPath
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["var_InputFileFullPath"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean varFileExists
    {
        get
        {
            return (Boolean)(ParentComponent.ReadWriteVariables["var_FileExists"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["var_FileExists"].Value = value;
        }
    }

    public Boolean varIsFileReadable
    {
        get
        {
            return (Boolean)(ParentComponent.ReadWriteVariables["var_IsFileReadable"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["var_IsFileReadable"].Value = value;
        }
    }

    public String varTemplateName
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["var_TemplateName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["var_TemplateName"].Value = value;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Namespaces
using System;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string inputFile;
    private string fileName;
    private bool fileExists;
    private bool? isFileReadable;

    public override void PreExecute()
    {
        inputFile = Variables.varInputFileFullPath;
    }

    public override void PostExecute()
    {
        Variables.varIsFileReadable = isFileReadable.HasValue ? isFileReadable.Value : false;
        Variables.varFileExists = fileExists;
        if (!string.IsNullOrWhiteSpace(fileName) && fileName.IndexOf("Ancar", 0, StringComparison.InvariantCultureIgnoreCase) >= 0)
        {
            Variables.varTemplateName = "BRAZIL";
        }
    }

    public override void CreateNewOutputRows()
    {
        isFileReadable = null;
        fileExists = false;

        // Add row to output buffer
        FileInfoBuffer.AddRow();
        FileInfoBuffer.FileName = Path.GetFileName(inputFile);
        FileInfoBuffer.FileExtension = Path.GetExtension(inputFile).ToUpper();
        FileInfoBuffer.IsFileReadable_IsNull = isFileReadable == null;
        FileInfoBuffer.FileExists = fileExists;

        // Verify if file exists
        FileInfo fileInfo = new FileInfo(inputFile);
        if (fileInfo.Exists)
        {
            fileName = fileInfo.Name;
            fileExists = true;
            FileInfoBuffer.FileExists = fileExists;

            // Get the file info
            FileInfoBuffer.FileCreationDate = fileInfo.CreationTime;
            FileInfoBuffer.FileLastModificationDate = fileInfo.LastWriteTime;
            FileInfoBuffer.FileSize = fileInfo.Length;


            // Verify if the file is readable
            try
            {
                using (FileStream stream = File.Open(inputFile, FileMode.Open, FileAccess.Read))
                {
                    isFileReadable = true;
                    FileInfoBuffer.IsFileReadable = (bool)isFileReadable;
                }
            }
            catch (IOException)
            {
                isFileReadable = false;
                FileInfoBuffer.IsFileReadable = (bool)isFileReadable;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class FileInfoBuffer: ScriptBuffer

{
    public FileInfoBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FileName
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FileName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime FileCreationDate
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FileCreationDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime FileLastModificationDate
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FileLastModificationDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 FileSize
    {
        set
        {
            this[3] = value;
        }
    }
    public bool FileSize_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean FileExists
    {
        set
        {
            this[4] = value;
        }
    }
    public bool FileExists_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FileExtension
    {
        set
        {
            this[5] = value;
        }
    }
    public bool FileExtension_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsFileReadable
    {
        set
        {
            this[6] = value;
        }
    }
    public bool IsFileReadable_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6a6626d600fd4d5a8c040def6bbc27e4.Properties.Settings.get_Default():SC_6a6626d600fd4d5a8c040def6bbc27e4.Properties.Sett" +
    "ings")]

namespace SC_6a6626d600fd4d5a8c040def6bbc27e4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6a6626d600fd4d5a8c040def6bbc27e4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6a6626d600fd4d5a8c040def6bbc27e4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6a6626d600fd4d5a8c040def6bbc27e4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_6a6626d600fd4d5a8c040def6bbc27e4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_6a6626d600fd4d5a8c040def6bbc27e4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_6a6626d600fd4d5a8c040def6bbc27e4</msb:CodeName>
		<msb:DisplayName>SC_6a6626d600fd4d5a8c040def6bbc27e4</msb:DisplayName>
		<msb:ProjectId>{2E9D27EC-FDF8-4CCF-BB2C-D6046A0FAE9D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_6a6626d600fd4d5a8c040def6bbc27e4.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_6a6626d600fd4d5a8c040def6bbc27e4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_6a6626d600fd4d5a8c040def6bbc27e4")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_6a6626d600fd4d5a8c040def6bbc27e4.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{524F1311-A566-4A71-9D45-4A57DBF0709E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_6a6626d600fd4d5a8c040def6bbc27e4</RootNamespace>
    <AssemblyName>SC_6a6626d600fd4d5a8c040def6bbc27e4</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_6a6626d600fd4d5a8c040def6bbc27e4.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AACGCEwC+gAIALkiAAAAAIYINQX1AAkA0CIAAAAAhghvBAABCgDfIgAAAACGCHUF9QALAPYiAAAA
AIYIyQj1AAwABSMAAAAAhgiiBfUADQAcIwAAAACGCAgGEAAOACYjAAAAAIYIiQX1AA8APSMAAAAA
hgjXAPUAEABMIwAAAACGCAcF9QARAGMjAAAAAIYABwoGABIAayMAAAAAhgAwCQYAEgBzIwAAAACG
ADMJIQASAHsjAAAAAIYYaAcGABIAmyMAAAAAxgEHCQYAEgCdIwAAAACBAJcABgASALwjAAAAAMYA
twkFARIAmyMAAAAAxgEVCQYAFgARJAAAAACGGGgHEQEWACAkAAAAAIYYaAcRARcALyQAAAAAhgil
BEQAGABVJAAAAACGCNgIIQAYAHskAAAAAIYI6gj1ABgAnSQAAAAAhgjqACEAGQDDJAAAAACGCAAB
9QAZAOUkAAAAAIYIigFEABoACyUAAAAAhgieARAAGgAoJQAAAACDGGgHBgAbADAlAAAAAJMIJAcX
ARsAXCUAAAAAkwgEAhwBGwBjJQAAAACTCBACIQEbAGslAAAAAJYIPwknARwAciUAAAAAhhhoBwYA
HAB6JQAAAACRGG4HLAEcAAAAAQAdBwAAAgBxCAAAAwDMBgAAAQBpBAAAAQBpBAAAAQBpBAAAAQBp
BAAAAQBpBAAAAQBpBAAAAQBpBAAAAQBpBAAAAQBpBAAAAQBpBAAAAQBpBAAAAQBpBAAAAQBpBAAA
AQBpBAAAAQANCQAAAgB1BwAAAwCrCAAABADMBgAAAQBvCQAAAQBvCQAAAQBpBAAAAQBpBAAAAQBp
BAAAAQBpBAkAaAcBABEAaAcGABkAaAcKACkAaAcQADEAaAcQADkAaAcQAEEAaAcQAEkAaAcQAFEA
aAcQAFkAaAcQAGEAaAcQAGkAaAcGAMEAaAcGAOEAaAcVAPEAaAcGAAwAXAQhAAwASAQlAPkAqwAq
APkAfAQvAAkBdQE/AAkBGgY/APkAOAdEAHkAaAcQABEBvgghABEBXwFEABEBzQFIABEBuwFIAHkA
vgRNABkB+AVRAAwAaAddADEBRAIGAJEAaAdjAJEA1AVtAJEAuAUBADkBaAcQAJEABwoGAJEAMAkG
AJEAMwkhALEAaAcGALEAeAB3ALEAhQh+ALkAaAcGALEAWwiEAFEBywWKALEA8gmRAFkBwwmXALEA
RAiEAFkBUgSeAHEBQwGjAHEBDgqsAMkAaAeyAOkAaAcGAC4ACwBQAS4AEwBZAS4AGwB4AS4AIwCB
AS4AKwCqAS4AMwCqAS4AOwCqAS4AQwCBAS4ASwCwAS4AUwCqAS4AWwDHAUMAYwARAuMAawARAoEB
ewARAmkCcwB4AYkCcwB4ATgAcwADAAEABgAPAAcAEwAIABUAAAB4ATABAAAlBTQBAABtAjgBAABd
BTQBAABQAjgBAAA5BTQBAABzBD0BAAB5BTQBAADxCDQBAACmBTQBAAAMBjABAACNBTQBAAAHATQB
AAALBTQBAACpBDABAADuCDQBAAAEATQBAACiATABAAAoB0EBAAAkAkYBAABDCUsBAQAGAAMAAQAH
AAUAAQAIAAcAAQAJAAkAAQAKAAsAAQALAA0AAQAMAA8AAQANABEAAQAOABMAAQAPABUAAQAQABcA
AQARABkAAQASABsAAQATAB0AAgAeAB8AAgAfACEAAQAgACEAAgAhACMAAQAiACMAAgAjACUAAQAk
ACUAAgAmACcAAgAnACkAAQAoACkAAgApACsAGwAEgAAAAQAAAAAAAAAAAAAAAABLAAAABAAAAAAA
AAAAAAAAugCOAAAAAAANAAAAAAAAAAAAAADDAHkJAAAAAA0AAAAAAAAAAAAAAMMAlgkAAAAABAAA
AAAAAAAAAAAAugDdBQAAAAANAAAAAAAAAAAAAADDANYGAAAAAAAAAAABAAAAwwcAAAAAAElEVFNW
YXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAE51bGxh
YmxlYDEASW50NjQAU0NfNmE2NjI2ZDYwMGZkNGQ1YThjMDQwZGVmNmJiYzI3ZTQAPE1vZHVsZT4A
R2V0T3V0cHV0SUQAU3lzdGVtLklPAG1zY29ybGliAE1hcmtPdXRwdXRzRmluaXNoZWQASXNOdWxs
T3JXaGl0ZVNwYWNlAGRlZmF1bHRJbnN0YW5jZQBGaWxlTW9kZQBzZXRfSXNGaWxlUmVhZGFibGUA
Z2V0X3ZhcklzRmlsZVJlYWRhYmxlAHNldF92YXJJc0ZpbGVSZWFkYWJsZQBpc0ZpbGVSZWFkYWJs
ZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBpbnB1dEZp
bGUAZ2V0X05hbWUAc2V0X0ZpbGVOYW1lAEdldEZpbGVOYW1lAGZpbGVOYW1lAGdldF92YXJUZW1w
bGF0ZU5hbWUAc2V0X3ZhclRlbXBsYXRlTmFtZQBEYXRlVGltZQBnZXRfTGFzdFdyaXRlVGltZQBn
ZXRfQ3JlYXRpb25UaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAERpc3Bvc2UAc2V0X0ZpbGVMYXN0TW9kaWZpY2F0aW9uRGF0ZQBzZXRfRmlsZUNyZWF0aW9u
RGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RF
eGVjdXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAZ2V0X0hhc1ZhbHVlAHZhbHVlAHNldF9GaWxlU2l6
ZQBJbmRleE9mAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAGdldF92YXJJbnB1dEZp
bGVGdWxsUGF0aABnZXRfTGVuZ3RoAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ182YTY2MjZkNjAw
ZmQ0ZDVhOGMwNDBkZWY2YmJjMjdlNC5kbGwAc2V0X0lzRmlsZVJlYWRhYmxlX0lzTnVsbABzZXRf
RmlsZU5hbWVfSXNOdWxsAHNldF9GaWxlTGFzdE1vZGlmaWNhdGlvbkRhdGVfSXNOdWxsAHNldF9G
aWxlQ3JlYXRpb25EYXRlX0lzTnVsbABzZXRfRmlsZVNpemVfSXNOdWxsAHNldF9GaWxlRXh0ZW5z
aW9uX0lzTnVsbABzZXRfRmlsZUV4aXN0c19Jc051bGwAU2V0TnVsbABGaWxlU3RyZWFtAGdldF9J
dGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBCb29sZWFuAE9wZW4AU2NyaXB0TWFpbgBz
ZXRfRmlsZUV4dGVuc2lvbgBHZXRFeHRlbnNpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASU9FeGNlcHRpb24ASW52YWxpZE9wZXJh
dGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEZpbGVJbmZvAEN1bHR1cmVJbmZvAEZpbGVT
eXN0ZW1JbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRT
UnVudGltZVdyYXAAUGlwZWxpbmVCdWZmZXIARmlsZUluZm9CdWZmZXIAU2NyaXB0QnVmZmVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIAVG9VcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
LldyYXBwZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzZhNjYyNmQ2MDBm
ZDRkNWE4YzA0MGRlZjZiYmMyN2U0LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTQ182YTY2MjZkNjAwZmQ0ZDVhOGMwNDBkZWY2YmJjMjdlNC5Qcm9wZXJ0aWVz
AGdldF9SZWFkV3JpdGVWYXJpYWJsZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVt
bkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBDb25uZWN0aW9ucwBCdWZmZXJzAEZp
bGVBY2Nlc3MAZ2V0X0V4aXN0cwBzZXRfRmlsZUV4aXN0cwBnZXRfdmFyRmlsZUV4aXN0cwBzZXRf
dmFyRmlsZUV4aXN0cwBmaWxlRXhpc3RzAEZpbmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93
cwBPYmplY3QAU2V0RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRD
b21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWlj
cm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQAR2V0VmFsdWVXaXRoQ29u
dGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABBZGRS
b3cAZ2V0X0Fzc2VtYmx5AAAAC0EAbgBjAGEAcgAADUIAUgBBAFoASQBMAACAm0kAcwBOAHUAbABs
ACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYA
YQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABj
AG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEUYAaQBsAGUASQBuAGYAbwAAK3YAYQByAF8A
SQBuAHAAdQB0AEYAaQBsAGUARgB1AGwAbABQAGEAdABoAAAddgBhAHIAXwBGAGkAbABlAEUAeABp
AHMAdABzAAAldgBhAHIAXwBJAHMARgBpAGwAZQBSAGUAYQBkAGEAYgBsAGUAACF2AGEAcgBfAFQA
ZQBtAHAAbABhAHQAZQBOAGEAbQBlAABxUwBDAF8ANgBhADYANgAyADYAZAA2ADAAMABmAGQANABk
ADUAYQA4AGMAMAA0ADAAZABlAGYANgBiAGIAYwAyADcAZQA0AC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAJ7TVmV2uHdOipduXIFeYlAABCABAQgDIAABBSABARER
BCABAQ4FIAEBEW0FFRE5AQIDIAACBCAAEwAEAAECDgggAwgOCBGAgQYHAhI9EkEEAAEODgMgAA4E
IAARVQMgAAoLAAMSQQ4RgJERgJUFIAEBEwAJIAMBEk0dCBJRBSACAQgcAwcBCAYAAggSUQ4FIAEd
CAgFIAASgKkGIAESgK0cBQAAEoCxBiABHBKAtQQgAQEcCAABEoC5EYC9BSAAEoDBByACAQ4SgMEI
t3pcVhk04IkIiYRdzYCAzJECBg4CBgIGBhUROQECAwYSFAMGEhgDBhIMAwYSWQMGEmUDBhJpAwYS
IAQgAQECBSABARFVBCABAQoLIAQBCB0IHRJNElEFIAEBElkEAAASZQQAABJpBQABARJpBAAAEiAD
AAABAygADgMoAAIEKAARVQMoAAoECAASZQQIABJpBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzZhNjYyNmQ2MDBmZDRkNWE4YzA0MGRl
ZjZiYmMyN2U0AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41
BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAABoPQAAAAAAAAAAAACCPQAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAdD0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANgBhADYANgAyADYAZAA2ADAAMABmAGQANABkADUAYQA4AGMAMAA0ADAAZABlAGYANgBiAGIA
YwAyADcAZQA0AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA2AGEANgA2ADIANgBkADYA
MAAwAGYAZAA0AGQANQBhADgAYwAwADQAMABkAGUAZgA2AGIAYgBjADIANwBlADQALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADEANgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADYAYQA2ADYA
MgA2AGQANgAwADAAZgBkADQAZAA1AGEAOABjADAANAAwAGQAZQBmADYAYgBiAGMAMgA3AGUANAAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA2AGEANgA2ADIA
NgBkADYAMAAwAGYAZAA0AGQANQBhADgAYwAwADQAMABkAGUAZgA2AGIAYgBjADIANwBlADQAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAJQ9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_6a6626d600fd4d5a8c040def6bbc27e4</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::var_InputFileFullPath</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::var_FileExists,User::var_IsFileReadable,User::var_TemplateName</property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">b9e5811c8af2de88abcfda2e16ef2446</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">55f41958522de8d7874126f347006915cc0d99e4</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo]"
                  hasSideEffects="true"
                  name="FileInfo">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileName]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileName]"
                      name="FileName" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileCreationDate]"
                      dataType="dbTimeStamp"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileCreationDate]"
                      name="FileCreationDate" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileLastModificationDate]"
                      dataType="dbTimeStamp"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileLastModificationDate]"
                      name="FileLastModificationDate" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileSize]"
                      dataType="i8"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileSize]"
                      name="FileSize" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileExists]"
                      dataType="bool"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileExists]"
                      name="FileExists" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileExtension]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[FileExtension]"
                      name="FileExtension" />
                    <outputColumn
                      refId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[IsFileReadable]"
                      dataType="bool"
                      lineageId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo].Columns[IsFileReadable]"
                      name="IsFileReadable" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DFT - DM_Staging - Read Excel file info.Paths[Derived Column Output]"
              endId="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Outputs[Derived Column Output]" />
            <path
              refId="Package\DFT - DM_Staging - Read Excel file info.Paths[FileInfo]"
              endId="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo.Inputs[Derived Column Input]"
              name="FileInfo"
              startId="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info.Outputs[FileInfo]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL - DM_Staging - Load DataLoading"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E2DF6EF1-F657-4F20-8889-BA1059E62681}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL - DM_Staging - Load DataLoading"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::sql_InsertDataLoading"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="DataLoadingID"
            SQLTask:DtsVariableName="User::var_DataLoadingID" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL - DM_Staging - Update DataLoading validation flag"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{a1d60eef-71d5-4528-a712-25b07d10c641}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL - DM_Staging - Update DataLoading validation flag"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::sql_UpdateDataLoadingValidationFlag" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL - DM_Staging - Validate PART_FINANCE_FORECASTS_File"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{fc076b4a-3092-4c12-89d2-baf027a62e16}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL - DM_Staging - Validate PART_FINANCE_FORECASTS_File"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::sql_ValidateFile" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL - DM_Staging - Validate PART_FINANCE_FORECAST_Detail"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{056C4AFC-59F8-4686-A962-9A1C0EC11A2E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL - DM_Staging - Validate PART_FINANCE_FORECAST_Detail"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::sql_ValidateDetail" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL - truncate Staging"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{adb6ab86-d2dd-4772-9c4b-8b85975c505d}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL - truncate Staging"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E24982FB-22F7-4235-9AE4-99A820D08725}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::sql_TruncateStaging" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{C3616F00-1398-499E-909C-DD9A5E63C2E9}"
      DTS:From="Package\SQL - DM_Staging - Load DataLoading"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\SQL - truncate Staging" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{8273F47C-951A-488C-BF02-C76C217E5A83}"
      DTS:From="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\SQL - DM_Staging - Validate PART_FINANCE_FORECAST_Detail" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{45D37BF1-F68E-420D-B62D-88601219F42D}"
      DTS:From="Package\DFT - DM_Staging - Read Excel file info"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\SQL - DM_Staging - Validate PART_FINANCE_FORECASTS_File" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{01B3FD60-D128-4261-8DCB-C1E155244155}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::var_TemplateName] == &quot;DEFAULT&quot;"
      DTS:From="Package\SQL - DM_Staging - Validate PART_FINANCE_FORECASTS_File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{7FD9E47E-F8C0-4903-8E8E-A1C24A82FCD9}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::var_TemplateName] == &quot;BRAZIL&quot;"
      DTS:From="Package\SQL - DM_Staging - Validate PART_FINANCE_FORECASTS_File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{70A9818F-1E83-495F-9830-8FFC4D10E8B8}"
      DTS:From="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\SQL - DM_Staging - Validate PART_FINANCE_FORECAST_Detail" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{0BC514A2-79BC-4320-984A-61C8BA90C840}"
      DTS:From="Package\SQL - DM_Staging - Validate PART_FINANCE_FORECAST_Detail"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\SQL - DM_Staging - Update DataLoading validation flag" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{D05C2AA6-0D73-4780-B82E-40C990750A72}"
      DTS:From="Package\SQL - truncate Staging"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\DFT - DM_Staging - Read Excel file info" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="461,42"
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)"
          TopLeft="578.5,380.5" />
        <NodeLayout
          Size="470,42"
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)"
          TopLeft="40,379.5" />
        <NodeLayout
          Size="265,42"
          Id="Package\DFT - DM_Staging - Read Excel file info"
          TopLeft="367,185.5" />
        <NodeLayout
          Size="260,42"
          Id="Package\SQL - DM_Staging - Load DataLoading"
          TopLeft="369,0.5" />
        <NodeLayout
          Size="340,42"
          Id="Package\SQL - DM_Staging - Update DataLoading validation flag"
          TopLeft="349,685.5" />
        <NodeLayout
          Size="379,42"
          Id="Package\SQL - DM_Staging - Validate PART_FINANCE_FORECAST_Detail"
          TopLeft="334.5,535.5" />
        <NodeLayout
          Size="374,42"
          Id="Package\SQL - DM_Staging - Validate PART_FINANCE_FORECASTS_File"
          TopLeft="343,282" />
        <NodeLayout
          Size="186,42"
          Id="Package\SQL - truncate Staging"
          TopLeft="407,95.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="499.5,42.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="275,421.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="187.166666666667,114"
              Start="0,0"
              End="187.166666666667,106.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.1124540199685" />
                  <mssgle:CubicBezierSegment
                    Point1="0,64.1124540199685"
                    Point2="0,68.1124540199685"
                    Point3="4,68.1124540199685" />
                  <mssgle:LineSegment
                    End="183.166666666667,68.1124540199685" />
                  <mssgle:CubicBezierSegment
                    Point1="183.166666666667,68.1124540199685"
                    Point2="187.166666666667,68.1124540199685"
                    Point3="187.166666666667,72.1124540199685" />
                  <mssgle:LineSegment
                    End="187.166666666667,106.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="499.5,227.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30.5,54.5"
              Start="0,0"
              End="30.5,47">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.25"
                    Point2="0,27.25"
                    Point3="4,27.25" />
                  <mssgle:LineSegment
                    End="26.5,27.25" />
                  <mssgle:CubicBezierSegment
                    Point1="26.5,27.25"
                    Point2="30.5,27.25"
                    Point3="30.5,31.25" />
                  <mssgle:LineSegment
                    End="30.5,47" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="469,324">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-194,55.5"
              Start="0,0"
              End="-194,48">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.3418530351438" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.3418530351438"
                    Point2="0,22.3418530351438"
                    Point3="-4,22.3418530351438" />
                  <mssgle:LineSegment
                    End="-190,22.3418530351438" />
                  <mssgle:CubicBezierSegment
                    Point1="-190,22.3418530351438"
                    Point2="-194,22.3418530351438"
                    Point3="-194,26.3418530351438" />
                  <mssgle:LineSegment
                    End="-194,48" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-105,27.3418530351438,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="591,324">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="218,56.5"
              Start="0,0"
              End="218,49">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.7444089456869" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.7444089456869"
                    Point2="0,22.7444089456869"
                    Point3="4,22.7444089456869" />
                  <mssgle:LineSegment
                    End="214,22.7444089456869" />
                  <mssgle:CubicBezierSegment
                    Point1="214,22.7444089456869"
                    Point2="218,22.7444089456869"
                    Point3="218,26.7444089456869" />
                  <mssgle:LineSegment
                    End="218,49" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="101,27.7444089456869,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="809,422.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-223.166666666667,113"
              Start="0,0"
              End="-223.166666666667,105.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.5149763531266" />
                  <mssgle:CubicBezierSegment
                    Point1="0,63.5149763531266"
                    Point2="0,67.5149763531266"
                    Point3="-4,67.5149763531266" />
                  <mssgle:LineSegment
                    End="-219.166666666667,67.5149763531266" />
                  <mssgle:CubicBezierSegment
                    Point1="-219.166666666667,67.5149763531266"
                    Point2="-223.166666666667,67.5149763531266"
                    Point3="-223.166666666667,71.5149763531266" />
                  <mssgle:LineSegment
                    End="-223.166666666667,105.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="521.5,577.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,108"
              Start="0,0"
              End="0,100.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,100.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="499.75,137.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="369,42"
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail"
          TopLeft="60,623" />
        <NodeLayout
          Size="257,42"
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DER - Add columns required by Detail"
          TopLeft="140,530" />
        <NodeLayout
          Size="192,42"
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping"
          TopLeft="196,181" />
        <NodeLayout
          Size="189,42"
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\SCR - Get Row Number"
          TopLeft="189,447" />
        <NodeLayout
          Size="228,69"
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Read From Brazil Partner forecast worksheet"
          TopLeft="185,44" />
        <NodeLayout
          Size="121,42"
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\Union All"
          TopLeft="233,350" />
        <NodeLayout
          Size="199,42"
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\DC - Flow code or default"
          TopLeft="201,263" />
        <EdgeLayout
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).Paths[Derived Column Output]"
          TopLeft="268.5,572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24,51"
              Start="0,0"
              End="-24,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.5"
                    Point2="0,25.5"
                    Point3="-4,25.5" />
                  <mssgle:LineSegment
                    End="-20,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-20,25.5"
                    Point2="-24,25.5"
                    Point3="-24,29.5" />
                  <mssgle:LineSegment
                    End="-24,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).Paths[Union All Output 1]"
          TopLeft="293.5,392">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10,55"
              Start="0,0"
              End="-10,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.5"
                    Point2="0,27.5"
                    Point3="-4,27.5" />
                  <mssgle:LineSegment
                    End="-6,27.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-6,27.5"
                    Point2="-10,27.5"
                    Point3="-10,31.5" />
                  <mssgle:LineSegment
                    End="-10,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).Paths[Output 0]"
          TopLeft="283.5,489">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-15,41"
              Start="0,0"
              End="-15,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.5"
                    Point2="0,20.5"
                    Point3="-4,20.5" />
                  <mssgle:LineSegment
                    End="-11,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-11,20.5"
                    Point2="-15,20.5"
                    Point3="-15,24.5" />
                  <mssgle:LineSegment
                    End="-15,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).Paths[Output]"
          TopLeft="295.5,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,68"
              Start="0,0"
              End="0,60.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,60.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).Paths[Lookup Match Output]"
          TopLeft="292,223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.5,40"
              Start="0,0"
              End="8.5,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16"
                    Point2="0,20"
                    Point3="4,20" />
                  <mssgle:LineSegment
                    End="4.5,20" />
                  <mssgle:CubicBezierSegment
                    Point1="4.5,20"
                    Point2="8.5,20"
                    Point3="8.5,24" />
                  <mssgle:LineSegment
                    End="8.5,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-43.94138671875,25,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).Paths[Derived Column Output1]"
          TopLeft="297,305">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <AnnotationLayout
          Text="Empty OnError event handler, but with system variable Propagate set to false.&#xA;This will prevent propgating the event to the parent (loop) container."
          ParentId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail).EventHandlers[OnError]"
          FontInfo="{assembly:Null}"
          Size="438,NaN"
          Id="0caa4fd6-511d-4306-bd90-cbcce6233210"
          TopLeft="5.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <PipelineComponentMetadata
    design-time-name="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_BRAZILTEMPLATE (Detail)\LKP - FlowCodeMapping">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[config].[PART_FORECAST_FLOWCODEMAPPING]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="195,42"
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\Read From Partner Excel"
          TopLeft="439,126.5" />
        <NodeLayout
          Size="189,42"
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\SCR - Get Row Number"
          TopLeft="446,232.5" />
        <NodeLayout
          Size="257,42"
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\DER - Add columns required by Detail"
          TopLeft="418,334.5" />
        <NodeLayout
          Size="369,42"
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail"
          TopLeft="363,477.5" />
        <EdgeLayout
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail).Paths[Output 0]"
          TopLeft="543.5,274.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail).Paths[Output]"
          TopLeft="538.5,168.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64"
              Start="0,0"
              End="0,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail).Paths[Derived Column Output]"
          TopLeft="547,376.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,101"
              Start="0,0"
              End="0,93.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,93.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail).EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <AnnotationLayout
          Text="Empty OnError event handler, but with system variable Propagate set to false.&#xA;This will prevent propgating the event to the parent (loop) container."
          ParentId="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail).EventHandlers[OnError]"
          FontInfo="{assembly:Null}"
          Size="438,NaN"
          Id="0caa4fd6-511d-4306-bd90-cbcce6233210"
          TopLeft="5.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <PipelineComponentMetadata
    design-time-name="Package\DFT - DM_Staging - Load PART_FINANCE_FORECAST_DEFAULTTEMPLATE (Detail)\OLE_DST - DM_Staging - PART_FINANCE_FORECASTS_Detail">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\DFT - DM_Staging - Read Excel file info">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="265,42"
          Id="Package\DFT - DM_Staging - Read Excel file info\DER - Add columns required by FileInfo"
          TopLeft="5.5,107.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\DFT - DM_Staging - Read Excel file info\SCR - Read Excel file info"
          TopLeft="39,5.5" />
        <NodeLayout
          Size="236,42"
          Id="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo"
          TopLeft="20,209.5" />
        <EdgeLayout
          Id="Package\DFT - DM_Staging - Read Excel file info.Paths[Derived Column Output]"
          TopLeft="138,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - DM_Staging - Read Excel file info.Paths[FileInfo]"
          TopLeft="138,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DFT - DM_Staging - Read Excel file info\OLE_DST - DM_Staging - FileInfo">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>